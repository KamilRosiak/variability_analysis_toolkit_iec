<?xml version="1.0" encoding="ASCII"?>
<C:Configuration xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:C="http://www.example.org/ppuIECScenario/config" xmlns:SFC="http://www.example.org/ppuIECScenario/SFC" xmlns:ST="http://www.example.org/ppuIECScenario/ST" xmlns:STE="http://www.example.org/ppuIECScenario/STE" identifier="Untitled2">
  <resources name="scenario24_small">
    <globalVariables name="IsSFCResetting" scope="VAR_GLOBAL" type="BOOL" typeName="BOOL">
      <location/>
    </globalVariables>
    <pous controlTasks="//@resources.0/@tasks.0" callees="//@resources.0/@pous.18" identifier="MAIN">
      <declaration>
        <comment identifier="MAIN">
          <statements>//Stack</statements>
          <statements>//Waiting for Signals</statements>
          <statements>//Giving Signals</statements>
          <statements>//Crane</statements>
          <statements>//Stamp</statements>
          <statements>//LargeSortingConveyor</statements>
          <statements>//PicALphaConveyor</statements>
          <statements>//SmallSortingConveyor</statements>
          <statements>//RefillConveyor</statements>
          <statements>//PicAlpha</statements>
          <statements>//PPU</statements>
        </comment>
        <comment identifier="MAIN">
          <statements>//Stack</statements>
          <statements>//Waiting for Signals</statements>
          <statements>//Giving Signals</statements>
          <statements>//Crane</statements>
          <statements>//Stamp</statements>
          <statements>//LargeSortingConveyor</statements>
          <statements>//PicALphaConveyor</statements>
          <statements>//SmallSortingConveyor</statements>
          <statements>//RefillConveyor</statements>
          <statements>//PicAlpha</statements>
          <statements>//PPU</statements>
        </comment>
        <internalVariables name="xPPU" scope="VAR" type="DERIVED" typeName="xPPU">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPPickedUp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPProvided" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPProvided" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_IsSorting" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_IsStamping" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPAvailable" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_IsSending" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_Conveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_Stamp_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPPickedUp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_IsStamping" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPAvailable" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_FollowConveyorInitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_NumberOfWPsAtConveyor" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_IsSorting" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_AllowedToReceive" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_AllowedToSend" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_FollowConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_PicAlpha_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_AutomaticExecuteReceivingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_AutomaticExecuteSendingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_FollowConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_IsSorting" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_AllowedToReceive" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_AllowedToSend" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_FollowConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_AutomaticExecuteReceivingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_IsSending" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_AutomaticExecuteSendingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlpha_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlpha_Conveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlpha_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlpha_Conveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlpha_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PPU_EngineStop" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="MAIN" id="_OteuwDsuEeugKuRu1b-FYw" text="xPPU();&#xA;xPPU.Stack();&#xA;xPPU.Crane();&#xA;xPPU.Stamp();&#xA;xPPU.LargeSortingConveyor();&#xA;xPPU.PicAlphaConveyor();&#xA;xPPU.SmallSortingConveyor();&#xA;xPPU.RefillConveyor();&#xA;xPPU.PicAlpha();&#xA;xPPU.SafetyDoor();&#xA;xPPU.LightGrid();&#xA;&#xA;&#xA;//Stack&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_Stack_WPPickedUp := xPPU.Crane.Table.AtStack.DI_SwitchTrue AND xPPU.Crane.WPPickedUp;&#x9;&#xA;&#x9;//Giving Signals&#xA;&#x9;Stack_WPProvided := xPPU.Stack.WPProvided;&#xA;&#x9;Stack_WPType_Black := xPPU.Stack.WPType_Black;&#xA;&#x9;Stack_WPType_White := xPPU.Stack.WPType_White;&#xA;&#x9;Stack_WPType_Metallic := xPPU.Stack.WPType_Metallic;&#xA;&#x9;Stack_WPWeight_Light := xPPU.Stack.WPWeight_Light;&#xA;&#x9;Stack_WPWeight_Medium := xPPU.Stack.WPWeight_Medium;&#xA;&#x9;Stack_WPWeight_Heavy := xPPU.Stack.WPWeight_Heavy;&#x9;&#xA;//Crane&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_Stack_WPProvided := Stack_WPProvided;&#xA;&#x9;Check_Stack_WPType_Black := Stack_WPType_Black;&#xA;&#x9;Check_Stack_WPType_White := Stack_WPType_White;&#xA;&#x9;Check_Stack_WPType_Metallic := Stack_WPType_Metallic;&#xA;&#x9;Check_LargeSortingConveyor_IsSorting := LargeSortingConveyor_IsSorting;&#xA;&#x9;Check_LargeSortingConveyor_AutomaticExecuteCompleted := LargeSortingConveyor_AutomaticExecuteCompleted;&#x9;&#xA;&#x9;Check_Stamp_IsStamping := Stamp_IsStamping;&#xA;&#x9;Check_Stamp_WPAvailable := Stamp_WPAvailable;&#xA;&#x9;Check_Stamp_AutomaticExecuteCompleted := Stamp_AutomaticExecuteCompleted;&#xA;&#x9;Check_RefillConveyor_IsSending := RefillConveyor_IsSending;&#xA;&#x9;//Giving Signals&#xA;&#x9;Crane_WPType_Black := xPPU.Crane.WPType_Black;&#xA;&#x9;Crane_WPType_White := xPPU.Crane.WPType_White;&#xA;&#x9;Crane_WPType_Metallic := xPPU.Crane.WPType_Metallic;&#xA;&#x9;Crane_WPWeight_Light := xPPU.Crane.WPWeight_Light;&#xA;&#x9;Crane_WPWeight_Medium := xPPU.Crane.WPWeight_Medium;&#xA;&#x9;Crane_WPWeight_Heavy := xPPU.Crane.WPWeight_Heavy;&#xA;&#x9;Crane_Conveyor_AllowedToOperate := xPPU.Crane.Conveyor_AllowedToOperate;&#xA;&#x9;Crane_Stamp_AllowedToOperate := xPPU.Crane.Stamp_AllowedToOperate;&#xA;&#x9;Crane_WPPickedUp := xPPU.Crane.Gripper.VacuumSwitch.DI_TakenIn;&#xA;//Stamp&#x9;&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_Stamp_AllowedToOperate := Crane_Stamp_AllowedToOperate;&#xA;&#x9;Check_Stamp_WPWeight_Light := Crane_WPWeight_Light;&#xA;&#x9;Check_Stamp_WPWeight_Medium := Crane_WPWeight_Medium;&#xA;    Check_Stamp_WPWeight_Heavy := Crane_WPWeight_Heavy;&#xA;&#x9;//Giving Signals&#xA;&#x9;Stamp_WPType_Black := xPPU.Stamp.WPType_Black;&#xA;&#x9;Stamp_WPType_White := xPPU.Stamp.WPType_White;&#xA;&#x9;Stamp_WPType_Metallic := xPPU.Stamp.WPType_Metallic;&#xA;&#x9;Stamp_WPWeight_Light := xPPU.Stamp.WPWeight_Light;&#xA;&#x9;Stamp_WPWeight_Medium := xPPU.Stamp.WPWeight_Medium;&#xA;&#x9;Stamp_WPWeight_Heavy := xPPU.Stamp.WPWeight_Heavy;&#xA;&#x9;Stamp_IsStamping := xPPU.Stamp.IsStamping;&#xA;&#x9;Stamp_WPAvailable := xPPU.Stamp.WPAvailable.DI_SwitchTrue;&#xA;&#x9;Stamp_AutomaticExecuteCompleted&#x9;:= xPPU.Stamp.AutomaticExecuteCompleted;&#xA;//LargeSortingConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_LargeSortingConveyor_AllowedToOperate := Crane_Conveyor_AllowedToOperate OR RefillConveyor_FollowConveyor_AllowedToOperate;&#xA;&#x9;Check_LargeSortingConveyor_FollowConveyorInitCompleted := PicALphaConveyor_InitCompleted;&#x9;&#xA;&#x9;Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted := PicALphaConveyor_AutomaticExecuteReceivingCompleted;&#x9;&#xA;&#x9;//Giving Signals&#xA;&#x9;LargeSortingConveyor_NumberOfWPsAtConveyor := xPPU.LargeSortingConveyor.NumberOfWPsAtConveyor;&#xA;&#x9;LargeSortingConveyor_FollowConveyor_AllowedToInit := xPPU.LargeSortingConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;LargeSortingConveyor_FollowConveyor_AllowedToOperate:= xPPU.LargeSortingConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;LargeSortingConveyor_IsSorting := xPPU.LargeSortingConveyor.IsSorting;&#xA;&#x9;LargeSortingConveyor_AutomaticExecuteCompleted := xPPU.LargeSortingConveyor.AutomaticExecuteCompleted;&#x9;&#xA;//PicALphaConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_PicAlphaConveyor_AllowedToInit := LargeSortingConveyor_FollowConveyor_AllowedToInit;&#xA;&#x9;Check_PicAlphaConveyor_AllowedToReceive := LargeSortingConveyor_FollowConveyor_AllowedToOperate;&#xA;&#x9;Check_PicAlphaConveyor_AllowedToSend := LargeSortingConveyor_NumberOfWPsAtConveyor=3;&#xA;&#x9;Check_PicAlphaConveyor_FollowConveyor_InitCompleted := SmallSortingConveyor_InitCompleted;&#xA;&#x9;Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted := PicAlpha_AutomaticExecuteCompleted;&#xA;&#x9;Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted := SmallSortingConveyor_AutomaticExecuteCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;PicAlphaConveyor_InitCompleted := xPPU.PicALphaConveyor.InitCompleted;&#xA;&#x9;PicAlphaConveyor_FollowConveyor_AllowedToInit := xPPU.PicALphaConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;PicAlphaConveyor_PicAlpha_AllowedToOperate := xPPU.PicAlphaConveyor.PicAlpha_AllowedToOperate;&#xA;&#x9;PicAlphaConveyor_FollowConveyor_AllowedToOperate := xPPU.PicALphaConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;PicAlphaConveyor_AutomaticExecuteReceivingCompleted := xPPU.PicALphaConveyor.AutomaticExecuteReceivingCompleted;&#xA;&#x9;PicAlphaConveyor_AutomaticExecuteSendingCompleted := xPPU.PicALphaConveyor.AutomaticExecuteSendingCompleted;&#xA;//SmallSortingConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_SmallSortingConveyor_AllowedToInit := PicALphaConveyor_FollowConveyor_AllowedToInit;&#xA;&#x9;Check_SmallSortingConveyor_AllowedToOperate := PicALphaConveyor_FollowConveyor_AllowedToOperate;&#x9;&#xA;&#x9;Check_SmallSortingConveyor_FollowConveyor_InitCompleted := RefillConveyor_InitCompleted;&#xA;&#x9;Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted := RefillConveyor_AutomaticExecuteReceivingCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;SmallSortingConveyor_InitCompleted := xPPU.SmallSortingConveyor.InitCompleted;&#xA;&#x9;SmallSortingConveyor_FollowConveyor_AllowedToInit := xPPU.SmallSortingConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;SmallSortingConveyor_FollowConveyor_AllowedToOperate:= xPPU.SmallSortingConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;SmallSortingConveyor_AutomaticExecuteCompleted := xPPU.SmallSortingConveyor.AutomaticExecuteCompleted;&#xA;&#x9;SmallSortingConveyor_IsSorting := xPPU.SmallSortingConveyor.IsSorting;&#x9;&#xA;//RefillConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_RefillConveyor_AllowedToInit := SmallSortingConveyor_FollowConveyor_AllowedToInit;&#xA;&#x9;Check_RefillConveyor_AllowedToReceive := SmallSortingConveyor_FollowConveyor_AllowedToOperate;&#xA;&#x9;Check_RefillConveyor_AllowedToSend := NOT Crane_WPPickedUp AND NOT LargeSortingConveyor_IsSorting AND NOT Check_LargeSortingConveyor_AllowedToOperate;&#xA;&#x9;Check_RefillConveyor_FollowConveyor_InitCompleted := LargeSortingConveyor_InitCompleted;&#xA;&#x9;Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted := LargeSortingConveyor_AutomaticExecuteCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;RefillConveyor_InitCompleted := xPPU.RefillConveyor.InitCompleted;&#xA;&#x9;RefillConveyor_FollowConveyor_AllowedToInit := xPPU.RefillConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;RefillConveyor_FollowConveyor_AllowedToOperate := xPPU.RefillConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;RefillConveyor_AutomaticExecuteReceivingCompleted := xPPU.RefillConveyor.AutomaticExecuteReceivingCompleted;&#xA;&#x9;RefillConveyor_IsSending := xPPU.RefillConveyor.IsSending;&#xA;&#x9;RefillConveyor_AutomaticExecuteSendingCompleted := xPPU.RefillConveyor.AutomaticExecuteSendingCompleted;&#x9;&#xA;//PicAlpha&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_PicAlpha_AllowedToOperate := PicAlphaConveyor_PicAlpha_AllowedToOperate;&#xA;&#x9;Check_PicAlpha_Conveyor_AutomaticExecuteCompleted := PicAlphaConveyor_AutomaticExecuteSendingCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;PicAlpha_InitCompleted := xPPU.PicAlpha.InitCompleted;&#xA;&#x9;PicAlpha_Conveyor_AllowedToOperate := xPPU.PicAlpha.Conveyor_AllowedToOperate;&#xA;//PPU&#xA;&#x9;PPU_EngineStop := xPPU.ManuelMode;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;PicAlpha_AutomaticExecuteCompleted := xPPU.PicAlpha.AutomaticExecuteCompleted;">
        <statements xsi:type="ST:FunctionCallStatement" id="_OthLADsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="6" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <functionCall expressionType="FUNCTION_CALL" symbol="xPPU"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_OtiZIDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="12" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="Stack"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_OtiZITsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="12" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="Crane"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_OtiZIjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="12" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="Stamp"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_OtiZIzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="27" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="LargeSortingConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_OtiZJDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="23" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="PicAlphaConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_OtiZJTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="27" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="SmallSortingConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_OtiZJjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="21" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="RefillConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_OtiZJzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="15" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="PicAlpha"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_OtiZKDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="17" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="SafetyDoor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_OtiZKTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="16" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="LightGrid"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlccTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" startColumnPos="1" endColumnPos="91" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPPickedUp"/>
          <right xsi:type="STE:BinaryExpression" id="_OtlccDsuEeugKuRu1b-FYw" operator="AND">
            <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_SwitchTrue"/>
                  </innerVariable>
                </innerVariable>
              </innerVariable>
            </left>
            <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPickedUp"/>
              </innerVariable>
            </right>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcczsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="42" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPProvided"/>
          <right xsi:type="STE:VariableExpression" id="_OtlccjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPProvided"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcdTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="46" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcdDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcdzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="46" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcdjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlceTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="52" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_OtlceDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcezsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="50" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcejsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcfTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="52" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcfDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcfzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="50" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcfjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcgTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="43" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPProvided"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcgDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPProvided"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcgzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="1" endColumnPos="47" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcgjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlchTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="47" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_OtlchDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlchzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" startColumnPos="1" endColumnPos="53" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_OtlchjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlciTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="31" absEndLine="31" relStartLine="31" relEndLine="31" startColumnPos="1" endColumnPos="71" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_OtlciDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcizsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="1" endColumnPos="103" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcijsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcjTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="43" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_IsStamping"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcjDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_IsStamping"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcjzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="1" endColumnPos="45" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPAvailable"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcjjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPAvailable"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlckTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="73" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtlckDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlckzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="36" absEndLine="36" relStartLine="36" relEndLine="36" startColumnPos="1" endColumnPos="59" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_IsSending"/>
          <right xsi:type="STE:VariableExpression" id="_OtlckjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_IsSending"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlclTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="38" absEndLine="38" relStartLine="38" relEndLine="38" startColumnPos="1" endColumnPos="46" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_OtlclDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlclzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="39" absEndLine="39" relStartLine="39" relEndLine="39" startColumnPos="1" endColumnPos="46" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcljsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcmTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="40" absEndLine="40" relStartLine="40" relEndLine="40" startColumnPos="1" endColumnPos="52" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcmDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcmzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="50" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcmjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcnTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="42" absEndLine="42" relStartLine="42" relEndLine="42" startColumnPos="1" endColumnPos="52" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcnDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcnzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="43" absEndLine="43" relStartLine="43" relEndLine="43" startColumnPos="1" endColumnPos="50" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcnjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcoTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="44" absEndLine="44" relStartLine="44" relEndLine="44" startColumnPos="1" endColumnPos="72" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Conveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcoDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcozsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="66" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Stamp_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcojsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcpTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="46" absEndLine="46" relStartLine="46" relEndLine="46" startColumnPos="1" endColumnPos="63" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPPickedUp"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcpDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Gripper">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="VacuumSwitch">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_TakenIn"/>
                </innerVariable>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcpzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="49" absEndLine="49" relStartLine="49" relEndLine="49" startColumnPos="1" endColumnPos="61" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcpjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Stamp_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcqTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="50" absEndLine="50" relStartLine="50" relEndLine="50" startColumnPos="1" endColumnPos="51" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcqDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Light"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcqzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="51" absEndLine="51" relStartLine="51" relEndLine="51" startColumnPos="1" endColumnPos="53" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcqjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Medium"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcrTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="52" absEndLine="52" relStartLine="52" relEndLine="52" startColumnPos="4" endColumnPos="54" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcrDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Heavy"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcrzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="54" absEndLine="54" relStartLine="54" relEndLine="54" startColumnPos="1" endColumnPos="46" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcrjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcsTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="55" absEndLine="55" relStartLine="55" relEndLine="55" startColumnPos="1" endColumnPos="46" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcsDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcszsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="56" absEndLine="56" relStartLine="56" relEndLine="56" startColumnPos="1" endColumnPos="52" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcsjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlctTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="57" absEndLine="57" relStartLine="57" relEndLine="57" startColumnPos="1" endColumnPos="50" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_OtlctDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlctzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="58" absEndLine="58" relStartLine="58" relEndLine="58" startColumnPos="1" endColumnPos="52" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_OtlctjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcuTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="59" absEndLine="59" relStartLine="59" relEndLine="59" startColumnPos="1" endColumnPos="50" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcuDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcuzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="60" absEndLine="60" relStartLine="60" relEndLine="60" startColumnPos="1" endColumnPos="42" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_IsStamping"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcujsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsStamping"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcvTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="61" absEndLine="61" relStartLine="61" relEndLine="61" startColumnPos="1" endColumnPos="58" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPAvailable"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcvDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPAvailable">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_SwitchTrue"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtlcvzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="62" absEndLine="62" relStartLine="62" relEndLine="62" startColumnPos="1" endColumnPos="72" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtlcvjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmDgTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="65" absEndLine="65" relStartLine="65" relEndLine="65" startColumnPos="1" endColumnPos="129" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AllowedToOperate"/>
          <right xsi:type="STE:BinaryExpression" id="_OtmDgDsuEeugKuRu1b-FYw" operator="OR">
            <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_FollowConveyor_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmDgzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="66" absEndLine="66" relStartLine="66" relEndLine="66" startColumnPos="1" endColumnPos="89" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorInitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtmDgjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmDhTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="67" absEndLine="67" relStartLine="67" relEndLine="67" startColumnPos="1" endColumnPos="122" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtmDhDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_AutomaticExecuteReceivingCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmDhzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="69" absEndLine="69" relStartLine="69" relEndLine="69" startColumnPos="1" endColumnPos="94" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_NumberOfWPsAtConveyor"/>
          <right xsi:type="STE:VariableExpression" id="_OtmDhjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmDiTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="70" absEndLine="70" relStartLine="70" relEndLine="70" startColumnPos="1" endColumnPos="108" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_OtmDiDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmDizsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="71" absEndLine="71" relStartLine="71" relEndLine="71" startColumnPos="1" endColumnPos="113" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_OtmDijsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmDjTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="72" absEndLine="72" relStartLine="72" relEndLine="72" startColumnPos="1" endColumnPos="70" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_OtmDjDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmDjzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="73" absEndLine="73" relStartLine="73" relEndLine="73" startColumnPos="1" endColumnPos="102" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtmDjjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmDkTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="76" absEndLine="76" relStartLine="76" relEndLine="76" startColumnPos="1" endColumnPos="90" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_OtmDkDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToInit"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmDkzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="77" absEndLine="77" relStartLine="77" relEndLine="77" startColumnPos="1" endColumnPos="96" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_OtmDkjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmqkTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="78" absEndLine="78" relStartLine="78" relEndLine="78" startColumnPos="1" endColumnPos="85" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToSend"/>
          <right xsi:type="STE:BinaryExpression" id="_OtmqkDsuEeugKuRu1b-FYw" operator="EQUAL">
            <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmqkzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="79" absEndLine="79" relStartLine="79" relEndLine="79" startColumnPos="1" endColumnPos="90" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtmqkjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmqlTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="80" absEndLine="80" relStartLine="80" relEndLine="80" startColumnPos="1" endColumnPos="96" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtmqlDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmqlzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="81" absEndLine="81" relStartLine="81" relEndLine="81" startColumnPos="1" endColumnPos="114" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtmqljsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmqmTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="83" absEndLine="83" relStartLine="83" relEndLine="83" startColumnPos="1" endColumnPos="70" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtmqmDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmqmzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="84" absEndLine="84" relStartLine="84" relEndLine="84" startColumnPos="1" endColumnPos="100" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_OtmqmjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmqnTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="85" absEndLine="85" relStartLine="85" relEndLine="85" startColumnPos="1" endColumnPos="94" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_PicAlpha_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_OtmqnDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmqnzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="86" absEndLine="86" relStartLine="86" relEndLine="86" startColumnPos="1" endColumnPos="106" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_OtmqnjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmqoTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="87" absEndLine="87" relStartLine="87" relEndLine="87" startColumnPos="1" endColumnPos="112" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_AutomaticExecuteReceivingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtmqoDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmqozsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="88" absEndLine="88" relStartLine="88" relEndLine="88" startColumnPos="1" endColumnPos="108" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_AutomaticExecuteSendingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtmqojsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmqpTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="91" absEndLine="91" relStartLine="91" relEndLine="91" startColumnPos="1" endColumnPos="90" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_OtmqpDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_FollowConveyor_AllowedToInit"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmqpzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="92" absEndLine="92" relStartLine="92" relEndLine="92" startColumnPos="1" endColumnPos="96" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_OtmqpjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_FollowConveyor_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmqqTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="93" absEndLine="93" relStartLine="93" relEndLine="93" startColumnPos="1" endColumnPos="88" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtmqqDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmqqzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="94" absEndLine="94" relStartLine="94" relEndLine="94" startColumnPos="1" endColumnPos="121" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtmqqjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_AutomaticExecuteReceivingCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmqrTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="96" absEndLine="96" relStartLine="96" relEndLine="96" startColumnPos="1" endColumnPos="78" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtmqrDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmqrzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="97" absEndLine="97" relStartLine="97" relEndLine="97" startColumnPos="1" endColumnPos="108" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_OtmqrjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmqsTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="98" absEndLine="98" relStartLine="98" relEndLine="98" startColumnPos="1" endColumnPos="113" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_OtmqsDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmqszsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="99" absEndLine="99" relStartLine="99" relEndLine="99" startColumnPos="1" endColumnPos="102" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtmqsjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmqtTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="100" absEndLine="100" relStartLine="100" relEndLine="100" startColumnPos="1" endColumnPos="70" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_OtmqtDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtmqtzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="103" absEndLine="103" relStartLine="103" relEndLine="103" startColumnPos="1" endColumnPos="88" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_OtmqtjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToInit"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtnRoTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="104" absEndLine="104" relStartLine="104" relEndLine="104" startColumnPos="1" endColumnPos="94" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_OtnRoDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtofwTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="105" absEndLine="105" relStartLine="105" relEndLine="105" startColumnPos="1" endColumnPos="150" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToSend"/>
          <right xsi:type="STE:BinaryExpression" id="_OtofwDsuEeugKuRu1b-FYw" operator="AND">
            <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
              <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPPickedUp"/>
            </left>
            <right xsi:type="STE:BinaryExpression" operator="AND">
              <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
              </left>
              <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AllowedToOperate"/>
              </right>
            </right>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtofwzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="106" absEndLine="106" relStartLine="106" relEndLine="106" startColumnPos="1" endColumnPos="88" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtofwjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtofxTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="107" absEndLine="107" relStartLine="107" relEndLine="107" startColumnPos="1" endColumnPos="112" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtofxDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtofxzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="109" absEndLine="109" relStartLine="109" relEndLine="109" startColumnPos="1" endColumnPos="66" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtofxjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtofyTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="110" absEndLine="110" relStartLine="110" relEndLine="110" startColumnPos="1" endColumnPos="96" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_OtofyDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtofyzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="111" absEndLine="111" relStartLine="111" relEndLine="111" startColumnPos="1" endColumnPos="102" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_OtofyjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtpG0TsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="112" absEndLine="112" relStartLine="112" relEndLine="112" startColumnPos="1" endColumnPos="108" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_AutomaticExecuteReceivingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtpG0DsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtpG0zsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="113" absEndLine="113" relStartLine="113" relEndLine="113" startColumnPos="1" endColumnPos="58" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_IsSending"/>
          <right xsi:type="STE:VariableExpression" id="_OtpG0jsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSending"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtpG1TsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="114" absEndLine="114" relStartLine="114" relEndLine="114" startColumnPos="1" endColumnPos="104" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_AutomaticExecuteSendingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtpG1DsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtpG1zsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="117" absEndLine="117" relStartLine="117" relEndLine="117" startColumnPos="1" endColumnPos="78" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_OtpG1jsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_PicAlpha_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtpG2TsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="118" absEndLine="118" relStartLine="118" relEndLine="118" startColumnPos="1" endColumnPos="103" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_Conveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtpG2DsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_AutomaticExecuteSendingCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtpG2zsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="120" absEndLine="120" relStartLine="120" relEndLine="120" startColumnPos="1" endColumnPos="54" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtpG2jsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtpG3TsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="121" absEndLine="121" relStartLine="121" relEndLine="121" startColumnPos="1" endColumnPos="78" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_Conveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_OtpG3DsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtpG3zsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="123" absEndLine="123" relStartLine="123" relEndLine="123" startColumnPos="1" endColumnPos="34" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_OtpG3jsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OtpG4TsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="129" absEndLine="129" relStartLine="129" relEndLine="129" startColumnPos="1" endColumnPos="78" structuredText="_OteuwDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OtpG4DsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </innerVariable>
          </right>
        </statements>
      </implementations>
    </pous>
    <pous callers="//@resources.0/@pous.17" identifier="BistableCylinder" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="BistableCylinder">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="DI_Extended" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_Retracted" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Extend" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Retract" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryFlowPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PressureSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_FlowPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PositionTransmitter" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Extended" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Retracted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Extend">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Extend">
          <steps name="Init_ACT_Extend" outgoingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Extend_Cylinder" incomingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.2"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.3"/>
          </steps>
          <steps name="SetExtended" incomingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.2" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.1/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Extended AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Extended" sourceStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Extended" isJump="true" sourceStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_Retract">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Retract">
          <steps name="Init_ACT_Retract" outgoingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Cylinder" incomingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.3"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetRetacted" incomingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.2" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.1/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Retracted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Retracted" sourceStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Retracted" isJump="true" sourceStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.9 //@resources.0/@pous.15 //@resources.0/@pous.16" identifier="InductiveSensor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="InductiveSensor">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_WPMetallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous identifier="InductiveSwitch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="InductiveSwitch">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_InductiveSwitchTrue" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.16 //@resources.0/@pous.17" identifier="MicroSwitch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="MicroSwitch">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_SwitchTrue" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.7 //@resources.0/@pous.9 //@resources.0/@pous.10 //@resources.0/@pous.16 //@resources.0/@pous.17" identifier="MonostableCylinder" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="MonostableCylinder">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="DI_Extended" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_Retracted" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Extend" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryFlowPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PressureSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_FlowPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PositionTransmitter" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Extended" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Retracted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Extend">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Extend">
          <steps name="Init_ACT_Extend" outgoingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Extend_Cylinder" incomingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.5/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetExtended" incomingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.5/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Extended AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Extended" sourceStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Extended" isJump="true" sourceStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
      <actions name="ACT_Retract">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Retract">
          <steps name="Init_ACT_Retract" outgoingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Cylinder" incomingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.5/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetRetacted" incomingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.5/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Retracted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Retracted" sourceStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Retracted" isJump="true" sourceStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.9 //@resources.0/@pous.10 //@resources.0/@pous.11 //@resources.0/@pous.12 //@resources.0/@pous.15" identifier="Motor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Stopped" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="TurningClockwise" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="TurningCounterclockwise" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Motor">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DO_TurnClockwise" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_TurnCounterclockwise" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <outputVariables name="AI_Position" scope="VAR_OUTPUT" type="UINT" typeName="UINT">
          <location type="I" dataType="None"/>
        </outputVariables>
        <outputVariables name="AI_Speed" scope="VAR_OUTPUT" type="UDINT" typeName="UDINT">
          <location type="I" dataType="None"/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Stop">
        <implementation xsi:type="ST:StructuredText" label="ACT_Stop" id="_Ot8BwDsuEeugKuRu1b-FYw" text="DO_TurnClockwise := FALSE;&#xA;DO_TurnCounterclockwise := FALSE;&#xA;&#xA;Stopped := TRUE;&#xA;TurningClockwise := FALSE;&#xA;TurningCounterclockwise := FALSE;">
          <statements xsi:type="ST:Assignment" id="_Ot8BwjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_Ot8BwDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnClockwise"/>
            <right xsi:type="STE:Literal" id="_Ot8BwTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot8BxDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_Ot8BwDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_Ot8BwzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot8BxjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="15" structuredText="_Ot8BwDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stopped"/>
            <right xsi:type="STE:Literal" id="_Ot8BxTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot8ByDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="25" structuredText="_Ot8BwDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningClockwise"/>
            <right xsi:type="STE:Literal" id="_Ot8BxzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot8ByjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="32" structuredText="_Ot8BwDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_Ot8ByTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnClockwise">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnClockwise" id="_Ot8o0DsuEeugKuRu1b-FYw" text="DO_TurnClockwise := TRUE;&#xA;DO_TurnCounterclockwise := FALSE;&#xA;&#xA;Stopped := FALSE;&#xA;TurningClockwise := TRUE;&#xA;TurningCounterclockwise := FALSE;">
          <statements xsi:type="ST:Assignment" id="_Ot8o0jsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_Ot8o0DsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnClockwise"/>
            <right xsi:type="STE:Literal" id="_Ot8o0TsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot8o1DsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_Ot8o0DsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_Ot8o0zsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot8o1jsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="16" structuredText="_Ot8o0DsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stopped"/>
            <right xsi:type="STE:Literal" id="_Ot8o1TsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot8o2DsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="24" structuredText="_Ot8o0DsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningClockwise"/>
            <right xsi:type="STE:Literal" id="_Ot8o1zsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot8o2jsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="32" structuredText="_Ot8o0DsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_Ot8o2TsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnCounterclockwise">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnCounterclockwise" id="_Ot9P4DsuEeugKuRu1b-FYw" text="DO_TurnClockwise := FALSE;&#xA;DO_TurnCounterclockwise := TRUE;&#xA;&#xA;Stopped := FALSE;&#xA;TurningClockwise := FALSE;&#xA;TurningCounterclockwise := TRUE;">
          <statements xsi:type="ST:Assignment" id="_Ot9P4jsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_Ot9P4DsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnClockwise"/>
            <right xsi:type="STE:Literal" id="_Ot9P4TsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot9P5DsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="31" structuredText="_Ot9P4DsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_Ot9P4zsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot9P5jsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="16" structuredText="_Ot9P4DsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stopped"/>
            <right xsi:type="STE:Literal" id="_Ot9P5TsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot9P6DsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="25" structuredText="_Ot9P4DsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningClockwise"/>
            <right xsi:type="STE:Literal" id="_Ot9P5zsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot9P6jsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="31" structuredText="_Ot9P4DsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_Ot9P6TsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.5" callers="//@resources.0/@pous.18" identifier="Crane" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="bSR" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="bCR" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="bStR" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="LiftingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="Gripper" scope="VAR_INPUT" type="DERIVED" typeName="VacuumGripper">
          <location/>
        </inputVariables>
        <inputVariables name="Table" scope="VAR_INPUT" type="DERIVED" typeName="TurningTable">
          <location/>
        </inputVariables>
        <inputVariables name="RFID" scope="VAR_INPUT" type="DERIVED" typeName="RFID">
          <location/>
        </inputVariables>
        <inputVariables name="SoftwareEmergency" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPProvided" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPType_Black" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPType_White" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPType_Metallic" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_LargeSortingConveyor_IsSorting" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_LargeSortingConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stamp_IsStamping" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stamp_WPAvailable" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stamp_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_RefillConveyor_IsSending" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Crane">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="CraneSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="WPPutDown" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedStack" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedStackRFID" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedConveyor" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedConveyorRFID" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedStamp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedStampRFID" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Conveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Stamp_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="WPPickedUp" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Crane" id="_OuGZ0DsuEeugKuRu1b-FYw" text="Table();&#xA;Check_Stack_WPProvided := Main.Stack_WPProvided;&#xA;Check_Stack_WPType_Black := Main.Stack_WPType_Black;&#xA;Check_Stack_WPType_White := Main.Stack_WPType_White;&#xA;Check_Stack_WPType_Metallic := Main.Stack_WPType_Metallic;&#xA;Check_LargeSortingConveyor_IsSorting := Main.LargeSortingConveyor_IsSorting;&#xA;Check_LargeSortingConveyor_AutomaticExecuteCompleted := Main.LargeSortingConveyor_AutomaticExecuteCompleted;&#xA;Check_Stamp_IsStamping := Main.Stamp_IsStamping;&#xA;Check_Stamp_WPAvailable := Main.Stamp_WPAvailable;&#xA;Check_Stamp_AutomaticExecuteCompleted := Main.Stamp_AutomaticExecuteCompleted;&#xA;Check_RefillConveyor_IsSending := Main.Check_RefillConveyor_IsSending;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Table.Motor.ACT_Stop();&#xA;END_IF&#xA;&#xA;IF(bSR AND NOT ReachedStackRFID)THEN&#xA;&#x9;ACT_MoveToStackRFID();&#xA;END_IF&#xA;IF(bCR AND NOT ReachedConveyorRFID)THEN&#xA;&#x9;ACT_MoveToConveyorRFID();&#xA;END_IF&#xA;IF(bStR AND NOT ReachedStampRFID)THEN&#xA;&#x9;ACT_MoveToStampRFID();&#xA;END_IF">
        <statements xsi:type="ST:FunctionCallStatement" id="_OuGZ0TsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_OuGZ0DsuEeugKuRu1b-FYw">
          <functionCall expressionType="FUNCTION_CALL" symbol="Table"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuGZ0zsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="47" structuredText="_OuGZ0DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPProvided"/>
          <right xsi:type="STE:VariableExpression" id="_OuGZ0jsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPProvided"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuGZ1TsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="51" structuredText="_OuGZ0DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_OuGZ1DsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuGZ1zsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="51" structuredText="_OuGZ0DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_OuGZ1jsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuGZ2TsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="57" structuredText="_OuGZ0DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_OuGZ2DsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuGZ2zsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="75" structuredText="_OuGZ0DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_OuGZ2jsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuGZ3TsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="107" structuredText="_OuGZ0DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OuGZ3DsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuGZ3zsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="47" structuredText="_OuGZ0DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_IsStamping"/>
          <right xsi:type="STE:VariableExpression" id="_OuGZ3jsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_IsStamping"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuGZ4TsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="49" structuredText="_OuGZ0DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPAvailable"/>
          <right xsi:type="STE:VariableExpression" id="_OuGZ4DsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPAvailable"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuGZ4zsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="77" structuredText="_OuGZ0DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OuGZ4jsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuGZ5TsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="69" structuredText="_OuGZ0DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_IsSending"/>
          <right xsi:type="STE:VariableExpression" id="_OuGZ5DsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_IsSending"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuGZ5zsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="39" structuredText="_OuGZ0DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_OuGZ5jsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_OuHn8zsuEeugKuRu1b-FYw" statementType="IF" absStartLine="13" absEndLine="15" relStartLine="13" relEndLine="15" endColumnPos="5" structuredText="_OuGZ0DsuEeugKuRu1b-FYw">
          <conditionalBlocks id="_OuHn8jsuEeugKuRu1b-FYw" statementType="CONDITIONAL_BLOCK" absStartLine="13" absEndLine="14" relStartLine="13" relEndLine="14" endColumnPos="23" structuredText="_OuGZ0DsuEeugKuRu1b-FYw" else="false">
            <condition xsi:type="STE:VariableExpression" id="_OuHn8DsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_OuHn8TsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="1" endColumnPos="23" structuredText="_OuGZ0DsuEeugKuRu1b-FYw">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              </invokingVariable>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
        <statements xsi:type="ST:If" id="_OuHn-DsuEeugKuRu1b-FYw" statementType="IF" absStartLine="17" absEndLine="19" relStartLine="17" relEndLine="19" endColumnPos="5" structuredText="_OuGZ0DsuEeugKuRu1b-FYw">
          <conditionalBlocks id="_OuHn9zsuEeugKuRu1b-FYw" statementType="CONDITIONAL_BLOCK" absStartLine="17" absEndLine="18" relStartLine="17" relEndLine="18" endColumnPos="22" structuredText="_OuGZ0DsuEeugKuRu1b-FYw" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_OuHn9TsuEeugKuRu1b-FYw" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_OuHn9DsuEeugKuRu1b-FYw" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="bSR"/>
                <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                  <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedStackRFID"/>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:FunctionCallStatement" id="_OuHn9jsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="22" structuredText="_OuGZ0DsuEeugKuRu1b-FYw">
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStackRFID"/>
            </substatements>
          </conditionalBlocks>
        </statements>
        <statements xsi:type="ST:If" id="_OuHn_TsuEeugKuRu1b-FYw" statementType="IF" absStartLine="20" absEndLine="22" relStartLine="20" relEndLine="22" endColumnPos="5" structuredText="_OuGZ0DsuEeugKuRu1b-FYw">
          <conditionalBlocks id="_OuHn_DsuEeugKuRu1b-FYw" statementType="CONDITIONAL_BLOCK" absStartLine="20" absEndLine="21" relStartLine="20" relEndLine="21" endColumnPos="25" structuredText="_OuGZ0DsuEeugKuRu1b-FYw" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_OuHn-jsuEeugKuRu1b-FYw" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_OuHn-TsuEeugKuRu1b-FYw" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="bCR"/>
                <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                  <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedConveyorRFID"/>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:FunctionCallStatement" id="_OuHn-zsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="25" structuredText="_OuGZ0DsuEeugKuRu1b-FYw">
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToConveyorRFID"/>
            </substatements>
          </conditionalBlocks>
        </statements>
        <statements xsi:type="ST:If" id="_OuHoAjsuEeugKuRu1b-FYw" statementType="IF" absStartLine="23" absEndLine="25" relStartLine="23" relEndLine="25" endColumnPos="5" structuredText="_OuGZ0DsuEeugKuRu1b-FYw">
          <conditionalBlocks id="_OuHoATsuEeugKuRu1b-FYw" statementType="CONDITIONAL_BLOCK" absStartLine="23" absEndLine="24" relStartLine="23" relEndLine="24" endColumnPos="22" structuredText="_OuGZ0DsuEeugKuRu1b-FYw" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_OuHn_zsuEeugKuRu1b-FYw" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_OuHn_jsuEeugKuRu1b-FYw" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="bStR"/>
                <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                  <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedStampRFID"/>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:FunctionCallStatement" id="_OuHoADsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="22" structuredText="_OuGZ0DsuEeugKuRu1b-FYw">
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStampRFID"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reset_ConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_ConveyorAllowedToOperate" id="_Ot928DsuEeugKuRu1b-FYw" text="Conveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_Ot928jsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="34" structuredText="_Ot928DsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_Ot928TsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_StampAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_StampAllowedToOperate" id="_Ot928zsuEeugKuRu1b-FYw" text="Stamp_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_Ot-eATsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="31" structuredText="_Ot928zsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_Ot-eADsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_Ot_FEDsuEeugKuRu1b-FYw" text="InitCompleted := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;Conveyor_AllowedToOperate := FALSE;&#xA;Stamp_AllowedToOperate := FALSE;&#xA;&#xA;WPPickedUp := FALSE;&#xA;WPPutDown := FALSE;&#xA;ReachedStack := FALSE;&#xA;ReachedConveyor := FALSE;&#xA;ReachedStamp := FALSE;&#x9;&#xA;WPType_White := FALSE;&#xA;WPType_Black := FALSE;&#xA;WPType_Metallic := FALSE;&#xA;WPWeight_Light := FALSE;&#xA;WPWeight_Medium := FALSE;&#xA;WPWeight_Heavy := FALSE;">
          <statements xsi:type="ST:Assignment" id="_Ot_FEjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_Ot_FEDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_Ot_FETsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot_FFDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_Ot_FEDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_Ot_FEzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot_FFjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="34" structuredText="_Ot_FEDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_Ot_FFTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot_FGDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="31" structuredText="_Ot_FEDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_Ot_FFzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot_FGjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="19" structuredText="_Ot_FEDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPickedUp"/>
            <right xsi:type="STE:Literal" id="_Ot_FGTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot_FHDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="18" structuredText="_Ot_FEDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPutDown"/>
            <right xsi:type="STE:Literal" id="_Ot_FGzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot_FHjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="21" structuredText="_Ot_FEDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedStack"/>
            <right xsi:type="STE:Literal" id="_Ot_FHTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot_FIDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="24" structuredText="_Ot_FEDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedConveyor"/>
            <right xsi:type="STE:Literal" id="_Ot_FHzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot_FIjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="21" structuredText="_Ot_FEDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedStamp"/>
            <right xsi:type="STE:Literal" id="_Ot_FITsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot_FJDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="21" structuredText="_Ot_FEDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_Ot_FIzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot_FJjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="21" structuredText="_Ot_FEDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_Ot_FJTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot_FKDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="24" structuredText="_Ot_FEDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_Ot_FJzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot_FKjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" endColumnPos="23" structuredText="_Ot_FEDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:Literal" id="_Ot_FKTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot_FLDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" endColumnPos="24" structuredText="_Ot_FEDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:Literal" id="_Ot_FKzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ot_FLjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" endColumnPos="23" structuredText="_Ot_FEDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:Literal" id="_Ot_FLTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_ConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_ConveyorAllowedToOperate" id="_Ot_FLzsuEeugKuRu1b-FYw" text="Conveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_Ot_sITsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="33" structuredText="_Ot_FLzsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_Ot_sIDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_StampAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_StampAllowedToOperate" id="_Ot_sIjsuEeugKuRu1b-FYw" text="Stamp_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_Ot_sJDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_Ot_sIjsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_Ot_sIzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPTypeEqualsStack">
        <implementation xsi:type="ST:StructuredText" label="Set_WPTypeEqualsStack" id="_OuATMDsuEeugKuRu1b-FYw" text="WPType_White:=Main.Stack_WPType_White;&#xA;WPType_Black:=Main.Stack_WPType_Black;&#x9;&#xA;WPType_Metallic:=Main.Stack_WPType_Metallic;&#xA;WPWeight_Light:=Main.Stack_WPWeight_Light;&#xA;WPWeight_Medium:=Main.Stack_WPWeight_Medium;&#x9;&#xA;WPWeight_Heavy:=Main.Stack_WPWeight_Heavy;">
          <statements xsi:type="ST:Assignment" id="_OuATMjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_OuATMDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:VariableExpression" id="_OuATMTsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuATNDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_OuATMDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:VariableExpression" id="_OuATMzsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuATNjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="43" structuredText="_OuATMDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:VariableExpression" id="_OuATNTsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuATODsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="41" structuredText="_OuATMDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:VariableExpression" id="_OuATNzsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Light"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuATOjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="43" structuredText="_OuATMDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:VariableExpression" id="_OuATOTsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Medium"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuATPDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="41" structuredText="_OuATMDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:VariableExpression" id="_OuATOzsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Heavy"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPTypeEqualsStamp">
        <implementation xsi:type="ST:StructuredText" label="Set_WPTypeEqualsStamp" id="_OuA6QDsuEeugKuRu1b-FYw" text="WPType_White:=Main.Stamp_WPType_White;&#xA;WPType_Black:=Main.Stamp_WPType_Black;&#x9;&#xA;WPType_Metallic:=Main.Stamp_WPType_Metallic;&#xA;WPWeight_Light:=Main.Stamp_WPWeight_Light;&#xA;WPWeight_Medium:=Main.Stamp_WPWeight_Medium;&#x9;&#xA;WPWeight_Heavy:=Main.Stamp_WPWeight_Heavy;">
          <statements xsi:type="ST:Assignment" id="_OuA6QjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_OuA6QDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:VariableExpression" id="_OuA6QTsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_White"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuA6RDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_OuA6QDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:VariableExpression" id="_OuA6QzsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Black"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuA6RjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="43" structuredText="_OuA6QDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:VariableExpression" id="_OuA6RTsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Metallic"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuA6SDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="41" structuredText="_OuA6QDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:VariableExpression" id="_OuA6RzsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Light"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuA6SjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="43" structuredText="_OuA6QDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:VariableExpression" id="_OuA6STsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Medium"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuA6TDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="41" structuredText="_OuA6QDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:VariableExpression" id="_OuA6SzsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Heavy"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_MoveToConveyor">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToConveyor">
          <steps name="Init_MoveToConveyor" outgoingTransitions="//@resources.0/@pous.7/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMoveCrane" incomingTransitions="//@resources.0/@pous.7/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.7/@actions.7/@implementation/@transitions.1 //@resources.0/@pous.7/@actions.7/@implementation/@transitions.3 //@resources.0/@pous.7/@actions.7/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Turn_CounterClockwise_MTC" incomingTransitions="//@resources.0/@pous.7/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.7/@actions.7/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Turn_CLockwise_MTC" incomingTransitions="//@resources.0/@pous.7/@actions.7/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.7/@actions.7/@implementation/@transitions.4" local_ID="13" stepLevel="2"/>
          <steps name="First_Turn_CounterC_MTC" incomingTransitions="//@resources.0/@pous.7/@actions.7/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.7/@actions.7/@implementation/@transitions.6 //@resources.0/@pous.7/@actions.7/@implementation/@transitions.7" local_ID="18" stepLevel="2"/>
          <steps name="Second_Turn_Clockwise_MTC" incomingTransitions="//@resources.0/@pous.7/@actions.7/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.7/@actions.7/@implementation/@transitions.8" local_ID="24" stepLevel="3"/>
          <steps name="StopCrane_MTC" incomingTransitions="//@resources.0/@pous.7/@actions.7/@implementation/@transitions.2 //@resources.0/@pous.7/@actions.7/@implementation/@transitions.4 //@resources.0/@pous.7/@actions.7/@implementation/@transitions.6 //@resources.0/@pous.7/@actions.7/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.7/@actions.7/@implementation/@transitions.9" local_ID="30" stepLevel="4"/>
          <steps name="SetReachedConveyor" incomingTransitions="//@resources.0/@pous.7/@actions.7/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.7/@actions.7/@implementation/@transitions.10" local_ID="33" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="34" qualifier="N" actionVariable="//@resources.0/@pous.7/@declaration/@internalVariables.4"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.6" local_ID="15"/>
          <transitions condition="NOT (Table.AtStack.DI_SwitchTrue AND Table.AtStamp.DI_SwitchTrue)" sourceStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.6" local_ID="21"/>
          <transitions condition="First_Turn_CounterC_MTC.t>T#8s AND Not Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.5" local_ID="23"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.5" targetStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.6" targetStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.7" local_ID="32"/>
          <transitions condition="ReachedConveyor" isJump="true" sourceStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.7" targetStep="//@resources.0/@pous.7/@actions.7/@implementation/@steps.0" local_ID="37"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToConveyorRFID">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToConveyorRFID">
          <steps name="Init_MoveToConveyorRFID" outgoingTransitions="//@resources.0/@pous.7/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMoveCrane" incomingTransitions="//@resources.0/@pous.7/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.7/@actions.8/@implementation/@transitions.1 //@resources.0/@pous.7/@actions.8/@implementation/@transitions.3 //@resources.0/@pous.7/@actions.8/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Turn_CounterClockwise_MTCRFID" incomingTransitions="//@resources.0/@pous.7/@actions.8/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.7/@actions.8/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Turn_CLockwise_MTCRFID" incomingTransitions="//@resources.0/@pous.7/@actions.8/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.7/@actions.8/@implementation/@transitions.4" local_ID="13" stepLevel="2"/>
          <steps name="First_Turn_CounterC_MTCRFID" incomingTransitions="//@resources.0/@pous.7/@actions.8/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.7/@actions.8/@implementation/@transitions.6 //@resources.0/@pous.7/@actions.8/@implementation/@transitions.7" local_ID="18" stepLevel="2"/>
          <steps name="Second_Turn_Clockwise_MTCRFID" incomingTransitions="//@resources.0/@pous.7/@actions.8/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.7/@actions.8/@implementation/@transitions.8" local_ID="24" stepLevel="3"/>
          <steps name="StopCrane_MTCRFID" incomingTransitions="//@resources.0/@pous.7/@actions.8/@implementation/@transitions.2 //@resources.0/@pous.7/@actions.8/@implementation/@transitions.4 //@resources.0/@pous.7/@actions.8/@implementation/@transitions.6 //@resources.0/@pous.7/@actions.8/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.7/@actions.8/@implementation/@transitions.9" local_ID="30" stepLevel="4"/>
          <steps name="SetReachedStackRFID" incomingTransitions="//@resources.0/@pous.7/@actions.8/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.7/@actions.8/@implementation/@transitions.10" local_ID="33" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="34" qualifier="N" actionVariable="//@resources.0/@pous.7/@declaration/@internalVariables.5"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue OR Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Table.Potentiometer.AtConveyorRFID" sourceStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="Table.Potentiometer.AtConveyorRFID" sourceStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.6" local_ID="15"/>
          <transitions condition="NOT (Table.AtStack.DI_SwitchTrue AND Table.AtStamp.DI_SwitchTrue AND Table.AtConveyor.DI_SwitchTrue)" sourceStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Table.Potentiometer.AtConveyorRFID" sourceStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.6" local_ID="21"/>
          <transitions condition="First_Turn_CounterC_MTCRFID.t>T#8s AND NOT Table.Potentiometer.AtStackRFID" sourceStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.5" local_ID="23"/>
          <transitions condition="Table.Potentiometer.AtConveyorRFID" sourceStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.6" targetStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.7" local_ID="32"/>
          <transitions condition="ReachedConveyorRFID" isJump="true" sourceStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.7" targetStep="//@resources.0/@pous.7/@actions.8/@implementation/@steps.0" local_ID="37"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToStack">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToStack">
          <steps name="Init_MoveToMagazine" outgoingTransitions="//@resources.0/@pous.7/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Turn_Clockwise_MTM" incomingTransitions="//@resources.0/@pous.7/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.7/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.7/@actions.9/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Counterclockwise" incomingTransitions="//@resources.0/@pous.7/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.7/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="2"/>
          <steps name="StopCrane_MTS" incomingTransitions="//@resources.0/@pous.7/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.7/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.7/@actions.9/@implementation/@transitions.4" local_ID="13" stepLevel="3"/>
          <steps name="SetReachedStack" incomingTransitions="//@resources.0/@pous.7/@actions.9/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.7/@actions.9/@implementation/@transitions.5" local_ID="16" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="17" qualifier="N" actionVariable="//@resources.0/@pous.7/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.7/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.7/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.7/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.9/@implementation/@steps.3" local_ID="6"/>
          <transitions condition="Turn_Clockwise_MTM.t>T#8s" sourceStep="//@resources.0/@pous.7/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.9/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.7/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.7/@actions.9/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.7/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.7/@actions.9/@implementation/@steps.4" local_ID="15"/>
          <transitions condition="ReachedStack" isJump="true" sourceStep="//@resources.0/@pous.7/@actions.9/@implementation/@steps.4" targetStep="//@resources.0/@pous.7/@actions.9/@implementation/@steps.0" local_ID="20"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToStackRFID">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToStackRFID">
          <steps name="Init_MoveToStackRFID" outgoingTransitions="//@resources.0/@pous.7/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMoveCrane" incomingTransitions="//@resources.0/@pous.7/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.7/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.7/@actions.10/@implementation/@transitions.3 //@resources.0/@pous.7/@actions.10/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Turn_CounterClockwise_MTSRFID" incomingTransitions="//@resources.0/@pous.7/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.7/@actions.10/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Turn_CLockwise_MTSRFID" incomingTransitions="//@resources.0/@pous.7/@actions.10/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.7/@actions.10/@implementation/@transitions.4" local_ID="13" stepLevel="2"/>
          <steps name="First_Turn_CounterC_MTSRFID" incomingTransitions="//@resources.0/@pous.7/@actions.10/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.7/@actions.10/@implementation/@transitions.6 //@resources.0/@pous.7/@actions.10/@implementation/@transitions.7" local_ID="18" stepLevel="2"/>
          <steps name="Second_Turn_Clockwise_MTSRFID" incomingTransitions="//@resources.0/@pous.7/@actions.10/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.7/@actions.10/@implementation/@transitions.8" local_ID="24" stepLevel="3"/>
          <steps name="StopCrane_MTSRFID" incomingTransitions="//@resources.0/@pous.7/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.7/@actions.10/@implementation/@transitions.4 //@resources.0/@pous.7/@actions.10/@implementation/@transitions.6 //@resources.0/@pous.7/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.7/@actions.10/@implementation/@transitions.9" local_ID="30" stepLevel="4"/>
          <steps name="SetReachedStackRFID" incomingTransitions="//@resources.0/@pous.7/@actions.10/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.7/@actions.10/@implementation/@transitions.10" local_ID="33" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="34" qualifier="N" actionVariable="//@resources.0/@pous.7/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Table.Potentiometer.AtStackRFID" sourceStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue OR Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="Table.Potentiometer.AtStackRFID" sourceStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.6" local_ID="15"/>
          <transitions condition="NOT (Table.AtStack.DI_SwitchTrue AND Table.AtStamp.DI_SwitchTrue AND Table.AtConveyor.DI_SwitchTrue)" sourceStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Table.Potentiometer.AtStackRFID" sourceStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.6" local_ID="21"/>
          <transitions condition="First_Turn_CounterC_MTSRFID.t>T#8s AND NOT Table.Potentiometer.AtStackRFID" sourceStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.5" local_ID="23"/>
          <transitions condition="Table.Potentiometer.AtStackRFID" sourceStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.7" local_ID="32"/>
          <transitions condition="ReachedStackRFID" isJump="true" sourceStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.7/@actions.10/@implementation/@steps.0" local_ID="37"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToStamp">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToStamp">
          <steps name="Init_MoveToStamp" outgoingTransitions="//@resources.0/@pous.7/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Turn_CounterClockwise_MTSt" incomingTransitions="//@resources.0/@pous.7/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.7/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.7/@actions.11/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Clockwise_MTSt" incomingTransitions="//@resources.0/@pous.7/@actions.11/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.7/@actions.11/@implementation/@transitions.3" local_ID="9" stepLevel="2"/>
          <steps name="StopCrane_MTSt" incomingTransitions="//@resources.0/@pous.7/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.7/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.7/@actions.11/@implementation/@transitions.4" local_ID="13" stepLevel="3"/>
          <steps name="SetReachedStamp" incomingTransitions="//@resources.0/@pous.7/@actions.11/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.7/@actions.11/@implementation/@transitions.5" local_ID="16" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="17" qualifier="N" actionVariable="//@resources.0/@pous.7/@declaration/@internalVariables.6"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.7/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.7/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.7/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.11/@implementation/@steps.3" local_ID="6"/>
          <transitions condition="Turn_CounterClockwise_MTSt.t>T#8s" sourceStep="//@resources.0/@pous.7/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.11/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.7/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.7/@actions.11/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.7/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.7/@actions.11/@implementation/@steps.4" local_ID="15"/>
          <transitions condition="ReachedStamp" isJump="true" sourceStep="//@resources.0/@pous.7/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.7/@actions.11/@implementation/@steps.0" local_ID="20"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToStampRFID">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToStampRFID">
          <steps name="Init_MoveToStampRFID" outgoingTransitions="//@resources.0/@pous.7/@actions.12/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Turn_CounterClockwise_MTStRFID" incomingTransitions="//@resources.0/@pous.7/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.7/@actions.12/@implementation/@transitions.1 //@resources.0/@pous.7/@actions.12/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Clockwise_MTStRFID" incomingTransitions="//@resources.0/@pous.7/@actions.12/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.7/@actions.12/@implementation/@transitions.3" local_ID="9" stepLevel="2"/>
          <steps name="StopCrane_MTStRFID" incomingTransitions="//@resources.0/@pous.7/@actions.12/@implementation/@transitions.1 //@resources.0/@pous.7/@actions.12/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.7/@actions.12/@implementation/@transitions.4" local_ID="13" stepLevel="3"/>
          <steps name="SetReachedStampRFID" incomingTransitions="//@resources.0/@pous.7/@actions.12/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.7/@actions.12/@implementation/@transitions.5" local_ID="16" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="17" qualifier="N" actionVariable="//@resources.0/@pous.7/@declaration/@internalVariables.7"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.7/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.7/@actions.12/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.Potentiometer.AtStampRFID" sourceStep="//@resources.0/@pous.7/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.12/@implementation/@steps.3" local_ID="6"/>
          <transitions condition="Turn_CounterClockwise_MTStRFID.t>T#8s" sourceStep="//@resources.0/@pous.7/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.12/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Table.Potentiometer.AtStampRFID" sourceStep="//@resources.0/@pous.7/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.7/@actions.12/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.7/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.7/@actions.12/@implementation/@steps.4" local_ID="15"/>
          <transitions condition="ReachedStampRFID" isJump="true" sourceStep="//@resources.0/@pous.7/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.7/@actions.12/@implementation/@steps.0" local_ID="20"/>
        </implementation>
      </actions>
      <actions name="ACT_PickUpWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PickUpWP">
          <steps name="Init_PickUpWP" outgoingTransitions="//@resources.0/@pous.7/@actions.13/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Crane_Down" incomingTransitions="//@resources.0/@pous.7/@actions.13/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.7/@actions.13/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPType" incomingTransitions="//@resources.0/@pous.7/@actions.13/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.7/@actions.13/@implementation/@transitions.2 //@resources.0/@pous.7/@actions.13/@implementation/@transitions.4" local_ID="6" stepLevel="2"/>
          <steps name="WPType_Is_WPTypeStack" incomingTransitions="//@resources.0/@pous.7/@actions.13/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.7/@actions.13/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="WPType_Is_WPTypeStamp" incomingTransitions="//@resources.0/@pous.7/@actions.13/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.7/@actions.13/@implementation/@transitions.5" local_ID="15" stepLevel="3"/>
          <steps name="Turn_On_Vacuum_PWU" incomingTransitions="//@resources.0/@pous.7/@actions.13/@implementation/@transitions.3 //@resources.0/@pous.7/@actions.13/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.7/@actions.13/@implementation/@transitions.6 //@resources.0/@pous.7/@actions.13/@implementation/@transitions.8" local_ID="19" stepLevel="4"/>
          <steps name="Crane_Up" incomingTransitions="//@resources.0/@pous.7/@actions.13/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.7/@actions.13/@implementation/@transitions.7" local_ID="23" stepLevel="5"/>
          <steps name="Error" incomingTransitions="//@resources.0/@pous.7/@actions.13/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.7/@actions.13/@implementation/@transitions.9" local_ID="28" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="29" qualifier="N" actionVariable="//@resources.0/@pous.7/@declaration/@inputVariables.7"/>
          </steps>
          <steps name="SetWPPickedUp" incomingTransitions="//@resources.0/@pous.7/@actions.13/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.7/@actions.13/@implementation/@transitions.10" local_ID="35" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="36" qualifier="N" actionVariable="//@resources.0/@pous.7/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.0" targetStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="ReachedStack" sourceStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="WPWeight_Heavy=Main.Stack_WPWeight_Heavy;" sourceStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.3" targetStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.5" local_ID="12"/>
          <transitions condition="ReachedStamp" sourceStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="WPWeight_Heavy=Main.Stamp_WPWeight_Heavy;" sourceStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.4" targetStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.5" local_ID="17"/>
          <transitions condition="Gripper.Intaken" sourceStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.5" targetStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.6" local_ID="22"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.6" targetStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.8" local_ID="25"/>
          <transitions condition="Turn_On_Vacuum_PWU.t>T#2s AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.5" targetStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.7" local_ID="27"/>
          <transitions condition="SoftwareEmergency" isJump="true" sourceStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.7" targetStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.0" local_ID="32"/>
          <transitions condition="WPPickedUp" isJump="true" sourceStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.8" targetStep="//@resources.0/@pous.7/@actions.13/@implementation/@steps.0" local_ID="39"/>
        </implementation>
      </actions>
      <actions name="ACT_PutDownWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PutDownWP">
          <steps name="Init_PutWPDown" outgoingTransitions="//@resources.0/@pous.7/@actions.14/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="WPWeight_Choice" incomingTransitions="//@resources.0/@pous.7/@actions.14/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.7/@actions.14/@implementation/@transitions.1 //@resources.0/@pous.7/@actions.14/@implementation/@transitions.3 //@resources.0/@pous.7/@actions.14/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="WPLight" incomingTransitions="//@resources.0/@pous.7/@actions.14/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.7/@actions.14/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="WPMedium" incomingTransitions="//@resources.0/@pous.7/@actions.14/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.7/@actions.14/@implementation/@transitions.4" local_ID="12" stepLevel="2"/>
          <steps name="WPHeavy" incomingTransitions="//@resources.0/@pous.7/@actions.14/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.7/@actions.14/@implementation/@transitions.6" local_ID="17" stepLevel="2"/>
          <steps name="Lower_Crane_PWD" incomingTransitions="//@resources.0/@pous.7/@actions.14/@implementation/@transitions.2 //@resources.0/@pous.7/@actions.14/@implementation/@transitions.4 //@resources.0/@pous.7/@actions.14/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.7/@actions.14/@implementation/@transitions.7" local_ID="21" stepLevel="3"/>
          <steps name="Put_WP_Down_1" incomingTransitions="//@resources.0/@pous.7/@actions.14/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.7/@actions.14/@implementation/@transitions.8" local_ID="24" stepLevel="4"/>
          <steps name="Crane_Up" incomingTransitions="//@resources.0/@pous.7/@actions.14/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.7/@actions.14/@implementation/@transitions.9" local_ID="27" stepLevel="5"/>
          <steps name="SetWPPutDown" incomingTransitions="//@resources.0/@pous.7/@actions.14/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.7/@actions.14/@implementation/@transitions.10" local_ID="30" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="N" actionVariable="//@resources.0/@pous.7/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.0" targetStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPWeight_Light" sourceStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="WPLight.t>T#0ms" sourceStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.2" targetStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.5" local_ID="9"/>
          <transitions condition="WPWeight_Medium" sourceStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="WPMedium.t>T#1000ms" sourceStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.3" targetStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="WPWeight_Heavy" sourceStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="WPHeavy.t>T#2000ms" sourceStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.4" targetStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.5" targetStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.6" local_ID="23"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.6" targetStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.7" local_ID="26"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.7" targetStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.8" local_ID="29"/>
          <transitions condition="WPPutDown" isJump="true" sourceStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.8" targetStep="//@resources.0/@pous.7/@actions.14/@implementation/@steps.0" local_ID="34"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Waiting_For_Stack_To_Provide_WP" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Check_WP_Type" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.2 //@resources.0/@pous.7/@actions.15/@implementation/@transitions.13" local_ID="6" stepLevel="2"/>
          <steps name="RFID_Stack" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="Crane_To_Stamp_1" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.4" local_ID="13" stepLevel="4"/>
          <steps name="Pick_Up_WP_1" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.5" local_ID="16" stepLevel="5"/>
          <steps name="Check_RC_1" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.6" local_ID="19" stepLevel="6"/>
          <steps name="Crane_Turning_To_Conveyor_1" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.7" local_ID="22" stepLevel="7"/>
          <steps name="Putting_Down_WP_1" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.8" local_ID="25" stepLevel="8"/>
          <steps name="Short_Delay" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.9" local_ID="28" stepLevel="9"/>
          <steps name="Sort_WP" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.10" local_ID="31" stepLevel="10"/>
          <steps name="CheckStamp_WPAvailable" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.11 //@resources.0/@pous.7/@actions.15/@implementation/@transitions.12" local_ID="34" stepLevel="11"/>
          <steps name="WP_Should_Be_Stamped" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.14 //@resources.0/@pous.7/@actions.15/@implementation/@transitions.24" local_ID="44" stepLevel="3"/>
          <steps name="RFID_Stack2" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.15" local_ID="48" stepLevel="4"/>
          <steps name="Crane_Turning_To_Stack_1" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.16" local_ID="51" stepLevel="5"/>
          <steps name="Crane_Pick_Up_Wp_2" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.16" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.17" local_ID="54" stepLevel="6"/>
          <steps name="Check_RC_2" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.18" local_ID="57" stepLevel="7"/>
          <steps name="Crane_Turning_To_Stamp_2" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.19" local_ID="60" stepLevel="8"/>
          <steps name="Crane_Put_Down_WP_2" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.20" local_ID="63" stepLevel="9"/>
          <steps name="Stamping_WP" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.20" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.21 //@resources.0/@pous.7/@actions.15/@implementation/@transitions.22" local_ID="66" stepLevel="10"/>
          <steps name="CheckStamp_AutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.21" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.23" local_ID="74" stepLevel="11"/>
          <steps name="RFID_Stamp" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.24" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.25" local_ID="79" stepLevel="4"/>
          <steps name="Crane_Turning_To_Stamp_3" incomingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.25" outgoingTransitions="//@resources.0/@pous.7/@actions.15/@implementation/@transitions.26" local_ID="82" stepLevel="5"/>
          <transitions condition="NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.0" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_Stack_WPProvided" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Check_Stack_WPType_Black" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.2" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.3" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.4" local_ID="12"/>
          <transitions condition="ReachedStack" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.4" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.5" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.6" local_ID="18"/>
          <transitions condition="NOT Check_RefillConveyor_IsSending AND Check_Rc_1.t>T#250ms" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.6" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.7" local_ID="21"/>
          <transitions condition="ReachedConveyor AND NOT Check_LargeSortingConveyor_IsSorting" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.7" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.8" local_ID="24"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.8" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.9" local_ID="27"/>
          <transitions condition="Short_Delay.t>T#50ms" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.9" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.10" local_ID="30"/>
          <transitions condition="Check_LargeSortingConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.10" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.11" local_ID="33"/>
          <transitions condition="NOT Check_Stamp_WPAvailable" isJump="true" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.11" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.1" local_ID="37"/>
          <transitions condition="Check_Stamp_WPAvailable" isJump="true" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.11" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.22" local_ID="39"/>
          <transitions condition="Check_Stack_WPType_Metallic OR Check_Stack_WPType_White" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.2" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.12" local_ID="43"/>
          <transitions condition="NOT Check_Stamp_IsStamping" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.12" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.13" local_ID="47"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.13" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.14" local_ID="50"/>
          <transitions condition="ReachedStack" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.14" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.15" local_ID="53"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.15" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.16" local_ID="56"/>
          <transitions condition="NOT Check_RefillConveyor_IsSending AND Check_Rc_2.t>T#250ms" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.16" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.17" local_ID="59"/>
          <transitions condition="ReachedStamp" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.17" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.18" local_ID="62"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.18" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.19" local_ID="65"/>
          <transitions condition="Check_Stack_WPType_Metallic OR Check_Stack_WPType_White" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.19" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.20" local_ID="69"/>
          <transitions condition="Check_Stack_WPType_Black" isJump="true" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.19" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.4" local_ID="71"/>
          <transitions condition="Check_Stamp_AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.20" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.5" local_ID="76"/>
          <transitions condition="Check_Stamp_IsStamping" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.12" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.21" local_ID="78"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.21" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.22" local_ID="81"/>
          <transitions condition="ReachedStamp AND NOT Check_Stamp_AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.22" targetStep="//@resources.0/@pous.7/@actions.15/@implementation/@steps.5" local_ID="84"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Crane_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.7/@actions.16/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.7/@actions.16/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.7/@actions.16/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopCrane" incomingTransitions="//@resources.0/@pous.7/@actions.16/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.7/@actions.16/@implementation/@transitions.2 //@resources.0/@pous.7/@actions.16/@implementation/@transitions.3" local_ID="6" stepLevel="2"/>
          <steps name="Turn_Vacuum_Off" incomingTransitions="//@resources.0/@pous.7/@actions.16/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.7/@actions.16/@implementation/@transitions.4" local_ID="12" stepLevel="3"/>
          <steps name="Retract_LiftingCylinder" incomingTransitions="//@resources.0/@pous.7/@actions.16/@implementation/@transitions.2 //@resources.0/@pous.7/@actions.16/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.7/@actions.16/@implementation/@transitions.5" local_ID="16" stepLevel="4"/>
          <steps name="Crane_EmergencyHandled" incomingTransitions="//@resources.0/@pous.7/@actions.16/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.7/@actions.16/@implementation/@transitions.6" local_ID="19" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="20" qualifier="N" actionVariable="//@resources.0/@pous.7/@declaration/@outputVariables.5"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.7/@actions.16/@implementation/@steps.0" targetStep="//@resources.0/@pous.7/@actions.16/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.7/@actions.16/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.16/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Table.Motor.Stopped AND Gripper.Intaken" sourceStep="//@resources.0/@pous.7/@actions.16/@implementation/@steps.2" targetStep="//@resources.0/@pous.7/@actions.16/@implementation/@steps.4" local_ID="9"/>
          <transitions condition="Table.Motor.Stopped AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.7/@actions.16/@implementation/@steps.2" targetStep="//@resources.0/@pous.7/@actions.16/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.7/@actions.16/@implementation/@steps.3" targetStep="//@resources.0/@pous.7/@actions.16/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.7/@actions.16/@implementation/@steps.4" targetStep="//@resources.0/@pous.7/@actions.16/@implementation/@steps.5" local_ID="18"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.7/@actions.16/@implementation/@steps.5" targetStep="//@resources.0/@pous.7/@actions.16/@implementation/@steps.0" local_ID="23"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Crane_ACT_Init" outgoingTransitions="//@resources.0/@pous.7/@actions.17/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Crane_MoveUp_Init" incomingTransitions="//@resources.0/@pous.7/@actions.17/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.7/@actions.17/@implementation/@transitions.1 //@resources.0/@pous.7/@actions.17/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="WPAllreadyPickedUp" incomingTransitions="//@resources.0/@pous.7/@actions.17/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.7/@actions.17/@implementation/@transitions.3" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.7/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Turn_To_Conveyor" incomingTransitions="//@resources.0/@pous.7/@actions.17/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.7/@actions.17/@implementation/@transitions.4" local_ID="14" stepLevel="3"/>
          <steps name="Put_WP_On_Conveyor_Init" incomingTransitions="//@resources.0/@pous.7/@actions.17/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.7/@actions.17/@implementation/@transitions.5" local_ID="17" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="18" qualifier="S" actionVariable="//@resources.0/@pous.7/@declaration/@internalVariables.13"/>
          </steps>
          <steps name="Is_WP_At_Stamp" incomingTransitions="//@resources.0/@pous.7/@actions.17/@implementation/@transitions.1 //@resources.0/@pous.7/@actions.17/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.7/@actions.17/@implementation/@transitions.6 //@resources.0/@pous.7/@actions.17/@implementation/@transitions.7" local_ID="23" stepLevel="5"/>
          <steps name="Turn_To_Stamp_Init" incomingTransitions="//@resources.0/@pous.7/@actions.17/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.7/@actions.17/@implementation/@transitions.8" local_ID="29" stepLevel="6"/>
          <steps name="PicWPFromStampUp" incomingTransitions="//@resources.0/@pous.7/@actions.17/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.7/@actions.17/@implementation/@transitions.9" local_ID="32" stepLevel="7"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.7/@actions.17/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.7/@actions.17/@implementation/@transitions.10" local_ID="37" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="38" qualifier="N" actionVariable="//@resources.0/@pous.7/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.0" targetStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Retracted AND NOT Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.5" local_ID="6"/>
          <transitions condition="LiftingCylinder.Retracted AND Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.1" targetStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.2" targetStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.3" local_ID="13"/>
          <transitions condition="ReachedConveyor" sourceStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.3" targetStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.4" targetStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.5" local_ID="21"/>
          <transitions condition="NOT Check_Stamp_WPAvailable" sourceStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.5" targetStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.8" local_ID="26"/>
          <transitions condition="Check_Stamp_WPAvailable" sourceStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.5" targetStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.6" local_ID="28"/>
          <transitions condition="ReachedStamp" sourceStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.6" targetStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.7" local_ID="31"/>
          <transitions condition="WPPickedUp" isJump="true" sourceStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.7" targetStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.3" local_ID="34"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.8" targetStep="//@resources.0/@pous.7/@actions.17/@implementation/@steps.0" local_ID="41"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.18" identifier="EnergyMonitor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="EnergyMonitor">
          <statements>//Hardware Input Variables</statements>
          <statements>//Hardware Output Variables</statements>
        </comment>
        <internalVariables name="BK_1_6_Wattmeter" scope="VAR" type="DERIVED" typeName="Wattmeter">
          <location/>
        </internalVariables>
        <internalVariables name="BK_2_3_7_Wattmeter" scope="VAR" type="DERIVED" typeName="Wattmeter">
          <location/>
        </internalVariables>
        <internalVariables name="BK_4_5_8_9_10_11_Wattmeter" scope="VAR" type="DERIVED" typeName="Wattmeter">
          <location/>
        </internalVariables>
        <internalVariables name="GearPoint_80l_min" scope="VAR" type="DERIVED" typeName="GearPointFlowSensor">
          <location/>
        </internalVariables>
        <internalVariables name="GearPoint_120l_min" scope="VAR" type="DERIVED" typeName="GearPointFlowSensor">
          <location/>
        </internalVariables>
        <internalVariables name="PressureSensor_4bar" scope="VAR" type="DERIVED" typeName="PressureSensor_4bar">
          <location/>
        </internalVariables>
        <internalVariables name="Flow_2to200l_min" scope="VAR" type="DERIVED" typeName="FlowSensor">
          <location/>
        </internalVariables>
        <internalVariables name="Transducer_0to10AC_0to10V" scope="VAR" type="DERIVED" typeName="A_to_V_Transducer">
          <location/>
        </internalVariables>
        <internalVariables name="ExtSensor_0to10V" scope="VAR" type="DERIVED" typeName="V_Sensor">
          <location/>
        </internalVariables>
        <internalVariables name="PressureSensor" scope="VAR" type="DERIVED" typeName="PressureSensor">
          <location/>
        </internalVariables>
        <internalVariables name="SmallContacter_left" scope="VAR" type="DERIVED" typeName="ProtectiveContact">
          <location/>
        </internalVariables>
        <internalVariables name="SmallContacter_right" scope="VAR" type="DERIVED" typeName="ProtectiveContact">
          <location/>
        </internalVariables>
        <internalVariables name="ChangeoverMagnetVaveRelay" scope="VAR" type="DERIVED" typeName="MagnetValve">
          <location/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.6 //@resources.0/@pous.5 //@resources.0/@pous.2" callers="//@resources.0/@pous.18" identifier="LargeSortingConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanel">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Seperator1" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="Seperator2" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="PsBeginning" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="OptRamp1" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="IndRamp1" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp1" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="UltrasonicSensor" scope="VAR_INPUT" type="DERIVED" typeName="UltrasonicSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="OptRamp2" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="IndRamp2" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp2" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="OptEnd" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp3" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="RFID" scope="VAR_INPUT" type="DERIVED" typeName="RFID">
          <location/>
        </inputVariables>
        <inputVariables name="OptBeginning" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToOperate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyorInitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyorAutoamticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="LargeSortingConveyor">
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="ConveyorSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="WPSorted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPTypeChecked" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="TargetChanged" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp1" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Conveyor" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp2" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp3" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_White" scope="VAR" type="UINT" typeName="UINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Black" scope="VAR" type="UINT" typeName="UINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Metallic" scope="VAR" type="UINT" typeName="UINT">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="NumberOfWPsAtConveyor" scope="VAR_OUTPUT" type="USINT" typeName="USINT">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsSorting" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="LargeSortingConveyor" id="_OuUcQDsuEeugKuRu1b-FYw" text="Panel();&#xA;ACT_CountWPsAtConveyor();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;&#xA;Check_AllowedToOperate := Main.Check_LargeSortingConveyor_AllowedToOperate;&#xA;Check_FollowConveyorInitCompleted := Main.Check_LargeSortingConveyor_FollowConveyorInitCompleted;&#xA;Check_FollowConveyorAutoamticExecuteCompleted := Main.Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:FunctionCallStatement" id="_OuUcQTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_OuUcQDsuEeugKuRu1b-FYw">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_OuUcQjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="24" structuredText="_OuUcQDsuEeugKuRu1b-FYw">
          <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CountWPsAtConveyor"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuUcRDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="32" structuredText="_OuUcQDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_OuUcQzsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuUcRjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="30" structuredText="_OuUcQDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_OuUcRTsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuUcSDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_OuUcQDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_OuUcRzsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuUcSjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="36" structuredText="_OuUcQDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_OuUcSTsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuUcTDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="74" structuredText="_OuUcQDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_OuUcSzsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuUcTjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="96" structuredText="_OuUcQDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyorInitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OuUcTTsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorInitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuUcUDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="120" structuredText="_OuUcQDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyorAutoamticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OuUcTzsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuUcUjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="39" structuredText="_OuUcQDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_OuUcUTsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_OuUcVjsuEeugKuRu1b-FYw" statementType="IF" absStartLine="11" absEndLine="13" relStartLine="11" relEndLine="13" endColumnPos="5" structuredText="_OuUcQDsuEeugKuRu1b-FYw">
          <conditionalBlocks id="_OuUcVTsuEeugKuRu1b-FYw" statementType="CONDITIONAL_BLOCK" absStartLine="11" absEndLine="12" relStartLine="11" relEndLine="12" endColumnPos="17" structuredText="_OuUcQDsuEeugKuRu1b-FYw" else="false">
            <condition xsi:type="STE:VariableExpression" id="_OuUcUzsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_OuUcVDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="17" structuredText="_OuUcQDsuEeugKuRu1b-FYw">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reset_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToOperate" id="_OuI2EDsuEeugKuRu1b-FYw" text="FollowConveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_OuI2EjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="40" structuredText="_OuI2EDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_OuI2ETsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_OuJdIDsuEeugKuRu1b-FYw" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;IsSorting:=FALSE;&#xA;&#xA;WPSorted:=FALSE;&#xA;WPTypeChecked:=FALSE;&#xA;TargetChanged:=FALSE;&#xA;WPType_White:=FALSE;&#xA;WPType_Black:=FALSE;&#xA;WPType_Metallic:=FALSE;&#xA;CurrentTarget_Ramp1:=FALSE;&#xA;CurrentTarget_Conveyor:=FALSE;&#xA;CurrentTarget_Ramp2:=FALSE;&#xA;CurrentTarget_Ramp3:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_OuJdIjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_OuJdIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_OuJdITsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuJdJDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_OuJdIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_OuJdIzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuJdJjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="40" structuredText="_OuJdIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_OuJdJTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuJdKDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="34" structuredText="_OuJdIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_OuJdJzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuJdKjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="16" structuredText="_OuJdIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            <right xsi:type="STE:Literal" id="_OuJdKTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuJdLDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="15" structuredText="_OuJdIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSorted"/>
            <right xsi:type="STE:Literal" id="_OuJdKzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuJdLjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="20" structuredText="_OuJdIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPTypeChecked"/>
            <right xsi:type="STE:Literal" id="_OuJdLTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuJdMDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="20" structuredText="_OuJdIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TargetChanged"/>
            <right xsi:type="STE:Literal" id="_OuJdLzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuJdMjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="19" structuredText="_OuJdIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_OuJdMTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuJdNDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="19" structuredText="_OuJdIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_OuJdMzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuJdNjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="22" structuredText="_OuJdIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_OuJdNTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuJdODsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="26" structuredText="_OuJdIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp1"/>
            <right xsi:type="STE:Literal" id="_OuJdNzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuJdOjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" endColumnPos="29" structuredText="_OuJdIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Conveyor"/>
            <right xsi:type="STE:Literal" id="_OuJdOTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuJdPDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" endColumnPos="26" structuredText="_OuJdIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp2"/>
            <right xsi:type="STE:Literal" id="_OuJdOzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuJdPjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" endColumnPos="26" structuredText="_OuJdIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp3"/>
            <right xsi:type="STE:Literal" id="_OuJdPTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToOperate" id="_OuKEMDsuEeugKuRu1b-FYw" text="FollowConveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_OuKEMjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="39" structuredText="_OuKEMDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_OuKEMTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_OneWP">
        <implementation xsi:type="ST:StructuredText" label="Set_OneWP" id="_OuL5YDsuEeugKuRu1b-FYw" text="NumberOfWPsAtConveyor:=1;">
          <statements xsi:type="ST:Assignment" id="_OuL5YjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_OuL5YDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_OuL5YTsuEeugKuRu1b-FYw" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityBlack">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityBlack" id="_OuMgcDsuEeugKuRu1b-FYw" text="Priority_Black := 4;">
          <statements xsi:type="ST:Assignment" id="_OuMgcjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_OuMgcDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Black"/>
            <right xsi:type="STE:Literal" id="_OuMgcTsuEeugKuRu1b-FYw" dataType="DINT" expressionType="LITERAL" symbol="4"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityMetallic">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityMetallic" id="_OuMgczsuEeugKuRu1b-FYw" text="Priority_Metallic := 3;">
          <statements xsi:type="ST:Assignment" id="_OuMgdTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_OuMgczsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Metallic"/>
            <right xsi:type="STE:Literal" id="_OuMgdDsuEeugKuRu1b-FYw" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityWhite">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityWhite" id="_OuMgdjsuEeugKuRu1b-FYw" text="Priority_White := 1;">
          <statements xsi:type="ST:Assignment" id="_OuMgeDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_OuMgdjsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_White"/>
            <right xsi:type="STE:Literal" id="_OuMgdzsuEeugKuRu1b-FYw" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_ThreeWP">
        <implementation xsi:type="ST:StructuredText" label="Set_ThreeWP" id="_OuNHgDsuEeugKuRu1b-FYw" text="NumberOfWPsAtConveyor:=3;">
          <statements xsi:type="ST:Assignment" id="_OuNHgjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_OuNHgDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_OuNHgTsuEeugKuRu1b-FYw" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_TwoWP">
        <implementation xsi:type="ST:StructuredText" label="Set_TwoWP" id="_OuNHgzsuEeugKuRu1b-FYw" text="NumberOfWPsAtConveyor:=2;">
          <statements xsi:type="ST:Assignment" id="_OuNHhTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_OuNHgzsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_OuNHhDsuEeugKuRu1b-FYw" dataType="DINT" expressionType="LITERAL" symbol="2"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_ZeroWP">
        <implementation xsi:type="ST:StructuredText" label="Set_ZeroWP" id="_OuNHhjsuEeugKuRu1b-FYw" text="NumberOfWPsAtConveyor:=0;">
          <statements xsi:type="ST:Assignment" id="_OuNHiDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_OuNHhjsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_OuNHhzsuEeugKuRu1b-FYw" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ChangeTarget">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_ChangeTarget">
          <steps name="ACT_ChangeTarget_Init" outgoingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetTargets" incomingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.9/@actions.10/@implementation/@transitions.10 //@resources.0/@pous.9/@actions.10/@implementation/@transitions.18" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="6" qualifier="R" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="R" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="White" incomingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.9/@actions.10/@implementation/@transitions.3 //@resources.0/@pous.9/@actions.10/@implementation/@transitions.4 //@resources.0/@pous.9/@actions.10/@implementation/@transitions.5" local_ID="13" stepLevel="2"/>
          <steps name="Ramp_1" incomingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.6" local_ID="17" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="18" qualifier="S" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="R" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="20" qualifier="R" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="21" qualifier="R" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Choice_Ramp1Full" incomingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.7 //@resources.0/@pous.9/@actions.10/@implementation/@transitions.8" local_ID="35" stepLevel="4"/>
          <steps name="Conveyor" incomingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.9" local_ID="41" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="42" qualifier="R" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="43" qualifier="R" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="44" qualifier="R" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="45" qualifier="S" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Black" incomingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.11 //@resources.0/@pous.9/@actions.10/@implementation/@transitions.12 //@resources.0/@pous.9/@actions.10/@implementation/@transitions.13 //@resources.0/@pous.9/@actions.10/@implementation/@transitions.14" local_ID="52" stepLevel="2"/>
          <steps name="Ramp_2" incomingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.15" local_ID="56" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="57" qualifier="R" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="58" qualifier="S" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="59" qualifier="R" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="60" qualifier="R" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Choice_Ramp2Full" incomingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.16 //@resources.0/@pous.9/@actions.10/@implementation/@transitions.17" local_ID="74" stepLevel="4"/>
          <steps name="Metallic" incomingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.19 //@resources.0/@pous.9/@actions.10/@implementation/@transitions.20 //@resources.0/@pous.9/@actions.10/@implementation/@transitions.21" local_ID="86" stepLevel="2"/>
          <steps name="Ramp_3" incomingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.22" local_ID="90" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="91" qualifier="R" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="92" qualifier="R" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="93" qualifier="S" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="94" qualifier="R" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Choice_Ramp3Full" incomingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.22" outgoingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.23 //@resources.0/@pous.9/@actions.10/@implementation/@transitions.24" local_ID="105" stepLevel="4"/>
          <steps name="SetTargetChanged" incomingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.7 //@resources.0/@pous.9/@actions.10/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.9/@actions.10/@implementation/@transitions.25" local_ID="115" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="116" qualifier="N" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT TargetChanged AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.2" local_ID="12"/>
          <transitions condition="Priority_White=1" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.3" local_ID="16"/>
          <transitions condition="Priority_White=2" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.7" local_ID="24"/>
          <transitions condition="Priority_White=3" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.10" local_ID="27"/>
          <transitions condition="Priority_White=4" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.5" local_ID="30"/>
          <transitions condition="CurrentTarget_Ramp1" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.4" local_ID="34"/>
          <transitions condition="NOT Ramp1.RampFull.DI_WPDetected" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.12" local_ID="38"/>
          <transitions condition="Ramp1.RampFull.DI_WPDetected" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.5" local_ID="40"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.12" local_ID="48"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.6" local_ID="51"/>
          <transitions condition="Priority_Black=2" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.7" local_ID="55"/>
          <transitions condition="Priority_Black=1" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.3" local_ID="63"/>
          <transitions condition="Priority_Black=3" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.10" local_ID="66"/>
          <transitions condition="Priority_Black=4" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.5" local_ID="69"/>
          <transitions condition="CurrentTarget_Ramp2" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.8" local_ID="73"/>
          <transitions condition="NOT Ramp2.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.12" local_ID="77"/>
          <transitions condition="Ramp2.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.5" local_ID="79"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.9" local_ID="85"/>
          <transitions condition="Priority_Metallic=3" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.10" local_ID="89"/>
          <transitions condition="Priority_Metallic=1" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.7" local_ID="97"/>
          <transitions condition="Priority_Metallic=2" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.10" local_ID="100"/>
          <transitions condition="CurrentTarget_Ramp3" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.10" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.11" local_ID="104"/>
          <transitions condition="NOT Ramp3.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.12" local_ID="108"/>
          <transitions condition="Ramp3.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.7" local_ID="110"/>
          <transitions condition="TargetChanged" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.12" targetStep="//@resources.0/@pous.9/@actions.10/@implementation/@steps.0" local_ID="119"/>
        </implementation>
      </actions>
      <actions name="ACT_CheckWPType">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_CheckWPType">
          <steps name="Conveyor_ACT_CheckWPType_Init" outgoingTransitions="//@resources.0/@pous.9/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Reset_WPType" incomingTransitions="//@resources.0/@pous.9/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.9/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.9/@actions.11/@implementation/@transitions.3 //@resources.0/@pous.9/@actions.11/@implementation/@transitions.5" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.5"/>
            <actions xsi:type="SFC:SimpleAction" localId="6" qualifier="R" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Is_White" incomingTransitions="//@resources.0/@pous.9/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.9/@actions.11/@implementation/@transitions.2" local_ID="11" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="12" qualifier="S" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.4"/>
          </steps>
          <steps name="WP_Is_Black" incomingTransitions="//@resources.0/@pous.9/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.9/@actions.11/@implementation/@transitions.4" local_ID="18" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="S" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.5"/>
          </steps>
          <steps name="WP_Is_Metallic" incomingTransitions="//@resources.0/@pous.9/@actions.11/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.9/@actions.11/@implementation/@transitions.6" local_ID="25" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="26" qualifier="S" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Type_Checked" incomingTransitions="//@resources.0/@pous.9/@actions.11/@implementation/@transitions.2 //@resources.0/@pous.9/@actions.11/@implementation/@transitions.4 //@resources.0/@pous.9/@actions.11/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.9/@actions.11/@implementation/@transitions.7" local_ID="31" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="32" qualifier="N" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT WPTypeChecked AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.9/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.9/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="OptRamp1.DI_WPLight AND NOT IndRamp1.DI_WPMetallic" sourceStep="//@resources.0/@pous.9/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.9/@actions.11/@implementation/@steps.2" local_ID="10"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.9/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.9/@actions.11/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="NOT IndRamp1.DI_WPMetallic AND NOT OptRamp1.DI_WPLight" sourceStep="//@resources.0/@pous.9/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.9/@actions.11/@implementation/@steps.3" local_ID="17"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.9/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.9/@actions.11/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="IndRamp1.DI_WPMetallic" sourceStep="//@resources.0/@pous.9/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.9/@actions.11/@implementation/@steps.4" local_ID="24"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.9/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.9/@actions.11/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="WPTypeChecked" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.11/@implementation/@steps.5" targetStep="//@resources.0/@pous.9/@actions.11/@implementation/@steps.0" local_ID="35"/>
        </implementation>
      </actions>
      <actions name="ACT_CountWPsAtConveyor">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_CountWPsAtConveyor">
          <steps name="Init_ACT_CountWPsAtConveyor" outgoingTransitions="//@resources.0/@pous.9/@actions.12/@implementation/@transitions.0 //@resources.0/@pous.9/@actions.12/@implementation/@transitions.4 //@resources.0/@pous.9/@actions.12/@implementation/@transitions.8 //@resources.0/@pous.9/@actions.12/@implementation/@transitions.12" local_ID="0" initialStep="true"/>
          <steps name="Wait500ms_0" incomingTransitions="//@resources.0/@pous.9/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.9/@actions.12/@implementation/@transitions.1 //@resources.0/@pous.9/@actions.12/@implementation/@transitions.3" local_ID="4" stepLevel="1"/>
          <steps name="Zero_WP" incomingTransitions="//@resources.0/@pous.9/@actions.12/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.9/@actions.12/@implementation/@transitions.2" local_ID="8" stepLevel="2"/>
          <steps name="Wait500ms_1" incomingTransitions="//@resources.0/@pous.9/@actions.12/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.9/@actions.12/@implementation/@transitions.5 //@resources.0/@pous.9/@actions.12/@implementation/@transitions.7" local_ID="17" stepLevel="1"/>
          <steps name="One_WP" incomingTransitions="//@resources.0/@pous.9/@actions.12/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.9/@actions.12/@implementation/@transitions.6" local_ID="21" stepLevel="2"/>
          <steps name="Wait500ms_2" incomingTransitions="//@resources.0/@pous.9/@actions.12/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.9/@actions.12/@implementation/@transitions.9 //@resources.0/@pous.9/@actions.12/@implementation/@transitions.10" local_ID="30" stepLevel="1"/>
          <steps name="Two_WP" incomingTransitions="//@resources.0/@pous.9/@actions.12/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.9/@actions.12/@implementation/@transitions.11" local_ID="34" stepLevel="2"/>
          <steps name="Wait500ms_3" incomingTransitions="//@resources.0/@pous.9/@actions.12/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.9/@actions.12/@implementation/@transitions.13 //@resources.0/@pous.9/@actions.12/@implementation/@transitions.15" local_ID="43" stepLevel="1"/>
          <steps name="Three_WP" incomingTransitions="//@resources.0/@pous.9/@actions.12/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.9/@actions.12/@implementation/@transitions.14" local_ID="47" stepLevel="2"/>
          <transitions condition="UltrasonicSensor.AI_UltraSonic>=15200" sourceStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.1" local_ID="3"/>
          <transitions condition="Wait500ms_0.t>T#500ms AND UltrasonicSensor.AI_UltraSonic>=15200" sourceStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="NumberOfWPsAtConveyor=0" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Wait500ms_0.t>T#500ms AND NOT UltrasonicSensor.AI_UltraSonic>=15200" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.0" local_ID="12"/>
          <transitions condition="15200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=13200" sourceStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.3" local_ID="16"/>
          <transitions condition="Wait500ms_1.t>T#500ms AND (15200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=13200)" sourceStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.4" local_ID="20"/>
          <transitions condition="NumberOfWPsAtConveyor=1" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.0" local_ID="23"/>
          <transitions condition="Wait500ms_1.t>T#500ms AND NOT (15200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=13200)" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.0" local_ID="25"/>
          <transitions condition="13200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=8500" sourceStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="Wait500ms_2.t>T#500ms AND (13200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=8500)" sourceStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.5" targetStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.6" local_ID="33"/>
          <transitions condition="Wait500ms_2.t>T#500ms AND NOT(13200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=8500)" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.5" targetStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.0" local_ID="36"/>
          <transitions condition="NumberOfWPsAtConveyor=2" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.6" targetStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.0" local_ID="40"/>
          <transitions condition="8500>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=4000" sourceStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.7" local_ID="42"/>
          <transitions condition="Wait500ms_3.t>T#500ms AND (8500>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=4000)" sourceStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.7" targetStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.8" local_ID="46"/>
          <transitions condition="NumberOfWPsAtConveyor=3" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.8" targetStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.0" local_ID="49"/>
          <transitions condition="Wait500ms_3.t>T#500ms AND NOT(8500>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=4000)" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.7" targetStep="//@resources.0/@pous.9/@actions.12/@implementation/@steps.0" local_ID="51"/>
        </implementation>
      </actions>
      <actions name="ACT_SortWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SortWP">
          <steps name="Init_ACT_SortWP" outgoingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnConveyorOn" incomingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.9/@declaration/@outputVariables.10"/>
            <actions xsi:type="SFC:ComplexAction" localId="5" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.1"/>
          </steps>
          <steps name="Wait_Till_Detection" incomingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.2" local_ID="9" stepLevel="2"/>
          <steps name="Stop_Conveyor" incomingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.3" local_ID="12" stepLevel="3"/>
          <steps name="Checking_WP_Type" incomingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.4" local_ID="15" stepLevel="4"/>
          <steps name="Changing_Target" incomingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.5" local_ID="18" stepLevel="5"/>
          <steps name="RFID_ReadWrite" incomingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.6" local_ID="21" stepLevel="6"/>
          <steps name="TrunConveyorOnAgain" incomingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.7 //@resources.0/@pous.9/@actions.13/@implementation/@transitions.11 //@resources.0/@pous.9/@actions.13/@implementation/@transitions.17 //@resources.0/@pous.9/@actions.13/@implementation/@transitions.21" local_ID="24" stepLevel="7"/>
          <steps name="TurnConveyorOff_1" incomingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.8" local_ID="28" stepLevel="8">
            <actions xsi:type="SFC:ComplexAction" localId="29" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="Pusher1_Extending" incomingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.9" local_ID="33" stepLevel="9"/>
          <steps name="Pusher1_Retracting" incomingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.10" local_ID="36" stepLevel="10"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.12" local_ID="41" stepLevel="8"/>
          <steps name="Transporting_To_Conveyor" incomingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.13" local_ID="44" stepLevel="9"/>
          <steps name="AllowFollowConveyorToReceiveWP" incomingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.14" local_ID="47" stepLevel="10"/>
          <steps name="TurnConveyorOff_4" incomingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.15" local_ID="50" stepLevel="11"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.16" local_ID="53" stepLevel="12"/>
          <steps name="TurnConveyorOff_2" incomingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.18" local_ID="58" stepLevel="8">
            <actions xsi:type="SFC:ComplexAction" localId="59" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="Pusher2_Extending" incomingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.19" local_ID="63" stepLevel="9"/>
          <steps name="Pusher2_Retract" incomingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.20" local_ID="66" stepLevel="10"/>
          <steps name="TurnConveyorOff_3" incomingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.21" outgoingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.22" local_ID="71" stepLevel="8">
            <actions xsi:type="SFC:ComplexAction" localId="72" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="WP_Is_Sorted" incomingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.10 //@resources.0/@pous.9/@actions.13/@implementation/@transitions.16 //@resources.0/@pous.9/@actions.13/@implementation/@transitions.20 //@resources.0/@pous.9/@actions.13/@implementation/@transitions.22" outgoingTransitions="//@resources.0/@pous.9/@actions.13/@implementation/@transitions.23" local_ID="77" stepLevel="13">
            <actions xsi:type="SFC:SimpleAction" localId="78" qualifier="R" actionVariable="//@resources.0/@pous.9/@declaration/@outputVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="79" qualifier="N" actionVariable="//@resources.0/@pous.9/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT WPSorted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.0" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="PsBeginning.DI_WPDetected" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.1" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Wait_Till_Detection.t>T#300ms" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.3" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="WPTypeChecked" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.4" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.5" local_ID="17"/>
          <transitions condition="TargetChanged" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.5" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.6" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.7" local_ID="23"/>
          <transitions condition="CurrentTarget_Ramp1" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.7" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.8" local_ID="27"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.8" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.9" local_ID="32"/>
          <transitions condition="Seperator1.Extended" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.9" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.10" local_ID="35"/>
          <transitions condition="Seperator1.Retracted" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.10" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.20" local_ID="38"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.7" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.11" local_ID="40"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.11" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.12" local_ID="43"/>
          <transitions condition="Transporting_To_Conveyor.t>T#1500ms" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.12" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.13" local_ID="46"/>
          <transitions condition="Check_FollowConveyorAutoamticExecuteCompleted" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.13" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.14" local_ID="49"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.14" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.15" local_ID="52"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.15" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.20" local_ID="55"/>
          <transitions condition="CurrentTarget_Ramp2" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.7" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.16" local_ID="57"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.16" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.17" local_ID="62"/>
          <transitions condition="Seperator2.Extended" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.17" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.18" local_ID="65"/>
          <transitions condition="Seperator2.Retracted" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.18" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.20" local_ID="68"/>
          <transitions condition="CurrentTarget_Ramp3" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.7" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.19" local_ID="70"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.19" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.20" local_ID="75"/>
          <transitions condition="WPSorted" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.20" targetStep="//@resources.0/@pous.9/@actions.13/@implementation/@steps.0" local_ID="82"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="LargeSortingConveyor_ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.9/@actions.14/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.9/@actions.14/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.9/@actions.14/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Sort_WP" incomingTransitions="//@resources.0/@pous.9/@actions.14/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.9/@actions.14/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.9/@actions.14/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.9/@actions.14/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.9/@declaration/@outputVariables.7"/>
          </steps>
          <transitions condition="Check_AllowedToOperate AND NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.9/@actions.14/@implementation/@steps.0" targetStep="//@resources.0/@pous.9/@actions.14/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToOperate AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.9/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.9/@actions.14/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="WPSorted" sourceStep="//@resources.0/@pous.9/@actions.14/@implementation/@steps.2" targetStep="//@resources.0/@pous.9/@actions.14/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.14/@implementation/@steps.3" targetStep="//@resources.0/@pous.9/@actions.14/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Conveyor_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.9/@actions.15/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.9/@actions.15/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.9/@actions.15/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stop_Conveyor" incomingTransitions="//@resources.0/@pous.9/@actions.15/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.9/@actions.15/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Pusher1_Retracting_ES" incomingTransitions="//@resources.0/@pous.9/@actions.15/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.9/@actions.15/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Pusher2_Retracting_ES" incomingTransitions="//@resources.0/@pous.9/@actions.15/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.9/@actions.15/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="Switch_Retract" incomingTransitions="//@resources.0/@pous.9/@actions.15/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.9/@actions.15/@implementation/@transitions.5" local_ID="15" stepLevel="5"/>
          <steps name="Conveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.9/@actions.15/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.9/@actions.15/@implementation/@transitions.6" local_ID="18" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="N" actionVariable="//@resources.0/@pous.9/@declaration/@outputVariables.9"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.9/@actions.15/@implementation/@steps.0" targetStep="//@resources.0/@pous.9/@actions.15/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.9/@actions.15/@implementation/@steps.1" targetStep="//@resources.0/@pous.9/@actions.15/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.9/@actions.15/@implementation/@steps.2" targetStep="//@resources.0/@pous.9/@actions.15/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Seperator1.Retracted" sourceStep="//@resources.0/@pous.9/@actions.15/@implementation/@steps.3" targetStep="//@resources.0/@pous.9/@actions.15/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="Seperator2.Retracted" sourceStep="//@resources.0/@pous.9/@actions.15/@implementation/@steps.4" targetStep="//@resources.0/@pous.9/@actions.15/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.9/@actions.15/@implementation/@steps.5" targetStep="//@resources.0/@pous.9/@actions.15/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.15/@implementation/@steps.6" targetStep="//@resources.0/@pous.9/@actions.15/@implementation/@steps.0" local_ID="22"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Conveyor_ACT_Init" outgoingTransitions="//@resources.0/@pous.9/@actions.16/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.9/@actions.16/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.9/@actions.16/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="TurnConveyorOn" incomingTransitions="//@resources.0/@pous.9/@actions.16/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.9/@actions.16/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="AllowFollowConveyorToInit" incomingTransitions="//@resources.0/@pous.9/@actions.16/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.9/@actions.16/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="S" actionVariable="//@resources.0/@pous.9/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Stop_Conveyors" incomingTransitions="//@resources.0/@pous.9/@actions.16/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.9/@actions.16/@implementation/@transitions.4" local_ID="14" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="15" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.9/@actions.16/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.9/@actions.16/@implementation/@transitions.5" local_ID="19" stepLevel="5"/>
          <steps name="Reset_AllowFollowConveyorToInit" incomingTransitions="//@resources.0/@pous.9/@actions.16/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.9/@actions.16/@implementation/@transitions.6" local_ID="22" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="R" actionVariable="//@resources.0/@pous.9/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.9/@actions.16/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.9/@actions.16/@implementation/@transitions.7" local_ID="27" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="28" qualifier="N" actionVariable="//@resources.0/@pous.9/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.9/@actions.16/@implementation/@steps.0" targetStep="//@resources.0/@pous.9/@actions.16/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.9/@actions.16/@implementation/@steps.1" targetStep="//@resources.0/@pous.9/@actions.16/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.9/@actions.16/@implementation/@steps.2" targetStep="//@resources.0/@pous.9/@actions.16/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="FollowConveyor_AllowedToInit" sourceStep="//@resources.0/@pous.9/@actions.16/@implementation/@steps.3" targetStep="//@resources.0/@pous.9/@actions.16/@implementation/@steps.4" local_ID="13"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.9/@actions.16/@implementation/@steps.4" targetStep="//@resources.0/@pous.9/@actions.16/@implementation/@steps.5" local_ID="18"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.9/@actions.16/@implementation/@steps.5" targetStep="//@resources.0/@pous.9/@actions.16/@implementation/@steps.6" local_ID="21"/>
          <transitions condition="NOT FollowConveyor_AllowedToInit AND Check_FollowConveyorInitCompleted" sourceStep="//@resources.0/@pous.9/@actions.16/@implementation/@steps.6" targetStep="//@resources.0/@pous.9/@actions.16/@implementation/@steps.7" local_ID="26"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.9/@actions.16/@implementation/@steps.7" targetStep="//@resources.0/@pous.9/@actions.16/@implementation/@steps.0" local_ID="31"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.6 //@resources.0/@pous.5" callers="//@resources.0/@pous.18" identifier="PicAlpha" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="AtPosition1" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="AtPosition2" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="AtPosition3" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="AtPosition4" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Gripper" scope="VAR_INPUT" type="DERIVED" typeName="VacuumGripperExtended">
          <location/>
        </inputVariables>
        <inputVariables name="LiftingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="SoftwareEmergency" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToOperate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Conveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="PicAlpha">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC</statements>
        </comment>
        <internalVariables name="WPPickedUp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPPutDown" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition1" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition2" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition3" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition4" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Conveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="PicAlpha" id="_OuWRcDsuEeugKuRu1b-FYw" text="Check_AllowedToOperate := MAIN.Check_PicAlpha_AllowedToOperate;&#xA;Check_Conveyor_AutomaticExecuteCompleted := MAIN.Check_PicAlpha_Conveyor_AutomaticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_OuWRcjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="62" structuredText="_OuWRcDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_OuWRcTsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuWRdDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="98" structuredText="_OuWRcDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Conveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OuWRczsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_Conveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuWRdjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="39" structuredText="_OuWRcDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_OuWRdTsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_OuWRejsuEeugKuRu1b-FYw" statementType="IF" absStartLine="4" absEndLine="6" relStartLine="4" relEndLine="6" endColumnPos="5" structuredText="_OuWRcDsuEeugKuRu1b-FYw">
          <conditionalBlocks id="_OuWReTsuEeugKuRu1b-FYw" statementType="CONDITIONAL_BLOCK" absStartLine="4" absEndLine="5" relStartLine="4" relEndLine="5" endColumnPos="17" structuredText="_OuWRcDsuEeugKuRu1b-FYw" else="false">
            <condition xsi:type="STE:VariableExpression" id="_OuWRdzsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_OuWReDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="17" structuredText="_OuWRcDsuEeugKuRu1b-FYw">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_OuVDUDsuEeugKuRu1b-FYw" text="InitCompleted := FALSE;&#xA;Conveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;&#xA;WPPickedUp := FALSE;&#xA;WPPutDown := FALSE;&#xA;ReachedPosition1 := FALSE;&#xA;ReachedPosition2 := FALSE;&#xA;ReachedPosition3 := FALSE;&#xA;ReachedPosition4 := FALSE;">
          <statements xsi:type="ST:Assignment" id="_OuVDUjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_OuVDUDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_OuVDUTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuVDVDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_OuVDUDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_OuVDUzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuVDVjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="34" structuredText="_OuVDUDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_OuVDVTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuVDWDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="19" structuredText="_OuVDUDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPickedUp"/>
            <right xsi:type="STE:Literal" id="_OuVDVzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuVDWjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="18" structuredText="_OuVDUDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPutDown"/>
            <right xsi:type="STE:Literal" id="_OuVDWTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuVDXDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="25" structuredText="_OuVDUDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition1"/>
            <right xsi:type="STE:Literal" id="_OuVDWzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuVDXjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="25" structuredText="_OuVDUDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition2"/>
            <right xsi:type="STE:Literal" id="_OuVDXTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuVDYDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="25" structuredText="_OuVDUDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition3"/>
            <right xsi:type="STE:Literal" id="_OuVDXzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuVDYjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="25" structuredText="_OuVDUDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition4"/>
            <right xsi:type="STE:Literal" id="_OuVDYTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos1">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos1">
          <steps name="Init_ACT_MoveToPos1" outgoingTransitions="//@resources.0/@pous.10/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos1" incomingTransitions="//@resources.0/@pous.10/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.10/@actions.1/@implementation/@transitions.1 //@resources.0/@pous.10/@actions.1/@implementation/@transitions.3" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Backwards" incomingTransitions="//@resources.0/@pous.10/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.10/@actions.1/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Turn_Backwards_Pos1" incomingTransitions="//@resources.0/@pous.10/@actions.1/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.10/@actions.1/@implementation/@transitions.4 //@resources.0/@pous.10/@actions.1/@implementation/@transitions.5" local_ID="12" stepLevel="2"/>
          <steps name="Turn_Forwards_Pos1" incomingTransitions="//@resources.0/@pous.10/@actions.1/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.10/@actions.1/@implementation/@transitions.6" local_ID="18" stepLevel="3"/>
          <steps name="Stop_Motor_Pos1" incomingTransitions="//@resources.0/@pous.10/@actions.1/@implementation/@transitions.2 //@resources.0/@pous.10/@actions.1/@implementation/@transitions.4 //@resources.0/@pous.10/@actions.1/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.10/@actions.1/@implementation/@transitions.7" local_ID="23" stepLevel="4"/>
          <steps name="Position1_Reached" incomingTransitions="//@resources.0/@pous.10/@actions.1/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.10/@actions.1/@implementation/@transitions.8" local_ID="26" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" actionVariable="//@resources.0/@pous.10/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT ReachedPosition1 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.10/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.10/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition2.DI_PositionReached OR AtPosition3.DI_PositionReached OR AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.10/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.10/@actions.1/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.10/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.10/@actions.1/@implementation/@steps.5" local_ID="9"/>
          <transitions condition="NOT (AtPosition2.DI_PositionReached AND AtPosition3.DI_PositionReached AND AtPosition4.DI_PositionReached)" sourceStep="//@resources.0/@pous.10/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.10/@actions.1/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.10/@actions.1/@implementation/@steps.3" targetStep="//@resources.0/@pous.10/@actions.1/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="NOT AtPosition1.DI_PositionReached AND Turn_Backwards_Pos1.t>T#4s" sourceStep="//@resources.0/@pous.10/@actions.1/@implementation/@steps.3" targetStep="//@resources.0/@pous.10/@actions.1/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.10/@actions.1/@implementation/@steps.4" targetStep="//@resources.0/@pous.10/@actions.1/@implementation/@steps.5" local_ID="20"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.10/@actions.1/@implementation/@steps.5" targetStep="//@resources.0/@pous.10/@actions.1/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="ReachedPosition1" isJump="true" sourceStep="//@resources.0/@pous.10/@actions.1/@implementation/@steps.6" targetStep="//@resources.0/@pous.10/@actions.1/@implementation/@steps.0" local_ID="30"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos2">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos2">
          <steps name="Init_ACT_MoveToPos2" outgoingTransitions="//@resources.0/@pous.10/@actions.2/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos2" incomingTransitions="//@resources.0/@pous.10/@actions.2/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.10/@actions.2/@implementation/@transitions.1 //@resources.0/@pous.10/@actions.2/@implementation/@transitions.3 //@resources.0/@pous.10/@actions.2/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Move_Forwards" incomingTransitions="//@resources.0/@pous.10/@actions.2/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.10/@actions.2/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Move_Backwards" incomingTransitions="//@resources.0/@pous.10/@actions.2/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.10/@actions.2/@implementation/@transitions.4" local_ID="12" stepLevel="2"/>
          <steps name="Turn_Backwards_Pos2" incomingTransitions="//@resources.0/@pous.10/@actions.2/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.10/@actions.2/@implementation/@transitions.6 //@resources.0/@pous.10/@actions.2/@implementation/@transitions.7" local_ID="17" stepLevel="2"/>
          <steps name="Turn_Forwards_Pos2" incomingTransitions="//@resources.0/@pous.10/@actions.2/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.10/@actions.2/@implementation/@transitions.8" local_ID="23" stepLevel="3"/>
          <steps name="Stop_Motor_Pos2" incomingTransitions="//@resources.0/@pous.10/@actions.2/@implementation/@transitions.2 //@resources.0/@pous.10/@actions.2/@implementation/@transitions.4 //@resources.0/@pous.10/@actions.2/@implementation/@transitions.6 //@resources.0/@pous.10/@actions.2/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.10/@actions.2/@implementation/@transitions.9" local_ID="28" stepLevel="4"/>
          <steps name="Position2_Reached" incomingTransitions="//@resources.0/@pous.10/@actions.2/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.10/@actions.2/@implementation/@transitions.10" local_ID="31" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="32" qualifier="N" actionVariable="//@resources.0/@pous.10/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT ReachedPosition2 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.0" targetStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.1" targetStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.2" targetStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="AtPosition3.DI_PositionReached OR AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.1" targetStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.3" targetStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.6" local_ID="14"/>
          <transitions condition="NOT (AtPosition1.DI_PositionReached AND AtPosition3.DI_PositionReached AND AtPosition4.DI_PositionReached)" sourceStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.1" targetStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.4" targetStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="NOT AtPosition2.DI_PositionReached AND Turn_Backwards_Pos2.t>T#4s" sourceStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.4" targetStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.5" targetStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.6" targetStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.7" local_ID="30"/>
          <transitions condition="ReachedPosition2" isJump="true" sourceStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.7" targetStep="//@resources.0/@pous.10/@actions.2/@implementation/@steps.0" local_ID="35"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos3">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos3">
          <steps name="Init_ACT_MoveToPos3" outgoingTransitions="//@resources.0/@pous.10/@actions.3/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos3" incomingTransitions="//@resources.0/@pous.10/@actions.3/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.10/@actions.3/@implementation/@transitions.1 //@resources.0/@pous.10/@actions.3/@implementation/@transitions.3 //@resources.0/@pous.10/@actions.3/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Move_Forwards" incomingTransitions="//@resources.0/@pous.10/@actions.3/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.10/@actions.3/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Move_Backwards" incomingTransitions="//@resources.0/@pous.10/@actions.3/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.10/@actions.3/@implementation/@transitions.4" local_ID="12" stepLevel="2"/>
          <steps name="Move_Backwards_Pos3" incomingTransitions="//@resources.0/@pous.10/@actions.3/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.10/@actions.3/@implementation/@transitions.6 //@resources.0/@pous.10/@actions.3/@implementation/@transitions.7" local_ID="17" stepLevel="2"/>
          <steps name="Move_Forwards__Pos3" incomingTransitions="//@resources.0/@pous.10/@actions.3/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.10/@actions.3/@implementation/@transitions.8" local_ID="23" stepLevel="3"/>
          <steps name="Stop_Motor_Pos3" incomingTransitions="//@resources.0/@pous.10/@actions.3/@implementation/@transitions.2 //@resources.0/@pous.10/@actions.3/@implementation/@transitions.4 //@resources.0/@pous.10/@actions.3/@implementation/@transitions.6 //@resources.0/@pous.10/@actions.3/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.10/@actions.3/@implementation/@transitions.9" local_ID="28" stepLevel="4"/>
          <steps name="Position3_Reached" incomingTransitions="//@resources.0/@pous.10/@actions.3/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.10/@actions.3/@implementation/@transitions.10" local_ID="31" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="32" qualifier="N" actionVariable="//@resources.0/@pous.10/@declaration/@internalVariables.4"/>
          </steps>
          <transitions condition="NOT ReachedPosition3 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.0" targetStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition1.DI_PositionReached OR AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.1" targetStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.2" targetStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.1" targetStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.3" targetStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.6" local_ID="14"/>
          <transitions condition="NOT(AtPosition1.DI_PositionReached AND AtPosition2.DI_PositionReached AND AtPosition4.DI_PositionReached)" sourceStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.1" targetStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.4" targetStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="NOT AtPosition3.DI_PositionReached AND Move_Backwards_Pos3.t>T#4s" sourceStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.4" targetStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.5" targetStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.6" targetStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.7" local_ID="30"/>
          <transitions condition="ReachedPosition3" isJump="true" sourceStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.7" targetStep="//@resources.0/@pous.10/@actions.3/@implementation/@steps.0" local_ID="35"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos4">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos4">
          <steps name="Init_ACT_MoveToPos4" outgoingTransitions="//@resources.0/@pous.10/@actions.4/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos4" incomingTransitions="//@resources.0/@pous.10/@actions.4/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.10/@actions.4/@implementation/@transitions.1 //@resources.0/@pous.10/@actions.4/@implementation/@transitions.3" local_ID="3" stepLevel="1"/>
          <steps name="Move_Forwards" incomingTransitions="//@resources.0/@pous.10/@actions.4/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.10/@actions.4/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Move_Backwards_Pos4" incomingTransitions="//@resources.0/@pous.10/@actions.4/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.10/@actions.4/@implementation/@transitions.4 //@resources.0/@pous.10/@actions.4/@implementation/@transitions.5" local_ID="12" stepLevel="2"/>
          <steps name="Move_Forwards_Pos4" incomingTransitions="//@resources.0/@pous.10/@actions.4/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.10/@actions.4/@implementation/@transitions.6" local_ID="18" stepLevel="3"/>
          <steps name="Stop_Motor_Pos4" incomingTransitions="//@resources.0/@pous.10/@actions.4/@implementation/@transitions.2 //@resources.0/@pous.10/@actions.4/@implementation/@transitions.4 //@resources.0/@pous.10/@actions.4/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.10/@actions.4/@implementation/@transitions.7" local_ID="23" stepLevel="4"/>
          <steps name="Position4_Reached" incomingTransitions="//@resources.0/@pous.10/@actions.4/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.10/@actions.4/@implementation/@transitions.8" local_ID="26" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" actionVariable="//@resources.0/@pous.10/@declaration/@internalVariables.5"/>
          </steps>
          <transitions condition="NOT ReachedPosition4 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.10/@actions.4/@implementation/@steps.0" targetStep="//@resources.0/@pous.10/@actions.4/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition1.DI_PositionReached OR AtPosition2.DI_PositionReached OR AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.10/@actions.4/@implementation/@steps.1" targetStep="//@resources.0/@pous.10/@actions.4/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.10/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.10/@actions.4/@implementation/@steps.5" local_ID="9"/>
          <transitions condition="NOT(AtPosition1.DI_PositionReached AND AtPosition2.DI_PositionReached AND AtPosition3.DI_PositionReached)" sourceStep="//@resources.0/@pous.10/@actions.4/@implementation/@steps.1" targetStep="//@resources.0/@pous.10/@actions.4/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.10/@actions.4/@implementation/@steps.3" targetStep="//@resources.0/@pous.10/@actions.4/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="NOT AtPosition4.DI_PositionReached AND Move_Backwards_Pos4.t>T#4s" sourceStep="//@resources.0/@pous.10/@actions.4/@implementation/@steps.3" targetStep="//@resources.0/@pous.10/@actions.4/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.10/@actions.4/@implementation/@steps.4" targetStep="//@resources.0/@pous.10/@actions.4/@implementation/@steps.5" local_ID="20"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.10/@actions.4/@implementation/@steps.5" targetStep="//@resources.0/@pous.10/@actions.4/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="ReachedPosition4" isJump="true" sourceStep="//@resources.0/@pous.10/@actions.4/@implementation/@steps.6" targetStep="//@resources.0/@pous.10/@actions.4/@implementation/@steps.0" local_ID="30"/>
        </implementation>
      </actions>
      <actions name="ACT_PickUpWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PickUpWP">
          <steps name="Init_ACT_PickUpWP" outgoingTransitions="//@resources.0/@pous.10/@actions.5/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="PicAlpha_Down" incomingTransitions="//@resources.0/@pous.10/@actions.5/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.10/@actions.5/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Turn_VacuumOn" incomingTransitions="//@resources.0/@pous.10/@actions.5/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.10/@actions.5/@implementation/@transitions.2 //@resources.0/@pous.10/@actions.5/@implementation/@transitions.5" local_ID="6" stepLevel="2"/>
          <steps name="PicAlpha_Up" incomingTransitions="//@resources.0/@pous.10/@actions.5/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.10/@actions.5/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="WP_PickedUp" incomingTransitions="//@resources.0/@pous.10/@actions.5/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.10/@actions.5/@implementation/@transitions.4" local_ID="13" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="N" actionVariable="//@resources.0/@pous.10/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="Error" incomingTransitions="//@resources.0/@pous.10/@actions.5/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.10/@actions.5/@implementation/@transitions.6" local_ID="20" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="21" qualifier="N" actionVariable="//@resources.0/@pous.10/@declaration/@inputVariables.7"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.10/@actions.5/@implementation/@steps.0" targetStep="//@resources.0/@pous.10/@actions.5/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.10/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.10/@actions.5/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Gripper.Intaken" sourceStep="//@resources.0/@pous.10/@actions.5/@implementation/@steps.2" targetStep="//@resources.0/@pous.10/@actions.5/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.10/@actions.5/@implementation/@steps.3" targetStep="//@resources.0/@pous.10/@actions.5/@implementation/@steps.4" local_ID="12"/>
          <transitions condition="WPPickedUp" isJump="true" sourceStep="//@resources.0/@pous.10/@actions.5/@implementation/@steps.4" targetStep="//@resources.0/@pous.10/@actions.5/@implementation/@steps.0" local_ID="17"/>
          <transitions condition="Turn_VacuumOn.t>T#2s AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.10/@actions.5/@implementation/@steps.2" targetStep="//@resources.0/@pous.10/@actions.5/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="SoftwareEmergency" isJump="true" sourceStep="//@resources.0/@pous.10/@actions.5/@implementation/@steps.5" targetStep="//@resources.0/@pous.10/@actions.5/@implementation/@steps.0" local_ID="24"/>
        </implementation>
      </actions>
      <actions name="ACT_PutDownWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PutDownWP">
          <steps name="Init_ACT_PutDownWP" outgoingTransitions="//@resources.0/@pous.10/@actions.6/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="PicAlpha_Down" incomingTransitions="//@resources.0/@pous.10/@actions.6/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.10/@actions.6/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Releasing_WP" incomingTransitions="//@resources.0/@pous.10/@actions.6/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.10/@actions.6/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="PicAlpha_Up" incomingTransitions="//@resources.0/@pous.10/@actions.6/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.10/@actions.6/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="WP_PutDown" incomingTransitions="//@resources.0/@pous.10/@actions.6/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.10/@actions.6/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.10/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.10/@actions.6/@implementation/@steps.0" targetStep="//@resources.0/@pous.10/@actions.6/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.10/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.10/@actions.6/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.10/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.10/@actions.6/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.10/@actions.6/@implementation/@steps.3" targetStep="//@resources.0/@pous.10/@actions.6/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="WPPutDown" isJump="true" sourceStep="//@resources.0/@pous.10/@actions.6/@implementation/@steps.4" targetStep="//@resources.0/@pous.10/@actions.6/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Init_ACT_AutomaticExecute" outgoingTransitions="//@resources.0/@pous.10/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.10/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.10/@actions.7/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Move_To_Pos1" incomingTransitions="//@resources.0/@pous.10/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.10/@actions.7/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="PickUpWP" incomingTransitions="//@resources.0/@pous.10/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.10/@actions.7/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Move_To_Pos3" incomingTransitions="//@resources.0/@pous.10/@actions.7/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.10/@actions.7/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="PutDownWP" incomingTransitions="//@resources.0/@pous.10/@actions.7/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.10/@actions.7/@implementation/@transitions.5" local_ID="15" stepLevel="5"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.10/@actions.7/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.10/@actions.7/@implementation/@transitions.6" local_ID="18" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="N" actionVariable="//@resources.0/@pous.10/@declaration/@outputVariables.2"/>
          </steps>
          <transitions condition="Check_AllowedToOperate AND NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.10/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.10/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToOperate AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.10/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.10/@actions.7/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="ReachedPosition1" sourceStep="//@resources.0/@pous.10/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.10/@actions.7/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.10/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.10/@actions.7/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="ReachedPosition3" sourceStep="//@resources.0/@pous.10/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.10/@actions.7/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.10/@actions.7/@implementation/@steps.5" targetStep="//@resources.0/@pous.10/@actions.7/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.10/@actions.7/@implementation/@steps.6" targetStep="//@resources.0/@pous.10/@actions.7/@implementation/@steps.0" local_ID="22"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Init_ACT_EmergencyStop" outgoingTransitions="//@resources.0/@pous.10/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.10/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.10/@actions.8/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopPicAlpha" incomingTransitions="//@resources.0/@pous.10/@actions.8/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.10/@actions.8/@implementation/@transitions.2 //@resources.0/@pous.10/@actions.8/@implementation/@transitions.3" local_ID="6" stepLevel="2"/>
          <steps name="Turn_Vacuum_Off" incomingTransitions="//@resources.0/@pous.10/@actions.8/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.10/@actions.8/@implementation/@transitions.4" local_ID="12" stepLevel="3"/>
          <steps name="Retract_LiftingCylinder" incomingTransitions="//@resources.0/@pous.10/@actions.8/@implementation/@transitions.2 //@resources.0/@pous.10/@actions.8/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.10/@actions.8/@implementation/@transitions.5" local_ID="16" stepLevel="4"/>
          <steps name="PicAlpha_EmergencyHandled" incomingTransitions="//@resources.0/@pous.10/@actions.8/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.10/@actions.8/@implementation/@transitions.6" local_ID="19" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="20" qualifier="N" actionVariable="//@resources.0/@pous.10/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.10/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.10/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.10/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.10/@actions.8/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped AND Gripper.Intaken" sourceStep="//@resources.0/@pous.10/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.10/@actions.8/@implementation/@steps.4" local_ID="9"/>
          <transitions condition="Motor.Stopped AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.10/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.10/@actions.8/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.10/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.10/@actions.8/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.10/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.10/@actions.8/@implementation/@steps.5" local_ID="18"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.10/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.10/@actions.8/@implementation/@steps.0" local_ID="23"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.10/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Move_Up" incomingTransitions="//@resources.0/@pous.10/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.10/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.10/@actions.9/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="WPAllreadyPickedUp" incomingTransitions="//@resources.0/@pous.10/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.10/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.10/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="Move_ToPos3" incomingTransitions="//@resources.0/@pous.10/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.10/@actions.9/@implementation/@transitions.4" local_ID="14" stepLevel="3"/>
          <steps name="Put_WP_On_Conveyor" incomingTransitions="//@resources.0/@pous.10/@actions.9/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.10/@actions.9/@implementation/@transitions.5" local_ID="17" stepLevel="4"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.10/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.10/@actions.9/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.10/@actions.9/@implementation/@transitions.6" local_ID="21" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="22" qualifier="N" actionVariable="//@resources.0/@pous.10/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.10/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.10/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Retracted AND NOT Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.10/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.10/@actions.9/@implementation/@steps.5" local_ID="6"/>
          <transitions condition="LiftingCylinder.Retracted AND Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.10/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.10/@actions.9/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.10/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.10/@actions.9/@implementation/@steps.3" local_ID="13"/>
          <transitions condition="ReachedPosition3" sourceStep="//@resources.0/@pous.10/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.10/@actions.9/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.10/@actions.9/@implementation/@steps.4" targetStep="//@resources.0/@pous.10/@actions.9/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.10/@actions.9/@implementation/@steps.5" targetStep="//@resources.0/@pous.10/@actions.9/@implementation/@steps.0" local_ID="25"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.6" callers="//@resources.0/@pous.18" identifier="RefillConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="PsBegining" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PsSwitch" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToInit" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToReceive" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToSend" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_InitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="RefillConveyor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="ConveyorSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="NumberOfWPs" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="WPSeperated" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteReceivingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsSending" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteSendingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="RefillConveyor" id="_Ouai4DsuEeugKuRu1b-FYw" text="Check_AllowedToInit := Main.Check_RefillConveyor_AllowedToInit;&#xA;Check_AllowedToReceive := Main.Check_RefillConveyor_AllowedToReceive;&#xA;Check_AllowedToSend := Main.Check_RefillConveyor_AllowedToSend;&#xA;Check_FollowConveyor_InitCompleted := Main.Check_RefillConveyor_FollowConveyor_InitCompleted;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := Main.Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_Ouai4jsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="62" structuredText="_Ouai4DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_Ouai4TsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToInit"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Ouai5DsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="68" structuredText="_Ouai4DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_Ouai4zsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToReceive"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Ouai5jsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="62" structuredText="_Ouai4DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToSend"/>
          <right xsi:type="STE:VariableExpression" id="_Ouai5TsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToSend"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Ouai6DsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="92" structuredText="_Ouai4DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_Ouai5zsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_InitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Ouai6jsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="116" structuredText="_Ouai4DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_Ouai6TsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Ouai7DsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="39" structuredText="_Ouai4DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_Ouai6zsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_Ouai8DsuEeugKuRu1b-FYw" statementType="IF" absStartLine="7" absEndLine="9" relStartLine="7" relEndLine="9" endColumnPos="5" structuredText="_Ouai4DsuEeugKuRu1b-FYw">
          <conditionalBlocks id="_Ouai7zsuEeugKuRu1b-FYw" statementType="CONDITIONAL_BLOCK" absStartLine="7" absEndLine="8" relStartLine="7" relEndLine="8" endColumnPos="17" structuredText="_Ouai4DsuEeugKuRu1b-FYw" else="false">
            <condition xsi:type="STE:VariableExpression" id="_Ouai7TsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_Ouai7jsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="17" structuredText="_Ouai4DsuEeugKuRu1b-FYw">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="CountUp_WPNumber">
        <implementation xsi:type="ST:StructuredText" label="CountUp_WPNumber" id="_OuW4gDsuEeugKuRu1b-FYw" text="NumberOfWPs := NumberOfWPs + 1;">
          <statements xsi:type="ST:Assignment" id="_OuW4gjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_OuW4gDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:BinaryExpression" id="_OuW4gTsuEeugKuRu1b-FYw" operator="ADD">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
              <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Reduce_WPNumber">
        <implementation xsi:type="ST:StructuredText" label="Reduce_WPNumber" id="_OuXfkDsuEeugKuRu1b-FYw" text="NumberOfWPs := NumberOfWPs - 1;">
          <statements xsi:type="ST:Assignment" id="_OuXfkjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_OuXfkDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:BinaryExpression" id="_OuXfkTsuEeugKuRu1b-FYw" operator="SUBTRACT">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
              <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToInit" id="_OuXfkzsuEeugKuRu1b-FYw" text="FollowConveyor_AllowedToInit := FALSE;">
          <statements xsi:type="ST:Assignment" id="_OuXflTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_OuXfkzsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_OuXflDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToOperate" id="_OuXfljsuEeugKuRu1b-FYw" text="FollowConveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_OuXfmDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="40" structuredText="_OuXfljsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_OuXflzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_OuYGoDsuEeugKuRu1b-FYw" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteReceivingCompleted := FALSE;&#xA;AutomaticExecuteSendingCompleted := FALSE;&#xA;NumberOfWPs := 0;&#xA;WPSeperated := FALSE;&#xA;Check_FollowConveyor_InitCompleted := FALSE;&#xA;Check_AllowedToReceive := FALSE;&#xA;Check_AllowedToSend := FALSE;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := FALSE;">
          <statements xsi:type="ST:Assignment" id="_OuYGojsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_OuYGoDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_OuYGoTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuYGpDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_OuYGoDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_OuYGozsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuYGpjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="40" structuredText="_OuYGoDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_OuYGpTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuYGqDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="43" structuredText="_OuYGoDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            <right xsi:type="STE:Literal" id="_OuYGpzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuYtsTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="41" structuredText="_OuYGoDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            <right xsi:type="STE:Literal" id="_OuYtsDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuYtszsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="16" structuredText="_OuYGoDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:Literal" id="_OuYtsjsuEeugKuRu1b-FYw" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuYttTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="20" structuredText="_OuYGoDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSeperated"/>
            <right xsi:type="STE:Literal" id="_OuYttDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuYttzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="43" structuredText="_OuYGoDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
            <right xsi:type="STE:Literal" id="_OuYttjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuYtuTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="31" structuredText="_OuYGoDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToReceive"/>
            <right xsi:type="STE:Literal" id="_OuYtuDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuYtuzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="28" structuredText="_OuYGoDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToSend"/>
            <right xsi:type="STE:Literal" id="_OuYtujsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuYtvTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="55" structuredText="_OuYGoDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_OuYtvDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToInit" id="_OuYtvjsuEeugKuRu1b-FYw" text="FollowConveyor_AllowedToInit := TRUE;">
          <statements xsi:type="ST:Assignment" id="_OuYtwDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="36" structuredText="_OuYtvjsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_OuYtvzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToOperate" id="_OuYtwTsuEeugKuRu1b-FYw" text="FollowConveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_OuYtwzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="39" structuredText="_OuYtwTsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_OuYtwjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_SeperateWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SeperateWP">
          <steps name="Init_ACT_SeperateWP" outgoingTransitions="//@resources.0/@pous.11/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.11/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.11/@actions.7/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.11/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.11/@actions.7/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="WP_Seperated" incomingTransitions="//@resources.0/@pous.11/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.11/@actions.7/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.11/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT WPSeperated AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.11/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.11/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.11/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.11/@actions.7/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.11/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.11/@actions.7/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPSeperated" isJump="true" sourceStep="//@resources.0/@pous.11/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.11/@actions.7/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Init_ACT_AutomaticExecute" outgoingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Choice_ReceivingSending" incomingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.1 //@resources.0/@pous.11/@actions.8/@implementation/@transitions.8" local_ID="3" stepLevel="1"/>
          <steps name="Interstep_Receiving" incomingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.2 //@resources.0/@pous.11/@actions.8/@implementation/@transitions.3" local_ID="7" stepLevel="2"/>
          <steps name="ConveyorForwards_Receiving" incomingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.4" local_ID="15" stepLevel="3"/>
          <steps name="StopConveyor_Receiving" incomingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.5" local_ID="18" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="19" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="CountUpWPNumber" incomingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.6" local_ID="23" stepLevel="5"/>
          <steps name="ReceivingCompleted" incomingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.7" local_ID="26" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" actionVariable="//@resources.0/@pous.11/@declaration/@outputVariables.3"/>
          </steps>
          <steps name="Interstep_Sending" incomingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.9 //@resources.0/@pous.11/@actions.8/@implementation/@transitions.12" local_ID="33" stepLevel="2"/>
          <steps name="Set_IsSending" incomingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.10" local_ID="37" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="38" qualifier="S" actionVariable="//@resources.0/@pous.11/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Check_ifStillAllowedToOperate" incomingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.11" local_ID="42" stepLevel="4"/>
          <steps name="ConveyorForwards_Sending" incomingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.13" local_ID="49" stepLevel="5"/>
          <steps name="SeperateWP" incomingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.14" local_ID="52" stepLevel="6"/>
          <steps name="StopConveyor_Sending" incomingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.15" local_ID="55" stepLevel="7">
            <actions xsi:type="SFC:ComplexAction" localId="56" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="SortWP" outgoingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.17" local_ID="61"/>
          <steps name="Receiving_again" incomingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.16" local_ID="62" stepLevel="8"/>
          <steps name="ReduceWPNumber" incomingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.18 //@resources.0/@pous.11/@actions.8/@implementation/@transitions.20" local_ID="69"/>
          <steps name="SendingCompleted" incomingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.11/@actions.8/@implementation/@transitions.19" local_ID="73">
            <actions xsi:type="SFC:SimpleAction" localId="74" qualifier="R" actionVariable="//@resources.0/@pous.11/@declaration/@outputVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="75" qualifier="N" actionVariable="//@resources.0/@pous.11/@declaration/@outputVariables.5"/>
          </steps>
          <transitions condition="NOT AutomaticExecuteReceivingCompleted AND NOT AutomaticExecuteSendingCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToReceive" sourceStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" sourceStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.3" local_ID="10"/>
          <transitions condition="NOT Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" isJump="true" sourceStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.0" local_ID="12"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="AutomaticExecuteReceivingCompleted" isJump="true" sourceStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.6" targetStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.0" local_ID="30"/>
          <transitions condition="Check_AllowedToSend AND NumberOfWPs=3" sourceStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.7" local_ID="32"/>
          <transitions condition="Check_AllowedToSend AND NumberOfWPs=3 AND Interstep_Sending.t>T#750ms" sourceStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.7" targetStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.8" local_ID="36"/>
          <transitions condition="IsSending" sourceStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.8" targetStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.9" local_ID="41"/>
          <transitions condition="Check_AllowedToSend" sourceStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.9" targetStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.10" local_ID="44"/>
          <transitions condition="(NOT Check_AllowedToSend OR NOT NumberOfWPs=3) AND Interstep_Sending.t>T#750ms" isJump="true" sourceStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.7" targetStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.0" local_ID="46"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.10" targetStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.11" local_ID="51"/>
          <transitions condition="WPSeperated" sourceStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.11" targetStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.12" local_ID="54"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.12" targetStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.14" local_ID="59"/>
          <transitions condition="Check_AllowedToReceive" isJump="true" sourceStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.14" targetStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.2" local_ID="64"/>
          <transitions condition="Check_FollowConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.13" targetStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.15" local_ID="68"/>
          <transitions condition="NumberOfWPs=0" sourceStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.15" targetStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.16" local_ID="72"/>
          <transitions condition="NOT IsSending AND AutomaticExecuteSendingCompleted" isJump="true" sourceStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.16" targetStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.0" local_ID="78"/>
          <transitions condition="NumberOfWPs>0" isJump="true" sourceStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.15" targetStep="//@resources.0/@pous.11/@actions.8/@implementation/@steps.10" local_ID="80"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Init_ACT_EmergencyStop" outgoingTransitions="//@resources.0/@pous.11/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.11/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.11/@actions.9/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.11/@actions.9/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.11/@actions.9/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.11/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.11/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="RefillConveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.11/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.11/@actions.9/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.11/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.11/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.11/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteReceivingCompleted" sourceStep="//@resources.0/@pous.11/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.11/@actions.9/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.11/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.11/@actions.9/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.11/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.11/@actions.9/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.11/@actions.9/@implementation/@steps.4" targetStep="//@resources.0/@pous.11/@actions.9/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.11/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" actionVariable="//@resources.0/@pous.11/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.11/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.11/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.11/@actions.10/@implementation/@transitions.2" local_ID="5" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.11/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.11/@actions.10/@implementation/@transitions.3" local_ID="13" stepLevel="2"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.11/@actions.10/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.11/@actions.10/@implementation/@transitions.4" local_ID="16" stepLevel="3"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.11/@actions.10/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.11/@actions.10/@implementation/@transitions.5" local_ID="19" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="20" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="Init_Completed" incomingTransitions="//@resources.0/@pous.11/@actions.10/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.11/@actions.10/@implementation/@transitions.6" local_ID="24" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="25" qualifier="S" actionVariable="//@resources.0/@pous.11/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.11/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.11/@actions.10/@implementation/@steps.1" local_ID="4"/>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.11/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.11/@actions.10/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="(NOT Check_AllowedToInit OR InitCompleted) AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.11/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.11/@actions.10/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.11/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.11/@actions.10/@implementation/@steps.3" local_ID="15"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.11/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.11/@actions.10/@implementation/@steps.4" local_ID="18"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.11/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.11/@actions.10/@implementation/@steps.5" local_ID="23"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.11/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.11/@actions.10/@implementation/@steps.0" local_ID="28"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.6" callers="//@resources.0/@pous.18" identifier="PicAlphaConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="PsSwitch" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PsEnd" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToInit" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToReceive" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToSend" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_InitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_PicAlpha_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="PicAlphaConveyor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="ConveyorSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="NumberOfWPs" scope="VAR" type="INT" typeName="INT">
          <location/>
        </internalVariables>
        <internalVariables name="WPSeperated" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="PicAlpha_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteReceivingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteSendingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="PicAlphaConveyor" id="_OugpgDsuEeugKuRu1b-FYw" text="Check_AllowedToInit := Main.Check_PicAlphaConveyor_AllowedToInit;&#xA;Check_AllowedToReceive := Main.Check_PicAlphaConveyor_AllowedToReceive;&#xA;Check_AllowedToSend := Main.Check_PicAlphaConveyor_AllowedToSend;&#xA;Check_FollowConveyor_InitCompleted := Main.Check_PicAlphaConveyor_FollowConveyor_InitCompleted;&#xA;Check_PicAlpha_AutomaticExecuteCompleted := Main.Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := Main.Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_OugpgjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="64" structuredText="_OugpgDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_OugpgTsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToInit"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OugphDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="70" structuredText="_OugpgDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_OugpgzsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToReceive"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OugphjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="64" structuredText="_OugpgDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToSend"/>
          <right xsi:type="STE:VariableExpression" id="_OugphTsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToSend"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OugpiDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="94" structuredText="_OugpgDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OugphzsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_InitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OugpijsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="106" structuredText="_OugpgDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OugpiTsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OugpjDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="118" structuredText="_OugpgDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OugpizsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OugpjjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="39" structuredText="_OugpgDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_OugpjTsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_OuhQkjsuEeugKuRu1b-FYw" statementType="IF" absStartLine="8" absEndLine="10" relStartLine="8" relEndLine="10" endColumnPos="5" structuredText="_OugpgDsuEeugKuRu1b-FYw">
          <conditionalBlocks id="_OuhQkTsuEeugKuRu1b-FYw" statementType="CONDITIONAL_BLOCK" absStartLine="8" absEndLine="9" relStartLine="8" relEndLine="9" endColumnPos="17" structuredText="_OugpgDsuEeugKuRu1b-FYw" else="false">
            <condition xsi:type="STE:VariableExpression" id="_OugpjzsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_OuhQkDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="17" structuredText="_OugpgDsuEeugKuRu1b-FYw">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reduce_WPNumber">
        <implementation xsi:type="ST:StructuredText" label="Reduce_WPNumber" id="_OubxADsuEeugKuRu1b-FYw" text="NumberOfWPs := NumberOfWPs - 1;">
          <statements xsi:type="ST:Assignment" id="_OubxAjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_OubxADsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:BinaryExpression" id="_OubxATsuEeugKuRu1b-FYw" operator="SUBTRACT">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
              <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToInit" id="_OucYEDsuEeugKuRu1b-FYw" text="FollowConveyor_AllowedToInit := FALSE;">
          <statements xsi:type="ST:Assignment" id="_OucYEjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_OucYEDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_OucYETsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToOperate" id="_Ouc_IDsuEeugKuRu1b-FYw" text="FollowConveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_Ouc_IjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="40" structuredText="_Ouc_IDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_Ouc_ITsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_Oue0UDsuEeugKuRu1b-FYw" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;PicAlpha_AllowedToOperate := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteReceivingCompleted := FALSE;&#xA;AutomaticExecuteSendingCompleted := FALSE;&#xA;&#xA;NumberOfWPs := 0;&#xA;WPSeperated := FALSE;">
          <statements xsi:type="ST:Assignment" id="_Oue0UjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_Oue0UDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_Oue0UTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Oue0VDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_Oue0UDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_Oue0UzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Oue0VjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="34" structuredText="_Oue0UDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_Oue0VTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Oue0WDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="40" structuredText="_Oue0UDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_Oue0VzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Oue0WjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="43" structuredText="_Oue0UDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            <right xsi:type="STE:Literal" id="_Oue0WTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Oue0XDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="41" structuredText="_Oue0UDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            <right xsi:type="STE:Literal" id="_Oue0WzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Oue0XjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="16" structuredText="_Oue0UDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:Literal" id="_Oue0XTsuEeugKuRu1b-FYw" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Oue0YDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="20" structuredText="_Oue0UDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSeperated"/>
            <right xsi:type="STE:Literal" id="_Oue0XzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Rest_PicAlpha_AllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Rest_PicAlpha_AllowedToOperate" id="_Oue0YTsuEeugKuRu1b-FYw" text="PicAlpha_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_Oue0YzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="34" structuredText="_Oue0YTsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_Oue0YjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToInit" id="_OufbYDsuEeugKuRu1b-FYw" text="FollowConveyor_AllowedToInit := TRUE;">
          <statements xsi:type="ST:Assignment" id="_OufbYjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="36" structuredText="_OufbYDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_OufbYTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToOperate" id="_OufbYzsuEeugKuRu1b-FYw" text="FollowConveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_OufbZTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="39" structuredText="_OufbYzsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_OufbZDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_NumberOfWPsTo3">
        <implementation xsi:type="ST:StructuredText" label="Set_NumberOfWPsTo3" id="_OufbZjsuEeugKuRu1b-FYw" text="NumberOfWPs := 3;">
          <statements xsi:type="ST:Assignment" id="_OufbaDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_OufbZjsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:Literal" id="_OufbZzsuEeugKuRu1b-FYw" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PicAlpha_AllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_PicAlpha_AllowedToOperate" id="_OufbaTsuEeugKuRu1b-FYw" text="PicAlpha_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_OufbazsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="33" structuredText="_OufbaTsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_OufbajsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_SeperateWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SeperateWP">
          <steps name="Init_ACT_SeperateWP" outgoingTransitions="//@resources.0/@pous.12/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.12/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.12/@actions.9/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.12/@actions.9/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.12/@actions.9/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="WP_Seperated" incomingTransitions="//@resources.0/@pous.12/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.12/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.12/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT WPSeperated AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.12/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.12/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.12/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.12/@actions.9/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.12/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.12/@actions.9/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPSeperated" isJump="true" sourceStep="//@resources.0/@pous.12/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.12/@actions.9/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Init_ACT_AutomaticExecute" outgoingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Choice_ReceivingSending" incomingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.12/@actions.10/@implementation/@transitions.7" local_ID="3" stepLevel="1"/>
          <steps name="Interstep_Receiving" incomingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.12/@actions.10/@implementation/@transitions.3" local_ID="7" stepLevel="2"/>
          <steps name="ConveyorForwards_Receiving" incomingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.4" local_ID="15" stepLevel="3"/>
          <steps name="StopConveyor_Receiving" incomingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.5" local_ID="18" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="19" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="ReceivingCompleted" incomingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.6" local_ID="23" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="24" qualifier="N" actionVariable="//@resources.0/@pous.12/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Interstep_Sending" incomingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.8 //@resources.0/@pous.12/@actions.10/@implementation/@transitions.9" local_ID="30" stepLevel="2"/>
          <steps name="ThreeWPsAvailable" incomingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.10" local_ID="38" stepLevel="3"/>
          <steps name="PicAlphaOperating" incomingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.11" local_ID="41" stepLevel="4"/>
          <steps name="ConveyorForwards_Sending" incomingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.12" local_ID="44" stepLevel="5"/>
          <steps name="SortWP_fromPicAlpha" incomingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.13" local_ID="47" stepLevel="6"/>
          <steps name="ReduceWPNumber" incomingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.14" local_ID="50" stepLevel="7"/>
          <steps name="ConveyorForwards_Sending_again" incomingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.15" local_ID="53" stepLevel="8"/>
          <steps name="SeperateWP" incomingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.16" local_ID="56" stepLevel="9"/>
          <steps name="StopConveyor_Sending" incomingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.16" outgoingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.17" local_ID="59" stepLevel="10">
            <actions xsi:type="SFC:ComplexAction" localId="60" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="SortWP" incomingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.18" local_ID="64" stepLevel="11"/>
          <steps name="ReduceWPNumber_again" incomingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.12/@actions.10/@implementation/@transitions.19 //@resources.0/@pous.12/@actions.10/@implementation/@transitions.20" local_ID="67" stepLevel="12"/>
          <transitions condition="NOT AutomaticExecuteReceivingCompleted AND NOT AutomaticExecuteSendingCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToReceive" sourceStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" sourceStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.3" local_ID="10"/>
          <transitions condition="NOT Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" isJump="true" sourceStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.0" local_ID="12"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="AutomaticExecuteReceivingCompleted" isJump="true" sourceStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.0" local_ID="27"/>
          <transitions condition="Check_AllowedToSend" sourceStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.6" local_ID="29"/>
          <transitions condition="Check_AllowedToSend AND Interstep_Sending.t>T#100ms" sourceStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.7" local_ID="33"/>
          <transitions condition="NOT Check_AllowedToSend AND Interstep_Sending.t>T#100ms" isJump="true" sourceStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.0" local_ID="35"/>
          <transitions condition="NumberOfWPs=3" sourceStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.8" local_ID="40"/>
          <transitions condition="Check_PicAlpha_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.9" local_ID="43"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.10" local_ID="46"/>
          <transitions condition="Check_FollowConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.10" targetStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.11" local_ID="49"/>
          <transitions condition="NumberOfWPs=2" sourceStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.12" local_ID="52"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.12" targetStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.13" local_ID="55"/>
          <transitions condition="WPSeperated" sourceStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.13" targetStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.14" local_ID="58"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.14" targetStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.15" local_ID="63"/>
          <transitions condition="Check_FollowConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.15" targetStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.16" local_ID="66"/>
          <transitions condition="NumberOfWPs&lt;=0" isJump="true" sourceStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.16" targetStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.0" local_ID="70"/>
          <transitions condition="NumberOfWPs>0" isJump="true" sourceStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.16" targetStep="//@resources.0/@pous.12/@actions.10/@implementation/@steps.12" local_ID="72"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Init_ACT_EmergencyStop" outgoingTransitions="//@resources.0/@pous.12/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.12/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.12/@actions.11/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.12/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.12/@actions.11/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.12/@actions.11/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.12/@actions.11/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="PicAlphaConveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.12/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.12/@actions.11/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.12/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.12/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.12/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteReceivingCompleted" sourceStep="//@resources.0/@pous.12/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.12/@actions.11/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.12/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.12/@actions.11/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.12/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.12/@actions.11/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.12/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.12/@actions.11/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.12/@actions.12/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" actionVariable="//@resources.0/@pous.12/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.12/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.12/@actions.12/@implementation/@transitions.1 //@resources.0/@pous.12/@actions.12/@implementation/@transitions.2" local_ID="5" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.12/@actions.12/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.12/@actions.12/@implementation/@transitions.3" local_ID="13" stepLevel="2"/>
          <steps name="Wait" incomingTransitions="//@resources.0/@pous.12/@actions.12/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.12/@actions.12/@implementation/@transitions.4" local_ID="16" stepLevel="3"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.12/@actions.12/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.12/@actions.12/@implementation/@transitions.5" local_ID="19" stepLevel="4"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.12/@actions.12/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.12/@actions.12/@implementation/@transitions.6" local_ID="22" stepLevel="5">
            <actions xsi:type="SFC:ComplexAction" localId="23" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="AllowFollowConveyor_ToInitialise" incomingTransitions="//@resources.0/@pous.12/@actions.12/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.12/@actions.12/@implementation/@transitions.7" local_ID="27" stepLevel="6"/>
          <steps name="Init_Completed" incomingTransitions="//@resources.0/@pous.12/@actions.12/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.12/@actions.12/@implementation/@transitions.8" local_ID="30" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="S" actionVariable="//@resources.0/@pous.12/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.12/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.12/@actions.12/@implementation/@steps.1" local_ID="4"/>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.12/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.12/@actions.12/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="(NOT Check_AllowedToInit OR InitCompleted) AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.12/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.12/@actions.12/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.12/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.12/@actions.12/@implementation/@steps.3" local_ID="15"/>
          <transitions condition="Wait.t>T#2s" sourceStep="//@resources.0/@pous.12/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.12/@actions.12/@implementation/@steps.4" local_ID="18"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.12/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.12/@actions.12/@implementation/@steps.5" local_ID="21"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.12/@actions.12/@implementation/@steps.5" targetStep="//@resources.0/@pous.12/@actions.12/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Check_FollowConveyor_InitCompleted" sourceStep="//@resources.0/@pous.12/@actions.12/@implementation/@steps.6" targetStep="//@resources.0/@pous.12/@actions.12/@implementation/@steps.7" local_ID="29"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.12/@actions.12/@implementation/@steps.7" targetStep="//@resources.0/@pous.12/@actions.12/@implementation/@steps.0" local_ID="34"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.18" identifier="SafetyDoor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanelExtended">
          <location/>
        </inputVariables>
        <comment identifier="SafetyDoor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
        </comment>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="SafetyDoor" id="_OuhQkzsuEeugKuRu1b-FYw" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;">
        <statements xsi:type="ST:FunctionCallStatement" id="_OuhQlDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_OuhQkzsuEeugKuRu1b-FYw">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuhQljsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_OuhQkzsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_OuhQlTsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuhQmDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="30" structuredText="_OuhQkzsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_OuhQlzsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuhQmjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="36" structuredText="_OuhQkzsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_OuhQmTsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuhQnDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_OuhQkzsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_OuhQmzsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
      </implementations>
    </pous>
    <pous callers="//@resources.0/@pous.18" identifier="LightGrid" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanelExtended">
          <location/>
        </inputVariables>
        <comment identifier="LightGrid">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
        </comment>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="LightGrid" id="_Ouh3oDsuEeugKuRu1b-FYw" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;">
        <statements xsi:type="ST:FunctionCallStatement" id="_Ouh3oTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_Ouh3oDsuEeugKuRu1b-FYw">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Ouh3ozsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_Ouh3oDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_Ouh3ojsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Ouh3pTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="30" structuredText="_Ouh3oDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_Ouh3pDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Ouh3pzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="36" structuredText="_Ouh3oDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_Ouh3pjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Ouh3qTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_Ouh3oDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_Ouh3qDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
      </implementations>
    </pous>
    <pous callees="//@resources.0/@pous.2 //@resources.0/@pous.6" callers="//@resources.0/@pous.18" identifier="SmallSortingConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="PsBeginning" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="IndSensor" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="OptSensor" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PsBevorSwitch" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToInit" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToOperate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_InitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="SmallSortingConveyor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="ConveyorSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="WPSorted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPTypeChecked" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="TargetChanged" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Conveyor" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_White" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Black" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Metallic" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsSorting" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="SmallSortingConveyor" id="_OuliADsuEeugKuRu1b-FYw" text="Check_AllowedToInit := Main.Check_SmallSortingConveyor_AllowedToInit;&#xA;Check_AllowedToOperate := Main.Check_SmallSortingConveyor_AllowedToOperate;&#xA;Check_FollowConveyor_InitCompleted := Main.Check_SmallSortingConveyor_FollowConveyor_InitCompleted;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := Main.Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_OuliAjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="68" structuredText="_OuliADsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_OuliATsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToInit"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuliBDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="74" structuredText="_OuliADsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_OuliAzsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuliBjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="98" structuredText="_OuliADsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OuliBTsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_InitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuliCDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="122" structuredText="_OuliADsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_OuliBzsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_OuliCjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="39" structuredText="_OuliADsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_OuliCTsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_OuliDjsuEeugKuRu1b-FYw" statementType="IF" absStartLine="6" absEndLine="8" relStartLine="6" relEndLine="8" endColumnPos="5" structuredText="_OuliADsuEeugKuRu1b-FYw">
          <conditionalBlocks id="_OuliDTsuEeugKuRu1b-FYw" statementType="CONDITIONAL_BLOCK" absStartLine="6" absEndLine="7" relStartLine="6" relEndLine="7" endColumnPos="17" structuredText="_OuliADsuEeugKuRu1b-FYw" else="false">
            <condition xsi:type="STE:VariableExpression" id="_OuliCzsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_OuliDDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="17" structuredText="_OuliADsuEeugKuRu1b-FYw">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reset_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToInit" id="_Ouh3qjsuEeugKuRu1b-FYw" text="FollowConveyor_AllowedToInit := FALSE;">
          <statements xsi:type="ST:Assignment" id="_Ouh3rDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_Ouh3qjsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_Ouh3qzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_OuiesDsuEeugKuRu1b-FYw" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;IsSorting:=FALSE;&#xA;&#xA;WPSorted:=FALSE;&#xA;WPTypeChecked:=FALSE;&#xA;TargetChanged:=FALSE;&#xA;WPType_White:=FALSE;&#xA;WPType_Black:=FALSE;&#xA;WPType_Metallic:=FALSE;&#xA;CurrentTarget_Conveyor:=FALSE;&#xA;CurrentTarget_Ramp:=FALSE;&#xA;Check_AllowedToOperate :=FALSE;">
          <statements xsi:type="ST:Assignment" id="_OuiesjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_OuiesDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_OuiesTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuietDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_OuiesDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_OuieszsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuietjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="40" structuredText="_OuiesDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_OuietTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuieuDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="34" structuredText="_OuiesDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_OuietzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuieujsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="16" structuredText="_OuiesDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            <right xsi:type="STE:Literal" id="_OuieuTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuievDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="15" structuredText="_OuiesDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSorted"/>
            <right xsi:type="STE:Literal" id="_OuieuzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuievjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="20" structuredText="_OuiesDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPTypeChecked"/>
            <right xsi:type="STE:Literal" id="_OuievTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuiewDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="20" structuredText="_OuiesDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TargetChanged"/>
            <right xsi:type="STE:Literal" id="_OuievzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuiewjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="19" structuredText="_OuiesDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_OuiewTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuiexDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="19" structuredText="_OuiesDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_OuiewzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuiexjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="22" structuredText="_OuiesDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_OuiexTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuieyDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="29" structuredText="_OuiesDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Conveyor"/>
            <right xsi:type="STE:Literal" id="_OuiexzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuieyjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" endColumnPos="25" structuredText="_OuiesDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp"/>
            <right xsi:type="STE:Literal" id="_OuieyTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuiezDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" endColumnPos="30" structuredText="_OuiesDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_OuieyzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToInit" id="_OujFwDsuEeugKuRu1b-FYw" text="FollowConveyor_AllowedToInit := TRUE;">
          <statements xsi:type="ST:Assignment" id="_OujFwjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="36" structuredText="_OujFwDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_OujFwTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityBlack">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityBlack" id="_OujFwzsuEeugKuRu1b-FYw" text="Priority_Black := 2;">
          <statements xsi:type="ST:Assignment" id="_OujFxTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_OujFwzsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Black"/>
            <right xsi:type="STE:Literal" id="_OujFxDsuEeugKuRu1b-FYw" dataType="DINT" expressionType="LITERAL" symbol="2"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityMetallic">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityMetallic" id="_OujFxjsuEeugKuRu1b-FYw" text="Priority_Metallic := 1;">
          <statements xsi:type="ST:Assignment" id="_OujFyDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_OujFxjsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Metallic"/>
            <right xsi:type="STE:Literal" id="_OujFxzsuEeugKuRu1b-FYw" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityWhite">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityWhite" id="_Oujs0DsuEeugKuRu1b-FYw" text="Priority_White := 1;">
          <statements xsi:type="ST:Assignment" id="_Oujs0jsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_Oujs0DsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_White"/>
            <right xsi:type="STE:Literal" id="_Oujs0TsuEeugKuRu1b-FYw" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ChangeTarget">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_ChangeTarget">
          <steps name="ACT_ChangeTarget_Init" outgoingTransitions="//@resources.0/@pous.15/@actions.6/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetTargets" incomingTransitions="//@resources.0/@pous.15/@actions.6/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.15/@actions.6/@implementation/@transitions.1 //@resources.0/@pous.15/@actions.6/@implementation/@transitions.5 //@resources.0/@pous.15/@actions.6/@implementation/@transitions.9" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.15/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.15/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="White" incomingTransitions="//@resources.0/@pous.15/@actions.6/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.15/@actions.6/@implementation/@transitions.2 //@resources.0/@pous.15/@actions.6/@implementation/@transitions.3" local_ID="11" stepLevel="2"/>
          <steps name="Conveyor" incomingTransitions="//@resources.0/@pous.15/@actions.6/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.15/@actions.6/@implementation/@transitions.4" local_ID="15" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="16" qualifier="S" actionVariable="//@resources.0/@pous.15/@declaration/@internalVariables.7"/>
          </steps>
          <steps name="Black" incomingTransitions="//@resources.0/@pous.15/@actions.6/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.15/@actions.6/@implementation/@transitions.6 //@resources.0/@pous.15/@actions.6/@implementation/@transitions.7" local_ID="26" stepLevel="2"/>
          <steps name="Ramp_End" incomingTransitions="//@resources.0/@pous.15/@actions.6/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.15/@actions.6/@implementation/@transitions.8" local_ID="30" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="S" actionVariable="//@resources.0/@pous.15/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Metallic" incomingTransitions="//@resources.0/@pous.15/@actions.6/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.15/@actions.6/@implementation/@transitions.10 //@resources.0/@pous.15/@actions.6/@implementation/@transitions.11" local_ID="43" stepLevel="2"/>
          <steps name="SetTargetChanged" incomingTransitions="//@resources.0/@pous.15/@actions.6/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.15/@actions.6/@implementation/@transitions.12" local_ID="53" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="54" qualifier="N" actionVariable="//@resources.0/@pous.15/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT TargetChanged AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.0" targetStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.2" local_ID="10"/>
          <transitions condition="Priority_White=1" sourceStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.3" local_ID="14"/>
          <transitions condition="Priority_White=2" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.3" targetStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.7" local_ID="23"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.4" local_ID="25"/>
          <transitions condition="Priority_Black=2" sourceStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.4" targetStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="Priority_Black=1" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.4" targetStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.3" local_ID="34"/>
          <transitions condition="CurrentTarget_Ramp" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.5" targetStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.7" local_ID="38"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.6" local_ID="42"/>
          <transitions condition="Priority_Metallic=1" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.6" targetStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.3" local_ID="46"/>
          <transitions condition="Priority_Metallic=2" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.6" targetStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.5" local_ID="49"/>
          <transitions condition="TargetChanged" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.7" targetStep="//@resources.0/@pous.15/@actions.6/@implementation/@steps.0" local_ID="57"/>
        </implementation>
      </actions>
      <actions name="ACT_CheckWPType">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_CheckWPType">
          <steps name="Conveyor_ACT_CheckWPType_Init" outgoingTransitions="//@resources.0/@pous.15/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Reset_WPType" incomingTransitions="//@resources.0/@pous.15/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.15/@actions.7/@implementation/@transitions.1 //@resources.0/@pous.15/@actions.7/@implementation/@transitions.6" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.15/@declaration/@internalVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.15/@declaration/@internalVariables.5"/>
            <actions xsi:type="SFC:SimpleAction" localId="6" qualifier="R" actionVariable="//@resources.0/@pous.15/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="Wait_a_little_bit" incomingTransitions="//@resources.0/@pous.15/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.15/@actions.7/@implementation/@transitions.2 //@resources.0/@pous.15/@actions.7/@implementation/@transitions.4" local_ID="11" stepLevel="2"/>
          <steps name="WP_Is_White" incomingTransitions="//@resources.0/@pous.15/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.15/@actions.7/@implementation/@transitions.3" local_ID="15" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="16" qualifier="S" actionVariable="//@resources.0/@pous.15/@declaration/@internalVariables.4"/>
          </steps>
          <steps name="WP_Is_Metallic" incomingTransitions="//@resources.0/@pous.15/@actions.7/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.15/@actions.7/@implementation/@transitions.5" local_ID="22" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="S" actionVariable="//@resources.0/@pous.15/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Is_Black" incomingTransitions="//@resources.0/@pous.15/@actions.7/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.15/@actions.7/@implementation/@transitions.7" local_ID="30" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="S" actionVariable="//@resources.0/@pous.15/@declaration/@internalVariables.5"/>
          </steps>
          <steps name="WP_Type_Checked" incomingTransitions="//@resources.0/@pous.15/@actions.7/@implementation/@transitions.3 //@resources.0/@pous.15/@actions.7/@implementation/@transitions.5 //@resources.0/@pous.15/@actions.7/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.15/@actions.7/@implementation/@transitions.8" local_ID="36" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="37" qualifier="N" actionVariable="//@resources.0/@pous.15/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT WPTypeChecked AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.15/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.15/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="OptSensor.DI_WPLight" sourceStep="//@resources.0/@pous.15/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.7/@implementation/@steps.2" local_ID="10"/>
          <transitions condition="Wait_a_little_bit.t>T#100ms AND NOT IndSensor.DI_WPMetallic" sourceStep="//@resources.0/@pous.15/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.15/@actions.7/@implementation/@steps.3" local_ID="14"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.15/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.15/@actions.7/@implementation/@steps.6" local_ID="19"/>
          <transitions condition="IndSensor.DI_WPMetallic" sourceStep="//@resources.0/@pous.15/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.15/@actions.7/@implementation/@steps.4" local_ID="21"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.15/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.15/@actions.7/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Reset_WPType.t>T#1s AND NOT IndSensor.DI_WPMetallic AND NOT OptSensor.DI_WPLight" sourceStep="//@resources.0/@pous.15/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.7/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.15/@actions.7/@implementation/@steps.5" targetStep="//@resources.0/@pous.15/@actions.7/@implementation/@steps.6" local_ID="34"/>
          <transitions condition="WPTypeChecked" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.7/@implementation/@steps.6" targetStep="//@resources.0/@pous.15/@actions.7/@implementation/@steps.0" local_ID="40"/>
        </implementation>
      </actions>
      <actions name="ACT_SortWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SortWP">
          <steps name="Init_ACT_SortWP" outgoingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Wait" incomingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Checking_WP_Type" incomingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Changing_Target" incomingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="Chose_Right_Destination" incomingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.5 //@resources.0/@pous.15/@actions.8/@implementation/@transitions.11" local_ID="15" stepLevel="5"/>
          <steps name="Switch_Extending" incomingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.6" local_ID="19" stepLevel="6"/>
          <steps name="Allow_FollowConveyorToOperate" incomingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.7" local_ID="22" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="S" actionVariable="//@resources.0/@pous.15/@declaration/@outputVariables.2"/>
          </steps>
          <steps name="Wait2sec" incomingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.8" local_ID="27" stepLevel="8"/>
          <steps name="Stop_Allowence" incomingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.9" local_ID="30" stepLevel="9">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="R" actionVariable="//@resources.0/@pous.15/@declaration/@outputVariables.2"/>
          </steps>
          <steps name="Switch_Retracting" incomingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.10" local_ID="35" stepLevel="10"/>
          <steps name="Transporting_To_Ramp" incomingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.12" local_ID="40" stepLevel="6"/>
          <steps name="TurnConveyorOff" incomingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.10 //@resources.0/@pous.15/@actions.8/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.13" local_ID="44" stepLevel="11"/>
          <steps name="WP_Is_Sorted" incomingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.15/@actions.8/@implementation/@transitions.14" local_ID="47" stepLevel="12">
            <actions xsi:type="SFC:SimpleAction" localId="48" qualifier="N" actionVariable="//@resources.0/@pous.15/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT WPSorted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Wait.t>T#900ms OR IndSensor.DI_WPMetallic OR OptSensor.DI_WPLight" sourceStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPTypeChecked" sourceStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="TargetChanged" sourceStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.6" local_ID="18"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.6" targetStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.7" local_ID="21"/>
          <transitions condition="FollowConveyor_AllowedToOperate" sourceStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.7" targetStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.8" local_ID="26"/>
          <transitions condition="Wait2sec.t>T#2s" sourceStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.8" targetStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.9" local_ID="29"/>
          <transitions condition="NOT FollowConveyor_AllowedToOperate" sourceStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.9" targetStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.10" local_ID="34"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.10" targetStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.12" local_ID="37"/>
          <transitions condition="CurrentTarget_Ramp" sourceStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.11" local_ID="39"/>
          <transitions condition="Transporting_To_Ramp.t>T#2s" sourceStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.11" targetStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.12" local_ID="42"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.12" targetStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.13" local_ID="46"/>
          <transitions condition="WPSorted" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.13" targetStep="//@resources.0/@pous.15/@actions.8/@implementation/@steps.0" local_ID="51"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="SmallSortingConveyor_ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.15/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.15/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.15/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.15/@actions.9/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Sort_WP" incomingTransitions="//@resources.0/@pous.15/@actions.9/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.15/@actions.9/@implementation/@transitions.3" local_ID="11" stepLevel="2"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.15/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.15/@actions.9/@implementation/@transitions.4" local_ID="14" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="15" qualifier="N" actionVariable="//@resources.0/@pous.15/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="Check_AllowedToOperate AND NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.15/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.15/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToOperate AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.15/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.9/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="NOT Check_AllowedToOperate AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.9/@implementation/@steps.0" local_ID="8"/>
          <transitions condition="WPSorted" sourceStep="//@resources.0/@pous.15/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.15/@actions.9/@implementation/@steps.3" local_ID="13"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.15/@actions.9/@implementation/@steps.0" local_ID="18"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Conveyor_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stop_Conveyor" incomingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Retract_Switch" incomingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Conveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.15/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" actionVariable="//@resources.0/@pous.15/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.15/@actions.11/@implementation/@transitions.2" local_ID="5" stepLevel="1"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.3" local_ID="13" stepLevel="2"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.4" local_ID="16" stepLevel="3"/>
          <steps name="Allow_FollowConveyorToInit" incomingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.5" local_ID="19" stepLevel="4"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.6" local_ID="22" stepLevel="5"/>
          <steps name="Stop_Conveyors" incomingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.7" local_ID="25" stepLevel="6"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.8" local_ID="28" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="29" qualifier="S" actionVariable="//@resources.0/@pous.15/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.1" local_ID="4"/>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="(NOT Check_AllowedToInit OR InitCompleted) AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.3" local_ID="15"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.4" local_ID="18"/>
          <transitions condition="Check_FollowConveyor_InitCompleted" sourceStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.5" local_ID="21"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.5" targetStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.6" local_ID="24"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.6" targetStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.7" local_ID="27"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.7" targetStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.0" local_ID="32"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.5 //@resources.0/@pous.4 //@resources.0/@pous.2" callers="//@resources.0/@pous.18" identifier="Stack" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Seperator" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanel">
          <location/>
        </inputVariables>
        <inputVariables name="WPAvailable" scope="VAR_INPUT" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </inputVariables>
        <inputVariables name="InductiveSensor" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="OpticalSensor" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="WeightModule" scope="VAR_INPUT" type="DERIVED" typeName="WeightModule">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPPickedUp" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Stack">
          <statements>//WPType</statements>
          <statements>//WPWeight</statements>
        </comment>
        <comment identifier="Stack">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="WPProvided" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Timer" scope="VAR" type="DERIVED" typeName="TON">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Stack" id="_Outd0DsuEeugKuRu1b-FYw" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;&#xA;Check_WPPickedUp := Main.Check_Stack_WPPickedUp;">
        <statements xsi:type="ST:FunctionCallStatement" id="_Outd0TsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_Outd0DsuEeugKuRu1b-FYw">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Outd0zsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_Outd0DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_Outd0jsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Outd1TsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="30" structuredText="_Outd0DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_Outd1DsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Outd1zsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="36" structuredText="_Outd0DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_Outd1jsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Outd2TsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_Outd0DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_Outd2DsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Outd2zsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="47" structuredText="_Outd0DsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPPickedUp"/>
          <right xsi:type="STE:VariableExpression" id="_Outd2jsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPPickedUp"/>
          </right>
        </statements>
      </implementations>
      <actions name="Reset_Timer">
        <implementation xsi:type="ST:StructuredText" label="Reset_Timer" id="_Oun-QDsuEeugKuRu1b-FYw" text="Timer(IN:=FALSE);">
          <statements xsi:type="ST:FunctionCallStatement" id="_OuolUTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_Oun-QDsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_OuolUDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_OupMYDsuEeugKuRu1b-FYw" text="InitCompleted := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;&#xA;WPType_White:=FALSE;&#xA;WPType_Black:=FALSE;&#xA;WPType_Metallic:=FALSE;&#xA;WPWeight_Light:=FALSE;&#xA;WPWeight_Medium:=FALSE;&#xA;WPWeight_Heavy:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_OupMYjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_OupMYDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_OupMYTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OupMZDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_OupMYDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_OupMYzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OupMZjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="19" structuredText="_OupMYDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_OupMZTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OupMaDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="19" structuredText="_OupMYDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_OupMZzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OupMajsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="22" structuredText="_OupMYDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_OupMaTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OupMbDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="21" structuredText="_OupMYDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:Literal" id="_OupMazsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OupMbjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="22" structuredText="_OupMYDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:Literal" id="_OupMbTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OupMcDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="21" structuredText="_OupMYDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:Literal" id="_OupMbzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer250ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer250ms" id="_OuqagDsuEeugKuRu1b-FYw" text="Timer(IN:=TRUE, PT:=T#250MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_OurBkjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_OuqagDsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_OurBkDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_OurBkTsuEeugKuRu1b-FYw" dataType="TIME" expressionType="LITERAL" symbol="T#250MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPParameters_AND_WPProvided">
        <implementation xsi:type="ST:StructuredText" label="Set_WPParameters_AND_WPProvided" id="_OusPsDsuEeugKuRu1b-FYw" text="//WPType&#xA;IF(NOT InductiveSensor.DI_WPMetallic AND NOT OpticalSensor.DI_WPLight)THEN&#xA;&#x9;WPType_Black:=TRUE;&#xA;&#x9;WPType_White:=FALSE;&#xA;&#x9;WPType_Metallic:=FALSE;&#xA;ELSIF(NOT InductiveSensor.DI_WPMetallic AND OpticalSensor.DI_WPLight)THEN&#xA;&#x9;WPType_Black:=FALSE;&#xA;&#x9;WPType_White:=TRUE;&#xA;&#x9;WPType_Metallic:=FALSE;&#xA;ELSIF(InductiveSensor.DI_WPMetallic)THEN&#xA;&#x9;WPType_Black:=FALSE;&#xA;&#x9;WPType_White:=FALSE;&#xA;&#x9;WPType_Metallic:=TRUE;&#xA;END_IF&#xA;//WPWeight&#xA;IF(WeightModule.AI_WPWeight&lt;12000)THEN&#xA;&#x9;WPWeight_Light:=TRUE;&#xA;&#x9;WPWeight_Medium:=FALSE;&#xA;&#x9;WPWeight_Heavy:=FALSE;&#xA;ELSIF(12000&lt;=WeightModule.AI_WPWeight AND WeightModule.AI_WPWeight&lt;24000)THEN&#xA;&#x9;WPWeight_Light:=FALSE;&#xA;&#x9;WPWeight_Medium:=TRUE;&#xA;&#x9;WPWeight_Heavy:=FALSE;&#xA;ELSIF(2400&lt;=WeightModule.AI_WPWeight)THEN&#xA;&#x9;WPWeight_Light:=FALSE;&#xA;&#x9;WPWeight_Medium:=FALSE;&#xA;&#x9;WPWeight_Heavy:=TRUE;&#x9;&#xA;END_IF&#xA;&#xA;WPProvided:=TRUE;">
          <statements xsi:type="ST:If" id="_OusPzDsuEeugKuRu1b-FYw" statementType="IF" absStartLine="2" absEndLine="14" relStartLine="2" relEndLine="14" endColumnPos="5" structuredText="_OusPsDsuEeugKuRu1b-FYw">
            <conditionalBlocks id="_OusPuTsuEeugKuRu1b-FYw" statementType="CONDITIONAL_BLOCK" absStartLine="2" absEndLine="5" relStartLine="2" relEndLine="5" endColumnPos="23" structuredText="_OusPsDsuEeugKuRu1b-FYw" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_OusPsjsuEeugKuRu1b-FYw" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_OusPsTsuEeugKuRu1b-FYw" operator="AND">
                  <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                    <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="InductiveSensor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPMetallic"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                    <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="OpticalSensor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPLight"/>
                    </subexpression>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_OusPtDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="19" structuredText="_OusPsDsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
                <right xsi:type="STE:Literal" id="_OusPszsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_OusPtjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="20" structuredText="_OusPsDsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
                <right xsi:type="STE:Literal" id="_OusPtTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_OusPuDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="23" structuredText="_OusPsDsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
                <right xsi:type="STE:Literal" id="_OusPtzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_OusPwjsuEeugKuRu1b-FYw" statementType="CONDITIONAL_BLOCK" absStartLine="6" absEndLine="9" relStartLine="6" relEndLine="9" endColumnPos="23" structuredText="_OusPsDsuEeugKuRu1b-FYw" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_OusPuzsuEeugKuRu1b-FYw" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_OusPujsuEeugKuRu1b-FYw" operator="AND">
                  <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                    <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="InductiveSensor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPMetallic"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="OpticalSensor">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPLight"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_OusPvTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="20" structuredText="_OusPsDsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
                <right xsi:type="STE:Literal" id="_OusPvDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_OusPvzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="19" structuredText="_OusPsDsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
                <right xsi:type="STE:Literal" id="_OusPvjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_OusPwTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="23" structuredText="_OusPsDsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
                <right xsi:type="STE:Literal" id="_OusPwDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_OusPyzsuEeugKuRu1b-FYw" statementType="CONDITIONAL_BLOCK" absStartLine="10" absEndLine="13" relStartLine="10" relEndLine="13" endColumnPos="22" structuredText="_OusPsDsuEeugKuRu1b-FYw" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_OusPxDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:VariableExpression" id="_OusPwzsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="InductiveSensor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPMetallic"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_OusPxjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="20" structuredText="_OusPsDsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
                <right xsi:type="STE:Literal" id="_OusPxTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_OusPyDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="20" structuredText="_OusPsDsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
                <right xsi:type="STE:Literal" id="_OusPxzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_OusPyjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="22" structuredText="_OusPsDsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
                <right xsi:type="STE:Literal" id="_OusPyTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:If" id="_Ous22zsuEeugKuRu1b-FYw" statementType="IF" absStartLine="16" absEndLine="28" relStartLine="16" relEndLine="28" endColumnPos="5" structuredText="_OusPsDsuEeugKuRu1b-FYw">
            <conditionalBlocks id="_Ous2yDsuEeugKuRu1b-FYw" statementType="CONDITIONAL_BLOCK" absStartLine="16" absEndLine="19" relStartLine="16" relEndLine="19" endColumnPos="22" structuredText="_OusPsDsuEeugKuRu1b-FYw" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_Ous2wTsuEeugKuRu1b-FYw" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_Ous2wDsuEeugKuRu1b-FYw" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="12000"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_Ous2wzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="21" structuredText="_OusPsDsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
                <right xsi:type="STE:Literal" id="_Ous2wjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_Ous2xTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="23" structuredText="_OusPsDsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
                <right xsi:type="STE:Literal" id="_Ous2xDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_Ous2xzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="22" structuredText="_OusPsDsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
                <right xsi:type="STE:Literal" id="_Ous2xjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_Ous20TsuEeugKuRu1b-FYw" statementType="CONDITIONAL_BLOCK" absStartLine="20" absEndLine="23" relStartLine="20" relEndLine="23" endColumnPos="22" structuredText="_OusPsDsuEeugKuRu1b-FYw" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_Ous2yjsuEeugKuRu1b-FYw" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_Ous2yTsuEeugKuRu1b-FYw" operator="AND">
                  <left xsi:type="STE:BinaryExpression" operator="LESSER_EQUAL">
                    <left xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="12000"/>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                    </right>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                    </left>
                    <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="24000"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_Ous2zDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="22" structuredText="_OusPsDsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
                <right xsi:type="STE:Literal" id="_Ous2yzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_Ous2zjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="22" structuredText="_OusPsDsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
                <right xsi:type="STE:Literal" id="_Ous2zTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_Ous20DsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="22" structuredText="_OusPsDsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
                <right xsi:type="STE:Literal" id="_Ous2zzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_Ous22jsuEeugKuRu1b-FYw" statementType="CONDITIONAL_BLOCK" absStartLine="24" absEndLine="27" relStartLine="24" relEndLine="27" endColumnPos="21" structuredText="_OusPsDsuEeugKuRu1b-FYw" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_Ous20zsuEeugKuRu1b-FYw" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_Ous20jsuEeugKuRu1b-FYw" operator="LESSER_EQUAL">
                  <left xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2400"/>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_Ous21TsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="22" structuredText="_OusPsDsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
                <right xsi:type="STE:Literal" id="_Ous21DsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_Ous21zsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="23" structuredText="_OusPsDsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
                <right xsi:type="STE:Literal" id="_Ous21jsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_Ous22TsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="21" structuredText="_OusPsDsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
                <right xsi:type="STE:Literal" id="_Ous22DsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ous23TsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" endColumnPos="16" structuredText="_OusPsDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPProvided"/>
            <right xsi:type="STE:Literal" id="_Ous23DsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ProvideWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_ProvideWP">
          <steps name="ACT_ProvideWP_Init" outgoingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Slider_Extend" incomingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="WP_Ready" incomingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.2 //@resources.0/@pous.16/@actions.4/@implementation/@transitions.5 //@resources.0/@pous.16/@actions.4/@implementation/@transitions.7" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="R" actionVariable="//@resources.0/@pous.16/@declaration/@internalVariables.2"/>
            <actions xsi:type="SFC:SimpleAction" localId="8" qualifier="R" actionVariable="//@resources.0/@pous.16/@declaration/@internalVariables.1"/>
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="R" actionVariable="//@resources.0/@pous.16/@declaration/@internalVariables.3"/>
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="R" actionVariable="//@resources.0/@pous.16/@declaration/@internalVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="11" qualifier="R" actionVariable="//@resources.0/@pous.16/@declaration/@internalVariables.5"/>
            <actions xsi:type="SFC:SimpleAction" localId="12" qualifier="R" actionVariable="//@resources.0/@pous.16/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="Black" incomingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.3" local_ID="17" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="18" qualifier="S" actionVariable="//@resources.0/@pous.16/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="Light" incomingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.4" local_ID="22" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="S" actionVariable="//@resources.0/@pous.16/@declaration/@internalVariables.4"/>
          </steps>
          <steps name="White" incomingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.6" local_ID="29" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="30" qualifier="S" actionVariable="//@resources.0/@pous.16/@declaration/@internalVariables.1"/>
          </steps>
          <steps name="Metallic" incomingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.8" local_ID="37" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="38" qualifier="S" actionVariable="//@resources.0/@pous.16/@declaration/@internalVariables.3"/>
          </steps>
          <steps name="Weight_Choice" incomingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.9 //@resources.0/@pous.16/@actions.4/@implementation/@transitions.10 //@resources.0/@pous.16/@actions.4/@implementation/@transitions.12" local_ID="42" stepLevel="4"/>
          <steps name="Medium" incomingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.11" local_ID="49" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="50" qualifier="S" actionVariable="//@resources.0/@pous.16/@declaration/@internalVariables.5"/>
          </steps>
          <steps name="Heavy" incomingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.13" local_ID="56" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="57" qualifier="S" actionVariable="//@resources.0/@pous.16/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Provided" incomingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.4 //@resources.0/@pous.16/@actions.4/@implementation/@transitions.11 //@resources.0/@pous.16/@actions.4/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.14" local_ID="63" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="64" qualifier="S" actionVariable="//@resources.0/@pous.16/@declaration/@internalVariables.0"/>
          </steps>
          <transitions condition="NOT WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.0" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Seperator.Extended AND WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.1" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="NOT InductiveSensor.DI_WPMetallic AND NOT OpticalSensor.DI_WPLight" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.3" local_ID="16"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.3" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.4" local_ID="21"/>
          <transitions condition="WPWeight_Light" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.4" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.10" local_ID="26"/>
          <transitions condition="NOT InductiveSensor.DI_WPMetallic AND OpticalSensor.DI_WPLight" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.5" local_ID="28"/>
          <transitions condition="WPType_White" isJump="true" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.5" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.4" local_ID="33"/>
          <transitions condition="InductiveSensor.DI_WPMetallic" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.6" local_ID="36"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.6" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.7" local_ID="41"/>
          <transitions condition="WeightModule.AI_WPWeight&lt;12000" isJump="true" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.7" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.4" local_ID="45"/>
          <transitions condition="12000&lt;=WeightModule.AI_WPWeight AND WeightModule.AI_WPWeight&lt;24000" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.7" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.8" local_ID="48"/>
          <transitions condition="WPWeight_Medium" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.8" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.10" local_ID="53"/>
          <transitions condition="2400&lt;=WeightModule.AI_WPWeight" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.7" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.9" local_ID="55"/>
          <transitions condition="WPWeight_Heavy" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.9" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.10" local_ID="60"/>
          <transitions condition="WPProvided" isJump="true" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.10" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.0" local_ID="67"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Short_Delay" incomingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.1 //@resources.0/@pous.16/@actions.5/@implementation/@transitions.3" local_ID="3" stepLevel="1"/>
          <steps name="Provide_WP" incomingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Dont_Provide_WP" incomingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.4" local_ID="12" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.16/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="Waiting_For_Crane_To_Pick_Up" incomingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.2 //@resources.0/@pous.16/@actions.5/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.5" local_ID="18" stepLevel="3"/>
          <steps name="Stack_Retracing" incomingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.6" local_ID="21" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="22" qualifier="R" actionVariable="//@resources.0/@pous.16/@declaration/@internalVariables.0"/>
          </steps>
          <transitions condition="NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.0" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Timer.Q AND NOT WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="WPProvided" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.2" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.4" local_ID="9"/>
          <transitions condition="Timer.Q AND WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="WPProvided" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.3" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="NOT WPAvailable.DI_SwitchTrue AND Check_WPPickedUp" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.4" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.5" local_ID="20"/>
          <transitions condition="Seperator.Retracted" isJump="true" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.5" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.0" local_ID="25"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Magazine_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.16/@actions.6/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.16/@actions.6/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.16/@actions.6/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stack_Retracting" incomingTransitions="//@resources.0/@pous.16/@actions.6/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.16/@actions.6/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Stack_EmergencyHandled" incomingTransitions="//@resources.0/@pous.16/@actions.6/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.16/@actions.6/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.16/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.16/@actions.6/@implementation/@steps.0" targetStep="//@resources.0/@pous.16/@actions.6/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.16/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.16/@actions.6/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Seperator.Retracted" sourceStep="//@resources.0/@pous.16/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.16/@actions.6/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.16/@actions.6/@implementation/@steps.3" targetStep="//@resources.0/@pous.16/@actions.6/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Stack_ACT_Init" outgoingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.0 //@resources.0/@pous.16/@actions.7/@implementation/@transitions.1" local_ID="0" initialStep="true"/>
          <steps name="Set_WP_Parameters" incomingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.2" local_ID="6" stepLevel="1"/>
          <steps name="Retract_Cylinder_Init" incomingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.0 //@resources.0/@pous.16/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.3" local_ID="10" stepLevel="2"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.4" local_ID="13" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="N" actionVariable="//@resources.0/@pous.16/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.2" local_ID="3"/>
          <transitions condition="NOT InitCompleted AND WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.1" local_ID="5"/>
          <transitions condition="WPProvided" sourceStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Seperator.Retracted" sourceStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.0" local_ID="17"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.4 //@resources.0/@pous.5 //@resources.0/@pous.1" callers="//@resources.0/@pous.18" identifier="Stamp" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanel">
          <location/>
        </inputVariables>
        <inputVariables name="PressureSensor" scope="VAR_INPUT" type="DERIVED" typeName="PressureSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PropValve" scope="VAR_INPUT" type="DERIVED" typeName="ProportionalValve">
          <location/>
        </inputVariables>
        <inputVariables name="WPAvailable" scope="VAR_INPUT" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </inputVariables>
        <inputVariables name="StampingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="SlidingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="BistableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="SoftwareEmergency" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Allowed_To_Operate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPWeight_Light" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPWeight_Medium" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPWeight_Heavy" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Stamp">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="WPStamped" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Timer" scope="VAR" type="DERIVED" typeName="TON">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsStamping" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Stamp" id="_Ouy9YDsuEeugKuRu1b-FYw" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;&#xA;Check_Allowed_To_Operate := Main.Check_Stamp_AllowedToOperate;&#xA;Check_WPWeight_Light:=Main.Crane_WPWeight_Light;&#xA;Check_WPWeight_Medium:=Main.Crane_WPWeight_Medium;&#xA;Check_WPWeight_Heavy:=Main.Crane_WPWeight_Heavy;">
        <statements xsi:type="ST:FunctionCallStatement" id="_Ouy9YTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_Ouy9YDsuEeugKuRu1b-FYw">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Ouy9YzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_Ouy9YDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_Ouy9YjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Ouy9ZTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="30" structuredText="_Ouy9YDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_Ouy9ZDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Ouy9ZzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="36" structuredText="_Ouy9YDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_Ouy9ZjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Ouy9aTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_Ouy9YDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_Ouy9aDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Ouy9azsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="61" structuredText="_Ouy9YDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Allowed_To_Operate"/>
          <right xsi:type="STE:VariableExpression" id="_Ouy9ajsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Ouy9bTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="47" structuredText="_Ouy9YDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_Ouy9bDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Light"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Ouy9bzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="49" structuredText="_Ouy9YDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_Ouy9bjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Medium"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_Ouy9cTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="47" structuredText="_Ouy9YDsuEeugKuRu1b-FYw">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_Ouy9cDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Heavy"/>
          </right>
        </statements>
      </implementations>
      <actions name="ExtendStampingCylinder_AND_Timer1500ms">
        <implementation xsi:type="ST:StructuredText" label="ExtendStampingCylinder_AND_Timer1500ms" id="_Ouur8DsuEeugKuRu1b-FYw" text="StampingCylinder.ACT_Extend();&#xA;Timer(IN:=TRUE, PT:=T#1500MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_Ouur8TsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_Ouur8DsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StampingCylinder"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Extend"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ouur9DsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_Ouur8DsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ouur8jsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ouur8zsuEeugKuRu1b-FYw" dataType="TIME" expressionType="LITERAL" symbol="T#1500MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Pressure">
        <implementation xsi:type="ST:StructuredText" label="Reset_Pressure" id="_OuvTADsuEeugKuRu1b-FYw" text="PropValve.AO_SetPressure:=0;">
          <statements xsi:type="ST:Assignment" id="_OuvTAjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="27" structuredText="_OuvTADsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_OuvTATsuEeugKuRu1b-FYw" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Timer">
        <implementation xsi:type="ST:StructuredText" label="Reset_Timer" id="_OuvTAzsuEeugKuRu1b-FYw" text="Timer(IN:=FALSE);">
          <statements xsi:type="ST:FunctionCallStatement" id="_OuvTBTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_OuvTAzsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_OuvTBDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_OuwhIDsuEeugKuRu1b-FYw" text="InitCompleted := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;&#xA;propValve.AO_SetPressure:=0;&#xA;IsStamping:=FALSE;&#xA;WPStamped:=FALSE;&#xA;WPType_Black := FALSE;&#xA;WPType_White := FALSE;&#xA;WPType_Metallic := FALSE;&#xA;WPWeight_Light := FALSE;&#xA;WPWeight_Medium := FALSE;&#xA;WPWeight_Heavy := FALSE;">
          <statements xsi:type="ST:Assignment" id="_OuwhIjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_OuwhIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_OuwhITsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuwhJDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_OuwhIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_OuwhIzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuwhJjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="27" structuredText="_OuwhIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="propValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_OuwhJTsuEeugKuRu1b-FYw" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuwhKDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="17" structuredText="_OuwhIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="IsStamping"/>
            <right xsi:type="STE:Literal" id="_OuwhJzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuwhKjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="16" structuredText="_OuwhIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPStamped"/>
            <right xsi:type="STE:Literal" id="_OuwhKTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuwhLDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="21" structuredText="_OuwhIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_OuwhKzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuwhLjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="21" structuredText="_OuwhIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_OuwhLTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuwhMDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="24" structuredText="_OuwhIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_OuwhLzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuwhMjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="23" structuredText="_OuwhIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:Literal" id="_OuwhMTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuwhNDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="24" structuredText="_OuwhIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:Literal" id="_OuwhMzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuwhNjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="23" structuredText="_OuwhIDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:Literal" id="_OuwhNTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_HeavyPressure">
        <implementation xsi:type="ST:StructuredText" label="Set_HeavyPressure" id="_OuwhNzsuEeugKuRu1b-FYw" text="PropValve.AO_SetPressure:=7000;">
          <statements xsi:type="ST:Assignment" id="_OuwhOTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_OuwhNzsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_OuwhODsuEeugKuRu1b-FYw" dataType="DINT" expressionType="LITERAL" symbol="7000"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_LightPressure">
        <implementation xsi:type="ST:StructuredText" label="Set_LightPressure" id="_OuxIMDsuEeugKuRu1b-FYw" text="PropValve.AO_SetPressure:=4000;">
          <statements xsi:type="ST:Assignment" id="_OuxIMjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_OuxIMDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_OuxIMTsuEeugKuRu1b-FYw" dataType="DINT" expressionType="LITERAL" symbol="4000"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_MediumPressure">
        <implementation xsi:type="ST:StructuredText" label="Set_MediumPressure" id="_OuxIMzsuEeugKuRu1b-FYw" text="PropValve.AO_SetPressure:=5500;">
          <statements xsi:type="ST:Assignment" id="_OuxINTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_OuxIMzsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_OuxINDsuEeugKuRu1b-FYw" dataType="DINT" expressionType="LITERAL" symbol="5500"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer1000ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer1000ms" id="_OuxINjsuEeugKuRu1b-FYw" text="Timer(IN:=TRUE, PT:=T#1000MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_OuxvQjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_OuxINjsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_OuxvQDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_OuxvQTsuEeugKuRu1b-FYw" dataType="TIME" expressionType="LITERAL" symbol="T#1000MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer500ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer500ms" id="_OuxvQzsuEeugKuRu1b-FYw" text="Timer(IN:=TRUE, PT:=T#500ms);">
          <statements xsi:type="ST:FunctionCallStatement" id="_OuxvRjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_OuxvQzsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_OuxvRDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_OuxvRTsuEeugKuRu1b-FYw" dataType="TIME" expressionType="LITERAL" symbol="T#500ms"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPWeight">
        <implementation xsi:type="ST:StructuredText" label="Set_WPWeight" id="_OuxvRzsuEeugKuRu1b-FYw" text="WPWeight_Light := Check_WPWeight_Light;&#xA;WPWeight_Medium := Check_WPWeight_Medium;&#xA;WPWeight_Heavy := Check_WPWeight_Heavy;">
          <statements xsi:type="ST:Assignment" id="_OuxvSTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="38" structuredText="_OuxvRzsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:VariableExpression" id="_OuxvSDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Light"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuxvSzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="40" structuredText="_OuxvRzsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:VariableExpression" id="_OuxvSjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Medium"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_OuxvTTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="38" structuredText="_OuxvRzsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:VariableExpression" id="_OuxvTDsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Heavy"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_Stamp">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Stamp">
          <steps name="Stamp_ACT_Stamp" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Get_WPWeight_From_Crane" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Slider_Retract" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.17/@actions.10/@implementation/@transitions.4 //@resources.0/@pous.17/@actions.10/@implementation/@transitions.6" local_ID="6" stepLevel="2"/>
          <steps name="SetLightPressure" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="SetMediumPressure" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.5" local_ID="15" stepLevel="3"/>
          <steps name="SetHeavyPressure" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.7" local_ID="20" stepLevel="3"/>
          <steps name="Extend_StampingCylinder" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.3 //@resources.0/@pous.17/@actions.10/@implementation/@transitions.5 //@resources.0/@pous.17/@actions.10/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.8 //@resources.0/@pous.17/@actions.10/@implementation/@transitions.15" local_ID="24" stepLevel="4"/>
          <steps name="CheckCorrectPressure" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.9 //@resources.0/@pous.17/@actions.10/@implementation/@transitions.11 //@resources.0/@pous.17/@actions.10/@implementation/@transitions.13" local_ID="28" stepLevel="5"/>
          <steps name="HeavyPressureOk" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.10" local_ID="32" stepLevel="6"/>
          <steps name="MediumPressureOk" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.12" local_ID="37" stepLevel="6"/>
          <steps name="LightPressureOk" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.14" local_ID="42" stepLevel="6"/>
          <steps name="Error" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.16" local_ID="48" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="49" qualifier="N" actionVariable="//@resources.0/@pous.17/@declaration/@inputVariables.6"/>
          </steps>
          <steps name="Wait" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.10 //@resources.0/@pous.17/@actions.10/@implementation/@transitions.12 //@resources.0/@pous.17/@actions.10/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.17" local_ID="55" stepLevel="7"/>
          <steps name="ResetPressure" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.18" local_ID="58" stepLevel="8"/>
          <steps name="Move_Stamp_Up" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.19" local_ID="61" stepLevel="9"/>
          <steps name="Slider_Extend" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.20" local_ID="64" stepLevel="10"/>
          <steps name="WP_Stamped" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.20" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.21" local_ID="67" stepLevel="11">
            <actions xsi:type="SFC:SimpleAction" localId="68" qualifier="S" actionVariable="//@resources.0/@pous.17/@declaration/@internalVariables.0"/>
            <actions xsi:type="SFC:SimpleAction" localId="69" qualifier="R" actionVariable="//@resources.0/@pous.17/@declaration/@outputVariables.7"/>
          </steps>
          <transitions condition="IsStamping AND NOT WPStamped AND WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPWeight_Light=Check_WPWeight_Light AND WPWeight_Medium=Check_WPWeight_Medium AND WPWeight_Heavy=Check_WPWeight_Heavy" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="SlidingCylinder.Retracted AND WPWeight_Light" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="PropValve.AO_SetPressure=4000" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.6" local_ID="12"/>
          <transitions condition="SlidingCylinder.Retracted AND WPWeight_Medium" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="PropValve.AO_SetPressure=5500" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="SlidingCylinder.Retracted AND WPWeight_Heavy" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="PropValve.AO_SetPressure=7000" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.6" local_ID="22"/>
          <transitions condition="StampingCylinder.Extended" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.7" local_ID="27"/>
          <transitions condition="(PressureSensor.AI_CurrentPressure > 18000) AND WPWeight_Heavy" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.8" local_ID="31"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.12" local_ID="34"/>
          <transitions condition="(PressureSensor.AI_CurrentPressure > 5300) AND (PressureSensor.AI_CurrentPressure &lt; 17000) AND WPWeight_Medium" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.9" local_ID="36"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.12" local_ID="39"/>
          <transitions condition="(PressureSensor.AI_CurrentPressure > 4800) AND (PressureSensor.AI_CurrentPressure &lt; 5200) AND WPWeight_Light" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.10" local_ID="41"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.10" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.12" local_ID="44"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.11" local_ID="47"/>
          <transitions condition="SoftwareEmergency" isJump="true" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.0" local_ID="52"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.12" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.13" local_ID="57"/>
          <transitions condition="PropValve.AO_SetPressure=0" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.13" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.14" local_ID="60"/>
          <transitions condition="StampingCylinder.Retracted" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.14" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.15" local_ID="63"/>
          <transitions condition="SlidingCylinder.Extended" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.15" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.16" local_ID="66"/>
          <transitions condition="WPStamped" isJump="true" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.16" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.0" local_ID="72"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Stamp_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Dummy1" incomingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Dummy2" incomingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Intersetp" incomingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="PrepareStamping" incomingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="R" actionVariable="//@resources.0/@pous.17/@declaration/@internalVariables.0"/>
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="S" actionVariable="//@resources.0/@pous.17/@declaration/@outputVariables.7"/>
          </steps>
          <steps name="Stamp_WP" incomingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.5" local_ID="18" stepLevel="5"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.6" local_ID="21" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="22" qualifier="N" actionVariable="//@resources.0/@pous.17/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Check_Allowed_To_Operate AND WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Check_Allowed_To_Operate AND Timer.Q" sourceStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="IsStamping AND NOT WPStamped" sourceStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.5" local_ID="17"/>
          <transitions condition="WPStamped" sourceStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.5" targetStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.6" targetStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.0" local_ID="25"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Stamp_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.17/@actions.12/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.17/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.17/@actions.12/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stamp_Retracting" incomingTransitions="//@resources.0/@pous.17/@actions.12/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.17/@actions.12/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="SlidingCylinder_Retracting" incomingTransitions="//@resources.0/@pous.17/@actions.12/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.17/@actions.12/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Stamp_EmergencyHandled" incomingTransitions="//@resources.0/@pous.17/@actions.12/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.17/@actions.12/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.17/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.17/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.17/@actions.12/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.17/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.17/@actions.12/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="StampingCylinder.Retracted" sourceStep="//@resources.0/@pous.17/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.17/@actions.12/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="SlidingCylinder.Extended" sourceStep="//@resources.0/@pous.17/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.17/@actions.12/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.17/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.17/@actions.12/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Stamp_ACT_Init" outgoingTransitions="//@resources.0/@pous.17/@actions.13/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Stamping_Cylinder_Init" incomingTransitions="//@resources.0/@pous.17/@actions.13/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.17/@actions.13/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Extend_Sliding_Cylinder_Init" incomingTransitions="//@resources.0/@pous.17/@actions.13/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.17/@actions.13/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.17/@actions.13/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.17/@actions.13/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.17/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.17/@actions.13/@implementation/@steps.0" targetStep="//@resources.0/@pous.17/@actions.13/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="StampingCylinder.Retracted" sourceStep="//@resources.0/@pous.17/@actions.13/@implementation/@steps.1" targetStep="//@resources.0/@pous.17/@actions.13/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="SlidingCylinder.Extended" sourceStep="//@resources.0/@pous.17/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.17/@actions.13/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.17/@actions.13/@implementation/@steps.3" targetStep="//@resources.0/@pous.17/@actions.13/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.16 //@resources.0/@pous.7 //@resources.0/@pous.9 //@resources.0/@pous.17 //@resources.0/@pous.12 //@resources.0/@pous.15 //@resources.0/@pous.11 //@resources.0/@pous.10 //@resources.0/@pous.13 //@resources.0/@pous.14 //@resources.0/@pous.8" callers="//@resources.0/@pous.0" identifier="xPPU" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Stack" scope="VAR_INPUT" type="DERIVED" typeName="Stack">
          <location/>
        </inputVariables>
        <inputVariables name="Crane" scope="VAR_INPUT" type="DERIVED" typeName="Crane">
          <location/>
        </inputVariables>
        <inputVariables name="LargeSortingConveyor" scope="VAR_INPUT" type="DERIVED" typeName="LargeSortingConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="Stamp" scope="VAR_INPUT" type="DERIVED" typeName="Stamp">
          <location/>
        </inputVariables>
        <inputVariables name="PicAlphaConveyor" scope="VAR_INPUT" type="DERIVED" typeName="PicAlphaConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="SmallSortingConveyor" scope="VAR_INPUT" type="DERIVED" typeName="SmallSortingConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="RefillConveyor" scope="VAR_INPUT" type="DERIVED" typeName="RefillConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="PicAlpha" scope="VAR_INPUT" type="DERIVED" typeName="PicAlpha">
          <location/>
        </inputVariables>
        <inputVariables name="SafetyDoor" scope="VAR_INPUT" type="DERIVED" typeName="SafetyDoor">
          <location/>
        </inputVariables>
        <inputVariables name="LightGrid" scope="VAR_INPUT" type="DERIVED" typeName="LightGrid">
          <location/>
        </inputVariables>
        <inputVariables name="EngergyMonitoringHardware" scope="VAR_INPUT" type="DERIVED" typeName="EnergyMonitor">
          <location/>
        </inputVariables>
        <inputVariables name="Block_LSCSep1_LSCSep2" scope="VAR_INPUT" type="DERIVED" typeName="ValveBlock">
          <location/>
        </inputVariables>
        <inputVariables name="Block_SSC_PAC" scope="VAR_INPUT" type="DERIVED" typeName="ValveBlock">
          <location/>
        </inputVariables>
        <inputVariables name="Block_Stack_Crane" scope="VAR_INPUT" type="DERIVED" typeName="ValveBlock">
          <location/>
        </inputVariables>
        <inputVariables name="Block_Stamp_RC" scope="VAR_INPUT" type="DERIVED" typeName="ValveBlock">
          <location/>
        </inputVariables>
        <inputVariables name="DI_NO_EMERGENCY" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="xPPU">
          <statements>//GREEN</statements>
          <statements>//WHITE</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//Variables</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//Variables</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//GREEN</statements>
          <statements>//WHITE</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="Timer" scope="VAR" type="DERIVED" typeName="TON">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="SFCResetResetCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="SFCResetCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="SFC:SequentialFunctionChart" label="xPPU">
        <steps name="Init" outgoingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.0" local_ID="0" initialStep="true"/>
        <steps name="SFC_Reset_Reset" incomingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.0" outgoingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.1" local_ID="3" stepLevel="1"/>
        <steps name="Start" incomingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.1" outgoingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.2 //@resources.0/@pous.18/@implementations.0/@transitions.3" local_ID="6" stepLevel="2"/>
        <steps name="ManuelMode_active" incomingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.3" outgoingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.4" local_ID="12" stepLevel="3"/>
        <steps name="Initialisation_2" incomingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.2" outgoingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.5 //@resources.0/@pous.18/@implementations.0/@transitions.6 //@resources.0/@pous.18/@implementations.0/@transitions.7" local_ID="17" stepLevel="3"/>
        <steps name="AutomaticExecute" incomingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.5" outgoingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.8 //@resources.0/@pous.18/@implementations.0/@transitions.9 //@resources.0/@pous.18/@implementations.0/@transitions.10" local_ID="28" stepLevel="4"/>
        <steps name="ManuelMode_Active2" incomingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.10" outgoingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.11" local_ID="37" stepLevel="5"/>
        <steps name="Emergency_Stop" incomingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.8" outgoingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.12" local_ID="42" stepLevel="5"/>
        <steps name="SFC_Reset" incomingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.12" outgoingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.13" local_ID="45" stepLevel="6"/>
        <steps name="Ready_To_Initialise" incomingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.13" outgoingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.14" local_ID="48" stepLevel="7"/>
        <transitions condition="TRUE" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.0" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.1" local_ID="2"/>
        <transitions condition="SFCResetResetCompleted" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.1" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.2" local_ID="5"/>
        <transitions condition="StartButton AND AutomaticMode" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.2" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.4" local_ID="9"/>
        <transitions condition="ManuelMode" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.2" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.3" local_ID="11"/>
        <transitions condition="AutomaticMode" isJump="true" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.3" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.2" local_ID="14"/>
        <transitions condition="InitCompleted" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.4" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.5" local_ID="20"/>
        <transitions condition="EmergencyStop" isJump="true" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.4" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.7" local_ID="22"/>
        <transitions condition="ManuelMode" isJump="true" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.4" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.3" local_ID="25"/>
        <transitions condition="EmergencyStop" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.5" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.7" local_ID="31"/>
        <transitions condition="StartButton" isJump="true" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.5" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.0" local_ID="33"/>
        <transitions condition="ManuelMode" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.5" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.6" local_ID="36"/>
        <transitions condition="AutomaticMode" isJump="true" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.6" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.5" local_ID="39"/>
        <transitions condition="EmergencyHandled" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.7" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.8" local_ID="44"/>
        <transitions condition="SFCResetCompleted" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.8" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.9" local_ID="47"/>
        <transitions condition="NOT EmergencyStop" isJump="true" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.9" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.0" local_ID="50"/>
      </implementations>
      <actions name="ACT_CheckEmergency">
        <implementation xsi:type="ST:StructuredText" label="ACT_CheckEmergency" id="_OuzkcDsuEeugKuRu1b-FYw" text="EmergencyStop := Stack.EmergencyStop OR LargeSortingConveyor.EmergencyStop OR Stamp.EmergencyStop OR SafetyDoor.EmergencyStop OR LightGrid.EmergencyStop OR Crane.SoftwareEmergency OR Stamp.SoftwareEmergency OR PicAlpha.SoftwareEmergency;">
          <statements xsi:type="ST:Assignment" id="_OuzkcjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="236" structuredText="_OuzkcDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
            <right xsi:type="STE:BinaryExpression" id="_OuzkcTsuEeugKuRu1b-FYw" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                        </left>
                        <right xsi:type="STE:BinaryExpression" operator="OR">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </left>
                          <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </right>
                        </right>
                      </right>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_CheckManuelMode">
        <implementation xsi:type="ST:StructuredText" label="ACT_CheckManuelMode" id="_Ou0LgDsuEeugKuRu1b-FYw" text="ManuelMode := Stack.ManuelMode OR LargeSortingConveyor.ManuelMode OR Stamp.ManuelMode OR SafetyDoor.ManuelMode OR LightGrid.ManuelMode;&#xA;AutomaticMode := Stack.AutomaticMode AND LargeSortingConveyor.AutomaticMode AND Stamp.AutomaticMode AND SafetyDoor.AutomaticMode AND LightGrid.AutomaticMode;">
          <statements xsi:type="ST:Assignment" id="_Ou0LgjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="134" structuredText="_Ou0LgDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
            <right xsi:type="STE:BinaryExpression" id="_Ou0LgTsuEeugKuRu1b-FYw" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou0LhDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="156" structuredText="_Ou0LgDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
            <right xsi:type="STE:BinaryExpression" id="_Ou0LgzsuEeugKuRu1b-FYw" operator="AND">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="AND">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="AND">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_Start">
        <implementation xsi:type="ST:StructuredText" label="ACT_Start" id="_Ou0LhTsuEeugKuRu1b-FYw" text="StartButton := Stack.StartButton OR LargeSortingConveyor.StartButton OR Stamp.StartButton OR SafetyDoor.StartButton OR LightGrid.StartButton;&#xA;ManuelMode := Stack.ManuelMode OR LargeSortingConveyor.ManuelMode OR Stamp.ManuelMode OR SafetyDoor.ManuelMode OR LightGrid.ManuelMode;&#xA;AutomaticMode := Stack.AutomaticMode AND LargeSortingConveyor.AutomaticMode AND Stamp.AutomaticMode AND SafetyDoor.AutomaticMode AND LightGrid.AutomaticMode;">
          <statements xsi:type="ST:Assignment" id="_Ou0LhzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="140" structuredText="_Ou0LhTsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
            <right xsi:type="STE:BinaryExpression" id="_Ou0LhjsuEeugKuRu1b-FYw" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou0LiTsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="134" structuredText="_Ou0LhTsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
            <right xsi:type="STE:BinaryExpression" id="_Ou0LiDsuEeugKuRu1b-FYw" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou0LizsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="156" structuredText="_Ou0LhTsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
            <right xsi:type="STE:BinaryExpression" id="_Ou0LijsuEeugKuRu1b-FYw" operator="AND">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="AND">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="AND">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="AutomaticExecute_entry">
        <implementation xsi:type="ST:StructuredText" label="AutomaticExecute_entry" id="_Ou0ykDsuEeugKuRu1b-FYw" text="AutomaticExecuteCompleted:=FALSE;&#xA;&#xA;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#xA;Stack.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;LargeSortingConveyor.Panel.ACT_TurnLampGreen_On();&#xA;Stack.Panel.ACT_TurnLampGreen_On();&#x9;&#xA;Stamp.Panel.ACT_TurnLampGreen_On();">
          <statements xsi:type="ST:Assignment" id="_Ou0ykjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="32" structuredText="_Ou0ykDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_Ou0ykTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou0ykzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="50" structuredText="_Ou0ykDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou0ylDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_Ou0ykDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou0ylTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="35" structuredText="_Ou0ykDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou0yljsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="49" structuredText="_Ou0ykDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou0ylzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="34" structuredText="_Ou0ykDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou0ymDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="34" structuredText="_Ou0ykDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
          </statements>
        </implementation>
      </actions>
      <actions name="CallAll_AutomationExecutes">
        <implementation xsi:type="ST:StructuredText" label="CallAll_AutomationExecutes" id="_Ou2AsDsuEeugKuRu1b-FYw" text="EmergencyStop := Stack.EmergencyStop OR LargeSortingConveyor.EmergencyStop OR Stamp.EmergencyStop OR SafetyDoor.EmergencyStop OR LightGrid.EmergencyStop OR Crane.SoftwareEmergency OR Stamp.SoftwareEmergency OR PicAlpha.SoftwareEmergency;&#xA;StartButton := Stack.StartButton OR LargeSortingConveyor.StartButton OR Stamp.StartButton OR SafetyDoor.StartButton OR LightGrid.StartButton;&#xA;ManuelMode := Stack.ManuelMode OR LargeSortingConveyor.ManuelMode OR Stamp.ManuelMode OR SafetyDoor.ManuelMode OR LightGrid.ManuelMode;&#xA;AutomaticMode := Stack.AutomaticMode AND LargeSortingConveyor.AutomaticMode AND Stamp.AutomaticMode AND SafetyDoor.AutomaticMode AND LightGrid.AutomaticMode;&#xA;Crane.ACT_AutomaticExecute();&#xA;Stack.ACT_AutomaticExecute();&#xA;Stamp.ACT_AutomaticExecute();&#xA;LargeSortingConveyor.ACT_AutomaticExecute();&#xA;PicAlphaConveyor.ACT_AutomaticExecute();&#xA;SmallSortingConveyor.ACT_AutomaticExecute();&#xA;RefillConveyor.ACT_AutomaticExecute();&#xA;PicAlpha.ACT_AutomaticExecute();&#xA;ACT_FaultAirPressureDetection();">
          <statements xsi:type="ST:Assignment" id="_Ou2AsjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="236" structuredText="_Ou2AsDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
            <right xsi:type="STE:BinaryExpression" id="_Ou2AsTsuEeugKuRu1b-FYw" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                        </left>
                        <right xsi:type="STE:BinaryExpression" operator="OR">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </left>
                          <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </right>
                        </right>
                      </right>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou2AtDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="140" structuredText="_Ou2AsDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
            <right xsi:type="STE:BinaryExpression" id="_Ou2AszsuEeugKuRu1b-FYw" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou2AtjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="134" structuredText="_Ou2AsDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
            <right xsi:type="STE:BinaryExpression" id="_Ou2AtTsuEeugKuRu1b-FYw" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou2AuDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="156" structuredText="_Ou2AsDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
            <right xsi:type="STE:BinaryExpression" id="_Ou2AtzsuEeugKuRu1b-FYw" operator="AND">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="AND">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="AND">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou2AuTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="28" structuredText="_Ou2AsDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou2AujsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="28" structuredText="_Ou2AsDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou2AuzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="28" structuredText="_Ou2AsDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou2AvDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="43" structuredText="_Ou2AsDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou2AvTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="39" structuredText="_Ou2AsDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou2AvjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="43" structuredText="_Ou2AsDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou2AvzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="37" structuredText="_Ou2AsDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou2AwDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="31" structuredText="_Ou2AsDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou2AwTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="31" structuredText="_Ou2AsDsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_FaultAirPressureDetection"/>
          </statements>
        </implementation>
      </actions>
      <actions name="EmergencyStop_entry">
        <implementation xsi:type="ST:StructuredText" label="EmergencyStop_entry" id="_Ou2nwDsuEeugKuRu1b-FYw" text="EmergencyHandled:=FALSE;&#xA;&#xA;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#xA;Stack.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;Stack.Panel.ACT_TurnLampGreen_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampGreen_Off();">
          <statements xsi:type="ST:Assignment" id="_Ou2nwjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="23" structuredText="_Ou2nwDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyHandled"/>
            <right xsi:type="STE:Literal" id="_Ou2nwTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou2nwzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="50" structuredText="_Ou2nwDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou2nxDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_Ou2nwDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou2nxTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="35" structuredText="_Ou2nwDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou2nxjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="50" structuredText="_Ou2nwDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou2nxzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="35" structuredText="_Ou2nwDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou2nyDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="35" structuredText="_Ou2nwDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Init_entry">
        <implementation xsi:type="ST:StructuredText" label="Init_entry" id="_Ou2nyTsuEeugKuRu1b-FYw" text="InitCompleted:=FALSE;&#xA;&#xA;LargeSortingConveyor.Panel.ACT_TurnLampWhite_On();&#xA;Stack.Panel.ACT_TurnLampWhite_On();&#x9;&#xA;Stamp.Panel.ACT_TurnLampWhite_On();&#xA;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;Stack.Panel.ACT_TurnLampGreen_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampGreen_Off();">
          <statements xsi:type="ST:Assignment" id="_Ou2nyzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_Ou2nyTsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_Ou2nyjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou2nzDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="49" structuredText="_Ou2nyTsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou2nzTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="34" structuredText="_Ou2nyTsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou2nzjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="34" structuredText="_Ou2nyTsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou2nzzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="50" structuredText="_Ou2nyTsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou2n0DsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="35" structuredText="_Ou2nyTsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou2n0TsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="35" structuredText="_Ou2nyTsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
        </implementation>
      </actions>
      <actions name="LightBlinking">
        <implementation xsi:type="ST:StructuredText" label="LightBlinking" id="_Ou314DsuEeugKuRu1b-FYw" text="Timer(IN := NOT Timer.Q, PT:=T#1500ms);&#xA;&#xA;IF (Timer.ET &lt; Timer.PT/2) THEN&#xA;&#x9;//GREEN&#xA;&#x9;Stack.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;Stamp.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;SafetyDoor.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;LightGrid.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;Stack.Panel.ACT_TurnLampWhite_Off();&#xA;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;&#x9;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;&#x9;SafetyDoor.Panel.ACT_TurnLampReset_Off();&#xA;&#x9;LightGrid.Panel.ACT_TurnLampReset_Off();&#xA;ELSE&#xA;&#x9;//WHITE&#xA;&#x9;Stack.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;Stamp.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;SafetyDoor.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;LightGrid.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;Stack.Panel.ACT_TurnLampWhite_On();&#xA;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampWhite_On();&#x9;&#xA;&#x9;Stamp.Panel.ACT_TurnLampWhite_On();&#xA;&#x9;SafetyDoor.Panel.ACT_TurnLampReset_On();&#xA;&#x9;LightGrid.Panel.ACT_TurnLampReset_On();&#xA;END_IF&#xA;&#xA;AutomaticMode := Stack.AutomaticMode AND LargeSortingConveyor.AutomaticMode AND Stamp.AutomaticMode AND SafetyDoor.AutomaticMode AND LightGrid.AutomaticMode;">
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou314zsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="38" structuredText="_Ou314DsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:UnaryExpression" id="_Ou314TsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                  <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Q"/>
                  </subexpression>
                </assignedValue>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou314jsuEeugKuRu1b-FYw" dataType="TIME" expressionType="LITERAL" symbol="T#1500ms"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:If" id="_Ou4dCDsuEeugKuRu1b-FYw" statementType="IF" absStartLine="3" absEndLine="27" relStartLine="3" relEndLine="27" endColumnPos="5" structuredText="_Ou314DsuEeugKuRu1b-FYw">
            <conditionalBlocks id="_Ou4c_DsuEeugKuRu1b-FYw" statementType="CONDITIONAL_BLOCK" absStartLine="3" absEndLine="14" relStartLine="3" relEndLine="14" endColumnPos="40" structuredText="_Ou314DsuEeugKuRu1b-FYw" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_Ou4c8TsuEeugKuRu1b-FYw" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_Ou4c8DsuEeugKuRu1b-FYw" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ET"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="DIV">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
                    </left>
                    <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:FunctionCallStatement" id="_Ou4c8jsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="35" structuredText="_Ou314DsuEeugKuRu1b-FYw">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_Ou4c8zsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="50" structuredText="_Ou314DsuEeugKuRu1b-FYw">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_Ou4c9DsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="35" structuredText="_Ou314DsuEeugKuRu1b-FYw">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_Ou4c9TsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="40" structuredText="_Ou314DsuEeugKuRu1b-FYw">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_Ou4c9jsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="39" structuredText="_Ou314DsuEeugKuRu1b-FYw">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_Ou4c9zsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="36" structuredText="_Ou314DsuEeugKuRu1b-FYw">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_Ou4c-DsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="51" structuredText="_Ou314DsuEeugKuRu1b-FYw">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_Ou4c-TsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="36" structuredText="_Ou314DsuEeugKuRu1b-FYw">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_Ou4c-jsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="41" structuredText="_Ou314DsuEeugKuRu1b-FYw">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_Ou4c-zsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="1" endColumnPos="40" structuredText="_Ou314DsuEeugKuRu1b-FYw">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_Off"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_Ou4dBzsuEeugKuRu1b-FYw" statementType="CONDITIONAL_BLOCK" absStartLine="15" absEndLine="26" relStartLine="15" relEndLine="26" endColumnPos="39" structuredText="_Ou314DsuEeugKuRu1b-FYw">
              <substatements xsi:type="ST:FunctionCallStatement" id="_Ou4c_TsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="36" structuredText="_Ou314DsuEeugKuRu1b-FYw">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_Ou4c_jsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="51" structuredText="_Ou314DsuEeugKuRu1b-FYw">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_Ou4c_zsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="36" structuredText="_Ou314DsuEeugKuRu1b-FYw">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_Ou4dADsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="41" structuredText="_Ou314DsuEeugKuRu1b-FYw">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_Ou4dATsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="40" structuredText="_Ou314DsuEeugKuRu1b-FYw">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_Ou4dAjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="35" structuredText="_Ou314DsuEeugKuRu1b-FYw">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_Ou4dAzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="50" structuredText="_Ou314DsuEeugKuRu1b-FYw">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_Ou4dBDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="35" structuredText="_Ou314DsuEeugKuRu1b-FYw">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_Ou4dBTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="40" structuredText="_Ou314DsuEeugKuRu1b-FYw">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_Ou4dBjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="39" structuredText="_Ou314DsuEeugKuRu1b-FYw">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_On"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou4dCjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" endColumnPos="156" structuredText="_Ou314DsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
            <right xsi:type="STE:BinaryExpression" id="_Ou4dCTsuEeugKuRu1b-FYw" operator="AND">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="AND">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="AND">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Ready_To_Initialise_active">
        <implementation xsi:type="ST:StructuredText" label="Ready_To_Initialise_active" id="_Ou5EADsuEeugKuRu1b-FYw" text="EmergencyStop := Stack.EmergencyStop OR LargeSortingConveyor.EmergencyStop OR Stamp.EmergencyStop OR SafetyDoor.EmergencyStop OR LightGrid.EmergencyStop OR Crane.SoftwareEmergency OR Stamp.SoftwareEmergency OR PicAlpha.SoftwareEmergency;&#xA;StartButton := Stack.StartButton OR LargeSortingConveyor.StartButton OR Stamp.StartButton OR SafetyDoor.StartButton OR LightGrid.StartButton;&#xA;IF(StartButton)THEN&#xA;&#x9;Stamp.SoftwareEmergency:=FALSE;&#xA;&#x9;Crane.SoftwareEmergency:=FALSE;&#xA;&#x9;PicAlpha.SoftwareEmergency:=FALSE;&#xA;END_IF">
          <statements xsi:type="ST:Assignment" id="_Ou5EAjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="236" structuredText="_Ou5EADsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
            <right xsi:type="STE:BinaryExpression" id="_Ou5EATsuEeugKuRu1b-FYw" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                        </left>
                        <right xsi:type="STE:BinaryExpression" operator="OR">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </left>
                          <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </right>
                        </right>
                      </right>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou5EBDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="140" structuredText="_Ou5EADsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
            <right xsi:type="STE:BinaryExpression" id="_Ou5EAzsuEeugKuRu1b-FYw" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:If" id="_Ou5EDjsuEeugKuRu1b-FYw" statementType="IF" absStartLine="3" absEndLine="7" relStartLine="3" relEndLine="7" endColumnPos="5" structuredText="_Ou5EADsuEeugKuRu1b-FYw">
            <conditionalBlocks id="_Ou5EDTsuEeugKuRu1b-FYw" statementType="CONDITIONAL_BLOCK" absStartLine="3" absEndLine="6" relStartLine="3" relEndLine="6" endColumnPos="34" structuredText="_Ou5EADsuEeugKuRu1b-FYw" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_Ou5EBjsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:VariableExpression" id="_Ou5EBTsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_Ou5ECDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="31" structuredText="_Ou5EADsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                </left>
                <right xsi:type="STE:Literal" id="_Ou5EBzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_Ou5ECjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="31" structuredText="_Ou5EADsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                </left>
                <right xsi:type="STE:Literal" id="_Ou5ECTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_Ou5EDDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="34" structuredText="_Ou5EADsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                </left>
                <right xsi:type="STE:Literal" id="_Ou5ECzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_active">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_active" id="_Ou65MDsuEeugKuRu1b-FYw" text="(*PPU*)&#xA;&#x9;//Variables&#xA;&#x9;InitCompleted:=FALSE;&#xA;&#x9;AutomaticExecuteCompleted:=FALSE;&#xA;&#xA;(*Crane Reset*)&#xA;&#x9;Crane(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_EmergencyStop(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_MoveToConveyor(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_MoveToStack(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_MoveToStamp(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_PickUpWP(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_PutDownWP(SFCReset:=TRUE);&#xA;&#xA;(*LargeSortingConveyor Reset*)&#xA;&#x9;LargeSortingConveyor(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_ChangeTarget(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_CheckWPType(SFCReset:=TRUE);&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_SortWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*Stack Reset*)&#xA;&#x9;Stack(SFCReset:=TRUE);&#xA;&#x9;Stack.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;Stack.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;Stack.ACT_ProvideWP(SFCReset:=TRUE);&#xA;&#xA;(*Stamp Reset*)&#xA;&#x9;Stamp(SFCReset:=TRUE);&#xA;&#x9;Stamp.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;Stamp.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;Stamp.ACT_Stamp(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*PicAlphaConveyor Reset*)&#xA;&#x9;PicAlphaConveyor(SFCReset:=TRUE);&#xA;&#x9;PicAlphaConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;PicAlphaConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;PicAlphaConveyor.ACT_SeperateWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*SmallSortingConveyor Reset*)&#xA;&#x9;SmallSortingConveyor(SFCReset:=TRUE); &#xA;&#x9;SmallSortingConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_SortWP(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_ChangeTarget(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_CheckWPType(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*RefillConveyor Reset*)&#xA;&#x9;RefillConveyor(SFCReset:=TRUE);&#xA;&#x9;RefillConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;RefillConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;RefillConveyor.ACT_SeperateWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*PicAlpha Reset*)&#xA;&#x9;PicAlpha(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos1(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos2(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos3(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos4(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_PickUpWP(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_PutDownWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;SFCResetCompleted:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_Ou65MjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="21" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_Ou65MTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou65NDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="33" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_Ou65MzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou65NjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="22" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="Crane">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou65NTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou65ODsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="31" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou65NzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou65OjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="43" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou65OTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou65PDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="40" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_EmergencyStop">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou65OzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou65PjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="41" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou65PTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou65QDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="38" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou65PzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou65QjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="38" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou65QTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou65RDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="1" endColumnPos="35" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou65QzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou65RjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="36" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou65RTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou65SDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="37" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="LargeSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou65RzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou65SjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="46" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou65STsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou65TDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="58" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou65SzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou65TjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="54" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou65TTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou65UDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="53" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou65TzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou65UjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="48" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou65UTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou65VDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="22" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou65UzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou65VjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="31" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou65VTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou65WDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="1" endColumnPos="43" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou65VzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou65WjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="36" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ProvideWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou65WTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou65XDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="1" endColumnPos="22" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou65WzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou65XjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="31" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou65XTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gQTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="1" endColumnPos="43" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gQDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gQzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="32" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gQjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gRTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="38" absEndLine="38" relStartLine="38" relEndLine="38" startColumnPos="1" endColumnPos="33" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlphaConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gRDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gRzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="39" absEndLine="39" relStartLine="39" relEndLine="39" startColumnPos="1" endColumnPos="42" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gRjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gSTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="40" absEndLine="40" relStartLine="40" relEndLine="40" startColumnPos="1" endColumnPos="54" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gSDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gSzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="48" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gSjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gTTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="44" absEndLine="44" relStartLine="44" relEndLine="44" startColumnPos="1" endColumnPos="37" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="SmallSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gTDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gTzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="46" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gTjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gUTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="46" absEndLine="46" relStartLine="46" relEndLine="46" startColumnPos="1" endColumnPos="58" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gUDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gUzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="47" absEndLine="47" relStartLine="47" relEndLine="47" startColumnPos="1" endColumnPos="48" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gUjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gVTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="48" absEndLine="48" relStartLine="48" relEndLine="48" startColumnPos="1" endColumnPos="54" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gVDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gVzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="49" absEndLine="49" relStartLine="49" relEndLine="49" startColumnPos="1" endColumnPos="53" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gVjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gWTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="52" absEndLine="52" relStartLine="52" relEndLine="52" startColumnPos="1" endColumnPos="31" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="RefillConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gWDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gWzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="53" absEndLine="53" relStartLine="53" relEndLine="53" startColumnPos="1" endColumnPos="40" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gWjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gXTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="54" absEndLine="54" relStartLine="54" relEndLine="54" startColumnPos="1" endColumnPos="52" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gXDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gXzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="55" absEndLine="55" relStartLine="55" relEndLine="55" startColumnPos="1" endColumnPos="46" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gXjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gYTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="58" absEndLine="58" relStartLine="58" relEndLine="58" startColumnPos="1" endColumnPos="25" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlpha">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gYDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gYzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="59" absEndLine="59" relStartLine="59" relEndLine="59" startColumnPos="1" endColumnPos="34" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gYjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gZTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="60" absEndLine="60" relStartLine="60" relEndLine="60" startColumnPos="1" endColumnPos="46" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gZDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gZzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="61" absEndLine="61" relStartLine="61" relEndLine="61" startColumnPos="1" endColumnPos="40" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos1">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gZjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gaTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="62" absEndLine="62" relStartLine="62" relEndLine="62" startColumnPos="1" endColumnPos="40" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos2">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gaDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gazsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="63" absEndLine="63" relStartLine="63" relEndLine="63" startColumnPos="1" endColumnPos="40" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos3">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gajsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gbTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="64" absEndLine="64" relStartLine="64" relEndLine="64" startColumnPos="1" endColumnPos="40" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos4">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gbDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gbzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="65" absEndLine="65" relStartLine="65" relEndLine="65" startColumnPos="1" endColumnPos="38" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gbjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou7gcTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="66" absEndLine="66" relStartLine="66" relEndLine="66" startColumnPos="1" endColumnPos="39" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou7gcDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou7gczsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="68" absEndLine="68" relStartLine="68" relEndLine="68" endColumnPos="23" structuredText="_Ou65MDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetCompleted"/>
            <right xsi:type="STE:Literal" id="_Ou7gcjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_entry">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_entry" id="_Ou8HUDsuEeugKuRu1b-FYw" text="SFCResetCompleted:=FALSE;&#xA;GVL.IsSFCResetting:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_Ou8HUjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_Ou8HUDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetCompleted"/>
            <right xsi:type="STE:Literal" id="_Ou8HUTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou8HVDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="24" structuredText="_Ou8HUDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="GVL">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSFCResetting"/>
            </left>
            <right xsi:type="STE:Literal" id="_Ou8HUzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_Reset_active">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_Reset_active" id="_Ou98gDsuEeugKuRu1b-FYw" text="(*Crane Reset*)&#x9;&#xA;&#x9;Crane(SFCReset:=FALSE);&#xA;&#x9;Crane.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_EmergencyStop(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_MoveToConveyor(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_MoveToStack(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_MoveToStamp(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_PickUpWP(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_PutDownWP(SFCReset:=FALSE);&#xA;&#x9;Crane.LiftingCylinder.ACT_Retract();&#xA;&#x9;Crane.Gripper.ACT_Release();&#xA;&#x9;Crane.Table.Motor.ACT_Stop();&#x9;&#xA;&#x9;//Variables&#xA;&#x9;Crane.SFCReset:=FALSE;&#xA;&#x9;&#xA;                                                               &#xA;(*LargeSortingConveyor Reset*)  &#xA;&#x9;LargeSortingConveyor(SFCReset:=FALSE);                                &#xA;&#x9;LargeSortingConveyor.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_ChangeTarget(SFCReset:=FALSE);&#x9;&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_CheckWPType(SFCReset:=FALSE);&#x9;&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_SortWP(SFCReset:=FALSE);&#x9;&#xA;&#x9;LargeSortingConveyor.Motor.ACT_Stop();&#xA;&#x9;LargeSortingConveyor.Seperator1.ACT_Retract();&#xA;&#x9;LargeSortingConveyor.Seperator2.ACT_Retract();&#xA;&#x9;//Variables&#xA;&#x9;LargeSortingConveyor.SFCReset:=FALSE;&#xA;&#x9;                                                            &#xA;(*Stack Reset*)   &#xA;&#x9;Stack(SFCReset:=FALSE);                                              &#xA;&#x9;Stack.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stack.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stack.ACT_ProvideWP(SFCReset:=FALSE);&#x9;&#xA;&#x9;Stack.Seperator.ACT_Retract();&#xA;&#x9;//Variables&#x9;&#xA;&#x9;Stack.SFCReset:=FALSE;&#xA;                                                        &#xA;(*Stamp Reset*)  &#xA;&#x9;Stamp(SFCReset:=FALSE);                                               &#xA;&#x9;Stamp.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stamp.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stamp.ACT_Stamp(SFCReset:=FALSE);&#xA;&#x9;Stamp.StampingCylinder.ACT_Retract();&#xA;&#x9;Stamp.SlidingCylinder.ACT_Extend();&#xA;&#x9;//Variables&#x9;&#xA;&#x9;Stamp.SFCReset:=FALSE;&#xA;&#xA;(*PicAlphaConveyor Reset*)&#xA;&#x9;PicAlphaConveyor(SFCReset:=FALSE); &#xA;&#x9;PicAlphaConveyor.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;PicAlphaConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;PicAlphaConveyor.ACT_SeperateWP(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;PicAlphaConveyor.SFCReset:=FALSE;&#xA;&#x9;&#xA;(*SmallSortingConveyor Reset*)&#xA;&#x9;SmallSortingConveyor(SFCReset:=FALSE); &#xA;&#x9;SmallSortingConveyor.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_SortWP(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_ChangeTarget(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_CheckWPType(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;SmallSortingConveyor.SFCReset:=FALSE;&#xA;&#x9;&#xA;(*RefillConveyor Reset*)&#xA;&#x9;RefillConveyor(SFCReset:=FALSE); &#xA;&#x9;RefillConveyor.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;RefillConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;RefillConveyor.ACT_SeperateWP(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;RefillConveyor.SFCReset:=FALSE;&#x9;&#xA;&#x9;&#xA;(*PicAlpha Reset*)&#xA;&#x9;PicAlpha(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos1(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos2(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos3(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos4(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_PickUpWP(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_PutDownWP(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;PicAlpha.SFCReset:=FALSE;&#x9;&#xA;&#x9;                                                            &#xA;SFCResetResetCompleted:=TRUE;&#xA;SFCResetCompleted:=TRUE;">
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou98gjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" startColumnPos="1" endColumnPos="23" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="Crane">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou98gTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou98hDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="32" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou98gzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou98hjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="44" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou98hTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou98iDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="41" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_EmergencyStop">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou98hzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou98ijsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="42" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou98iTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou98jDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="39" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou98izsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jkTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="39" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-jkDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jkzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="36" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-jkjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jlTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="37" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-jlDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jljsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="36" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LiftingCylinder"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jlzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="28" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Gripper"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Release"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jmDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="29" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              </innerVariable>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou-jmjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="22" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_Ou-jmTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jnDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="38" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="LargeSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-jmzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jnjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="47" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-jnTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-joDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="59" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-jnzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jojsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="55" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-joTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jpDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="54" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-jozsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jpjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="49" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-jpTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jpzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="38" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jqDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="46" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Seperator1"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jqTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="46" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Seperator2"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou-jqzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="37" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_Ou-jqjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jrTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="1" endColumnPos="23" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-jrDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jrzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="32" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-jrjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jsTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="1" endColumnPos="44" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-jsDsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jszsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="37" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ProvideWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-jsjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jtDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="36" absEndLine="36" relStartLine="36" relEndLine="36" startColumnPos="1" endColumnPos="30" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Seperator"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou-jtjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="38" absEndLine="38" relStartLine="38" relEndLine="38" startColumnPos="1" endColumnPos="22" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_Ou-jtTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-juDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="23" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-jtzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jujsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="42" absEndLine="42" relStartLine="42" relEndLine="42" startColumnPos="1" endColumnPos="32" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-juTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jvDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="43" absEndLine="43" relStartLine="43" relEndLine="43" startColumnPos="1" endColumnPos="44" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-juzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jvjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="44" absEndLine="44" relStartLine="44" relEndLine="44" startColumnPos="1" endColumnPos="33" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-jvTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jvzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="37" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StampingCylinder"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jwDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="46" absEndLine="46" relStartLine="46" relEndLine="46" startColumnPos="1" endColumnPos="35" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SlidingCylinder"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Extend"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou-jwjsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="48" absEndLine="48" relStartLine="48" relEndLine="48" startColumnPos="1" endColumnPos="22" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_Ou-jwTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jxDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="51" absEndLine="51" relStartLine="51" relEndLine="51" startColumnPos="1" endColumnPos="34" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlphaConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-jwzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jxjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="52" absEndLine="52" relStartLine="52" relEndLine="52" startColumnPos="1" endColumnPos="43" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-jxTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jyDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="53" absEndLine="53" relStartLine="53" relEndLine="53" startColumnPos="1" endColumnPos="55" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-jxzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jyjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="54" absEndLine="54" relStartLine="54" relEndLine="54" startColumnPos="1" endColumnPos="49" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-jyTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou-jzDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="56" absEndLine="56" relStartLine="56" relEndLine="56" startColumnPos="1" endColumnPos="33" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_Ou-jyzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-jzjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="59" absEndLine="59" relStartLine="59" relEndLine="59" startColumnPos="1" endColumnPos="38" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="SmallSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-jzTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-j0DsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="60" absEndLine="60" relStartLine="60" relEndLine="60" startColumnPos="1" endColumnPos="47" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-jzzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-j0jsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="61" absEndLine="61" relStartLine="61" relEndLine="61" startColumnPos="1" endColumnPos="59" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-j0TsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-j1DsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="62" absEndLine="62" relStartLine="62" relEndLine="62" startColumnPos="1" endColumnPos="49" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-j0zsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-j1jsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="63" absEndLine="63" relStartLine="63" relEndLine="63" startColumnPos="1" endColumnPos="55" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-j1TsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-j2DsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="64" absEndLine="64" relStartLine="64" relEndLine="64" startColumnPos="1" endColumnPos="54" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-j1zsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou-j2jsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="66" absEndLine="66" relStartLine="66" relEndLine="66" startColumnPos="1" endColumnPos="37" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_Ou-j2TsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-j3DsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="69" absEndLine="69" relStartLine="69" relEndLine="69" startColumnPos="1" endColumnPos="32" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="RefillConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-j2zsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-j3jsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="70" absEndLine="70" relStartLine="70" relEndLine="70" startColumnPos="1" endColumnPos="41" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-j3TsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-j4DsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="71" absEndLine="71" relStartLine="71" relEndLine="71" startColumnPos="1" endColumnPos="53" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-j3zsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-j4jsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="72" absEndLine="72" relStartLine="72" relEndLine="72" startColumnPos="1" endColumnPos="47" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-j4TsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou-j5DsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="74" absEndLine="74" relStartLine="74" relEndLine="74" startColumnPos="1" endColumnPos="31" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_Ou-j4zsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-j5jsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="77" absEndLine="77" relStartLine="77" relEndLine="77" startColumnPos="1" endColumnPos="26" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlpha">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-j5TsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-j6DsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="78" absEndLine="78" relStartLine="78" relEndLine="78" startColumnPos="1" endColumnPos="35" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-j5zsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-j6jsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="79" absEndLine="79" relStartLine="79" relEndLine="79" startColumnPos="1" endColumnPos="47" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-j6TsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-j7DsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="80" absEndLine="80" relStartLine="80" relEndLine="80" startColumnPos="1" endColumnPos="41" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos1">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-j6zsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-j7jsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="81" absEndLine="81" relStartLine="81" relEndLine="81" startColumnPos="1" endColumnPos="41" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos2">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-j7TsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-j8DsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="82" absEndLine="82" relStartLine="82" relEndLine="82" startColumnPos="1" endColumnPos="41" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos3">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-j7zsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-j8jsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="83" absEndLine="83" relStartLine="83" relEndLine="83" startColumnPos="1" endColumnPos="41" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos4">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-j8TsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-j9DsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="84" absEndLine="84" relStartLine="84" relEndLine="84" startColumnPos="1" endColumnPos="39" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-j8zsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_Ou-j9jsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="85" absEndLine="85" relStartLine="85" relEndLine="85" startColumnPos="1" endColumnPos="40" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_Ou-j9TsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou-j-DsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="87" absEndLine="87" relStartLine="87" relEndLine="87" startColumnPos="1" endColumnPos="25" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_Ou-j9zsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou-j-jsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="89" absEndLine="89" relStartLine="89" relEndLine="89" endColumnPos="28" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetResetCompleted"/>
            <right xsi:type="STE:Literal" id="_Ou-j-TsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou-j_DsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="90" absEndLine="90" relStartLine="90" relEndLine="90" endColumnPos="23" structuredText="_Ou98gDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetCompleted"/>
            <right xsi:type="STE:Literal" id="_Ou-j-zsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_Reset_entry">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_Reset_entry" id="_Ou_KoDsuEeugKuRu1b-FYw" text="SFCResetResetCompleted:=FALSE;&#xA;GVL.IsSFCResetting:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_Ou_KojsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_Ou_KoDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetResetCompleted"/>
            <right xsi:type="STE:Literal" id="_Ou_KoTsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_Ou_KpDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="24" structuredText="_Ou_KoDsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="GVL">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSFCResetting"/>
            </left>
            <right xsi:type="STE:Literal" id="_Ou_KozsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_Reset_exit">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_Reset_exit" id="_Ou_KpTsuEeugKuRu1b-FYw" text="GVL.IsSFCResetting:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_Ou_KpzsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_Ou_KpTsuEeugKuRu1b-FYw">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="GVL">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSFCResetting"/>
            </left>
            <right xsi:type="STE:Literal" id="_Ou_KpjsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_FaultAirPressureDetection">
        <implementation xsi:type="ST:StructuredText" label="ACT_FaultAirPressureDetection" id="_OvAYwDsuEeugKuRu1b-FYw" text="IF(&#xA;&#x9;Block_LSCSep1_LSCSep2.DI_BoundaryPressure = FALSE &#xA;&#x9;OR Block_SSC_PAC.DI_BoundaryPressure = FALSE&#xA;&#x9;OR Block_Stack_Crane.AI_PressureSensor &lt;= 10000&#xA;&#x9;OR Block_Stamp_RC.AI_PressureSensor &lt;= 10000&#xA;&#x9;OR EngergyMonitoringHardware.PressureSensor_4bar.DI_PressureReached = FALSE &#xA;)&#xA;THEN&#xA; EmergencyStop := TRUE; &#xA; Timer(IN := NOT Timer.Q, PT:=T#500MS);&#xA;&#x9;IF (Timer.ET &lt; Timer.PT/2) THEN&#xA;&#x9;&#x9;//GREEN&#xA;&#x9;&#x9;Stack.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;Stamp.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;SafetyDoor.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;LightGrid.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;Stack.Panel.ACT_TurnLampWhite_Off();&#xA;&#x9;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;&#x9;&#x9;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;&#x9;&#x9;SafetyDoor.Panel.ACT_TurnLampReset_Off();&#xA;&#x9;&#x9;LightGrid.Panel.ACT_TurnLampReset_Off();&#xA;&#x9;ELSE&#xA;&#x9;&#x9;//WHITE&#xA;&#x9;&#x9;Stack.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;Stamp.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;SafetyDoor.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;LightGrid.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;Stack.Panel.ACT_TurnLampWhite_On();&#xA;&#x9;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampWhite_On();&#x9;&#xA;&#x9;&#x9;Stamp.Panel.ACT_TurnLampWhite_On();&#xA;&#x9;&#x9;SafetyDoor.Panel.ACT_TurnLampReset_On();&#xA;&#x9;&#x9;LightGrid.Panel.ACT_TurnLampReset_On();&#xA;&#x9;END_IF&#xA;END_IF">
          <statements xsi:type="ST:If" id="_OvAY4jsuEeugKuRu1b-FYw" statementType="IF" absStartLine="1" absEndLine="36" relStartLine="1" relEndLine="36" endColumnPos="5" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
            <conditionalBlocks id="_OvAY4TsuEeugKuRu1b-FYw" statementType="CONDITIONAL_BLOCK" absStartLine="1" absEndLine="35" relStartLine="1" relEndLine="35" endColumnPos="6" structuredText="_OvAYwDsuEeugKuRu1b-FYw" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_OvAYwjsuEeugKuRu1b-FYw" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_OvAYwTsuEeugKuRu1b-FYw" operator="OR">
                  <left xsi:type="STE:BinaryExpression" operator="EQUAL">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Block_LSCSep1_LSCSep2">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_BoundaryPressure"/>
                    </left>
                    <right xsi:type="STE:Literal" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:BinaryExpression" operator="EQUAL">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Block_SSC_PAC">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_BoundaryPressure"/>
                      </left>
                      <right xsi:type="STE:Literal" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:BinaryExpression" operator="LESSER_EQUAL">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Block_Stack_Crane">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_PressureSensor"/>
                        </left>
                        <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="10000"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:BinaryExpression" operator="LESSER_EQUAL">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Block_Stamp_RC">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_PressureSensor"/>
                          </left>
                          <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="10000"/>
                        </left>
                        <right xsi:type="STE:BinaryExpression" operator="EQUAL">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="EngergyMonitoringHardware">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PressureSensor_4bar">
                              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_PressureReached"/>
                            </innerVariable>
                          </left>
                          <right xsi:type="STE:Literal" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                        </right>
                      </right>
                    </right>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_OvAYxDsuEeugKuRu1b-FYw" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="22" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                <right xsi:type="STE:Literal" id="_OvAYwzsuEeugKuRu1b-FYw" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_OvAYxzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="38" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
                  <parameters>
                    <assignedValue xsi:type="STE:UnaryExpression" id="_OvAYxTsuEeugKuRu1b-FYw" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                      <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Q"/>
                      </subexpression>
                    </assignedValue>
                    <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
                  </parameters>
                  <parameters>
                    <assignedValue xsi:type="STE:Literal" id="_OvAYxjsuEeugKuRu1b-FYw" dataType="TIME" expressionType="LITERAL" symbol="T#500MS"/>
                    <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
                  </parameters>
                </functionCall>
              </substatements>
              <substatements xsi:type="ST:If" id="_OvAY4DsuEeugKuRu1b-FYw" statementType="IF" absStartLine="11" absEndLine="35" relStartLine="11" relEndLine="35" startColumnPos="1" endColumnPos="6" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                <conditionalBlocks id="_OvAY1DsuEeugKuRu1b-FYw" statementType="CONDITIONAL_BLOCK" absStartLine="11" absEndLine="22" relStartLine="11" relEndLine="22" startColumnPos="1" endColumnPos="41" structuredText="_OvAYwDsuEeugKuRu1b-FYw" else="false">
                  <condition xsi:type="STE:UnaryExpression" id="_OvAYyTsuEeugKuRu1b-FYw" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_OvAYyDsuEeugKuRu1b-FYw" operator="LESSER_THAN">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ET"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="DIV">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
                        </left>
                        <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2"/>
                      </right>
                    </subexpression>
                  </condition>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_OvAYyjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="2" endColumnPos="36" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_OvAYyzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="2" endColumnPos="51" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_OvAYzDsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="2" endColumnPos="36" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_OvAYzTsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" startColumnPos="2" endColumnPos="41" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_OvAYzjsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="2" endColumnPos="40" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_OvAYzzsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="2" endColumnPos="37" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_OvAY0DsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="2" endColumnPos="52" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_OvAY0TsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="2" endColumnPos="37" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_OvAY0jsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="2" endColumnPos="42" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_OvAY0zsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="2" endColumnPos="41" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_Off"/>
                  </substatements>
                </conditionalBlocks>
                <conditionalBlocks id="_OvAY3zsuEeugKuRu1b-FYw" statementType="CONDITIONAL_BLOCK" absStartLine="23" absEndLine="34" relStartLine="23" relEndLine="34" startColumnPos="1" endColumnPos="40" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                  <substatements xsi:type="ST:FunctionCallStatement" id="_OvAY1TsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="2" endColumnPos="37" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_OvAY1jsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="2" endColumnPos="52" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_OvAY1zsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="2" endColumnPos="37" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_OvAY2DsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="2" endColumnPos="42" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_OvAY2TsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="2" endColumnPos="41" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_OvAY2jsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" startColumnPos="2" endColumnPos="36" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_OvAY2zsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="31" absEndLine="31" relStartLine="31" relEndLine="31" startColumnPos="2" endColumnPos="51" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_OvAY3DsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="2" endColumnPos="36" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_OvAY3TsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="2" endColumnPos="41" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_OvAY3jsuEeugKuRu1b-FYw" statementType="FUNCTION_CALL" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="2" endColumnPos="40" structuredText="_OvAYwDsuEeugKuRu1b-FYw">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_On"/>
                  </substatements>
                </conditionalBlocks>
              </substatements>
            </conditionalBlocks>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.18/@actions.15/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Call_All" incomingTransitions="//@resources.0/@pous.18/@actions.15/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.18/@actions.15/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <transitions condition="Not AutomaticExecuteCompleted AND SFCResetCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.18/@actions.15/@implementation/@steps.0" targetStep="//@resources.0/@pous.18/@actions.15/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.18/@actions.15/@implementation/@steps.1" targetStep="//@resources.0/@pous.18/@actions.15/@implementation/@steps.0" local_ID="5"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.18/@actions.16/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Stack_ES" incomingTransitions="//@resources.0/@pous.18/@actions.16/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.18/@actions.16/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Crane_ES" incomingTransitions="//@resources.0/@pous.18/@actions.16/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.18/@actions.16/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="LargeSortingConveyor_ES" incomingTransitions="//@resources.0/@pous.18/@actions.16/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.18/@actions.16/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="PicAlphaConveyor_ES" incomingTransitions="//@resources.0/@pous.18/@actions.16/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.18/@actions.16/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="SmallSortingConveyor_ES" incomingTransitions="//@resources.0/@pous.18/@actions.16/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.18/@actions.16/@implementation/@transitions.5" local_ID="15" stepLevel="5"/>
          <steps name="RefillConveyor_ES" incomingTransitions="//@resources.0/@pous.18/@actions.16/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.18/@actions.16/@implementation/@transitions.6" local_ID="18" stepLevel="6"/>
          <steps name="Stamp_ES" incomingTransitions="//@resources.0/@pous.18/@actions.16/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.18/@actions.16/@implementation/@transitions.7" local_ID="21" stepLevel="7"/>
          <steps name="PicAlpha_ES" incomingTransitions="//@resources.0/@pous.18/@actions.16/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.18/@actions.16/@implementation/@transitions.8" local_ID="24" stepLevel="8"/>
          <steps name="Emergency_Handled" incomingTransitions="//@resources.0/@pous.18/@actions.16/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.18/@actions.16/@implementation/@transitions.9" local_ID="27" stepLevel="9">
            <actions xsi:type="SFC:SimpleAction" localId="28" qualifier="N" actionVariable="//@resources.0/@pous.18/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.18/@actions.16/@implementation/@steps.0" targetStep="//@resources.0/@pous.18/@actions.16/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Stack.EmergencyHandled" sourceStep="//@resources.0/@pous.18/@actions.16/@implementation/@steps.1" targetStep="//@resources.0/@pous.18/@actions.16/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Crane.EmergencyHandled" sourceStep="//@resources.0/@pous.18/@actions.16/@implementation/@steps.2" targetStep="//@resources.0/@pous.18/@actions.16/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="LargeSortingConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.18/@actions.16/@implementation/@steps.3" targetStep="//@resources.0/@pous.18/@actions.16/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="PicAlphaConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.18/@actions.16/@implementation/@steps.4" targetStep="//@resources.0/@pous.18/@actions.16/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="SmallSortingConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.18/@actions.16/@implementation/@steps.5" targetStep="//@resources.0/@pous.18/@actions.16/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="RefillConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.18/@actions.16/@implementation/@steps.6" targetStep="//@resources.0/@pous.18/@actions.16/@implementation/@steps.7" local_ID="20"/>
          <transitions condition="Stamp.EmergencyHandled" sourceStep="//@resources.0/@pous.18/@actions.16/@implementation/@steps.7" targetStep="//@resources.0/@pous.18/@actions.16/@implementation/@steps.8" local_ID="23"/>
          <transitions condition="PicAlpha.EmergencyHandled" sourceStep="//@resources.0/@pous.18/@actions.16/@implementation/@steps.8" targetStep="//@resources.0/@pous.18/@actions.16/@implementation/@steps.9" local_ID="26"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.18/@actions.16/@implementation/@steps.9" targetStep="//@resources.0/@pous.18/@actions.16/@implementation/@steps.0" local_ID="31"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Initialisation_Init" outgoingTransitions="//@resources.0/@pous.18/@actions.17/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" actionVariable="//@resources.0/@pous.18/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Stamp_Init" outgoingTransitions="//@resources.0/@pous.18/@actions.17/@implementation/@transitions.1" local_ID="6"/>
          <steps name="Crane_Init" incomingTransitions="//@resources.0/@pous.18/@actions.17/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.18/@actions.17/@implementation/@transitions.2" local_ID="9"/>
          <steps name="PicAlpha_Init" incomingTransitions="//@resources.0/@pous.18/@actions.17/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.18/@actions.17/@implementation/@transitions.3" local_ID="12"/>
          <steps name="LargeSortingConveyor_Init" outgoingTransitions="//@resources.0/@pous.18/@actions.17/@implementation/@transitions.4" local_ID="16"/>
          <steps name="PicAlphaConveyor_Init" outgoingTransitions="//@resources.0/@pous.18/@actions.17/@implementation/@transitions.4" local_ID="17"/>
          <steps name="SmallSortingConveyor_Init" outgoingTransitions="//@resources.0/@pous.18/@actions.17/@implementation/@transitions.4" local_ID="18"/>
          <steps name="RefillConveoyr_Init" incomingTransitions="//@resources.0/@pous.18/@actions.17/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.18/@actions.17/@implementation/@transitions.4" local_ID="19"/>
          <steps name="Stack_Init" incomingTransitions="//@resources.0/@pous.18/@actions.17/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.18/@actions.17/@implementation/@transitions.5" local_ID="23"/>
          <steps name="Init_Completed" incomingTransitions="//@resources.0/@pous.18/@actions.17/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.18/@actions.17/@implementation/@transitions.6" local_ID="26">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" actionVariable="//@resources.0/@pous.18/@declaration/@outputVariables.3"/>
          </steps>
          <steps name="FaultAirPressureDetection" outgoingTransitions="//@resources.0/@pous.18/@actions.17/@implementation/@transitions.6" local_ID="29"/>
          <steps name="EmergencyChecking" outgoingTransitions="//@resources.0/@pous.18/@actions.17/@implementation/@transitions.6" local_ID="30"/>
          <steps name="ManuelModeCehcking" incomingTransitions="//@resources.0/@pous.18/@actions.17/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.18/@actions.17/@implementation/@transitions.6" local_ID="31" stepLevel="1"/>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.18/@actions.17/@implementation/@steps.0" targetStep="//@resources.0/@pous.18/@actions.17/@implementation/@steps.12" local_ID="4"/>
          <transitions condition="Stamp.InitCompleted" sourceStep="//@resources.0/@pous.18/@actions.17/@implementation/@steps.1" targetStep="//@resources.0/@pous.18/@actions.17/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Crane.InitCompleted" sourceStep="//@resources.0/@pous.18/@actions.17/@implementation/@steps.2" targetStep="//@resources.0/@pous.18/@actions.17/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="PicAlpha.InitCompleted" sourceStep="//@resources.0/@pous.18/@actions.17/@implementation/@steps.3" targetStep="//@resources.0/@pous.18/@actions.17/@implementation/@steps.7" local_ID="14"/>
          <transitions condition="LargeSortingConveyor.InitCompleted" sourceStep="//@resources.0/@pous.18/@actions.17/@implementation/@steps.4 //@resources.0/@pous.18/@actions.17/@implementation/@steps.5 //@resources.0/@pous.18/@actions.17/@implementation/@steps.6 //@resources.0/@pous.18/@actions.17/@implementation/@steps.7" targetStep="//@resources.0/@pous.18/@actions.17/@implementation/@steps.8" local_ID="22"/>
          <transitions condition="Stack.InitCompleted" sourceStep="//@resources.0/@pous.18/@actions.17/@implementation/@steps.8" targetStep="//@resources.0/@pous.18/@actions.17/@implementation/@steps.9" local_ID="25"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.18/@actions.17/@implementation/@steps.9 //@resources.0/@pous.18/@actions.17/@implementation/@steps.10 //@resources.0/@pous.18/@actions.17/@implementation/@steps.11 //@resources.0/@pous.18/@actions.17/@implementation/@steps.12" targetStep="//@resources.0/@pous.18/@actions.17/@implementation/@steps.0" local_ID="34"/>
        </implementation>
      </actions>
    </pous>
    <tasks name="PlcTask" controlledPrograms="//@resources.0/@pous.0"/>
    <types name="RFID_ByteArray">
      <variables xsi:type="C:ArrayVariable" name="RFID_Data" scope="VAR" type="BYTE" typeName="BYTE" array="true">
        <location/>
        <lowerBound xsi:type="STE:Literal" id="_Osw9EDsuEeugKuRu1b-FYw" dataType="DINT" expressionType="LITERAL" symbol="0"/>
        <upperBound xsi:type="STE:Literal" id="_OsxkIDsuEeugKuRu1b-FYw" dataType="DINT" expressionType="LITERAL" symbol="127"/>
      </variables>
    </types>
  </resources>
</C:Configuration>
